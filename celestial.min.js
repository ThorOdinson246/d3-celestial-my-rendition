!(function () {
  function t(t, e) {
    return (function (t, e) {
      var a, n, r, s, o, i, l, c, p, d;
      return e
        ? ((i = t[0]),
          i < 0 && (i += Z),
          (l = t[1]),
          (i -= e[0]),
          (s = e[1]),
          (o = e[2]),
          (a =
            Math.sin(l) * Math.sin(s) -
            Math.cos(l) * Math.cos(s) * Math.cos(i)),
          Math.abs(a) < 1e-5 &&
            (a =
              -Math.cos(l + s) + Math.cos(l) * Math.cos(s) * (1 - Math.cos(i))),
          (n = -Math.cos(l) * Math.sin(i)),
          (c = 0 !== a || 0 !== n ? Math.atan2(n, a) : i - Math.PI),
          (p = o + c),
          p > Math.PI && (p -= Z),
          i % Math.PI == 0
            ? ((d = l + Math.cos(i) * s),
              d > X && (d = Math.PI - d),
              d < -X && (d = -Math.PI - d))
            : ((r =
                Math.sin(l) * Math.cos(s) +
                Math.cos(l) * Math.sin(s) * Math.cos(i)),
              Math.abs(r) > 0.99
                ? ((d = Math.abs(Math.acos(Math.sqrt(a * a + n * n)))),
                  r < 0 && (d *= -1))
                : (d = Math.asin(r))),
          [p, d])
        : t;
    })(
      t.map(function (t) {
        return t * tt;
      }),
      e
    ).map(function (t) {
      return t / tt;
    });
  }
  function e(t) {
    if (null === t || t.length <= 0) return [0, 0, 0];
    var e = K.equatorial;
    return t[2] || (t[2] = 0), [e[0] - t[0], e[1] - t[1], e[2] + t[2]];
  }
  function a(t, e) {
    var a = t.getUTCFullYear(),
      n = t.getUTCMonth() + 1,
      r = t.getUTCDate(),
      s = t.getUTCHours(),
      o = t.getUTCMinutes(),
      i = t.getUTCSeconds();
    (1 != n && 2 != n) || ((a -= 1), (n += 12));
    var l = Math.floor(a / 100),
      c =
        2 -
        l +
        Math.floor(l / 4) +
        Math.floor(365.25 * a) +
        Math.floor(30.6001 * (n + 1)) -
        730550.5 +
        r +
        (s + o / 60 + i / 3600) / 24,
      p = c / 36525,
      d =
        280.46061837 +
        360.98564736629 * c +
        387933e-9 * p * p -
        (p * p * p) / 3871e4 +
        e;
    if (d > 0) for (; d > 360; ) d -= 360;
    else for (; d < 0; ) d += 360;
    return d;
  }
  function n(t, e) {
    if ("equatorial" === e) return t;
    for (var a = et[e], n = t.features, r = 0; r < n.length; r++)
      n[r].geometry.coordinates = i(n[r], a);
    return t;
  }
  function r(t) {
    var e = [];
    for (var a in t)
      if (g(t, a) && -1 !== _.planets.which.indexOf(a)) {
        var n = St().id(a);
        g(t[a], "parent") && n.parentBody(t[a].parent),
          n.elements(t[a].elements[0]).params(t[a]),
          "ter" === a ? (U.origin = n) : e.push(n);
      }
    return e;
  }
  function s(t, e) {
    if (((e = e || U.date()), U.origin)) {
      var a,
        n = U.origin(e).spherical();
      return (
        U.container.selectAll(".planet").each(function (r) {
          t === r.id() && (a = r(e).equatorial(n));
        }),
        a
      );
    }
  }
  function o(t) {
    var e = {
        type: "FeatureCollection",
        features: [
          {
            type: "Feature",
            geometry: { type: "MultiPolygon", coordinates: [] },
          },
        ],
      },
      a = t.features[0].geometry.coordinates[0];
    e.features[0].geometry.coordinates[0] = [];
    for (var n = 0; n < a.length; n++)
      e.features[0].geometry.coordinates[0][n] = a[n].slice().reverse();
    return e;
  }
  function i(e, a) {
    var n = [];
    switch (e.geometry.type) {
      case "Point":
        n = t(e.geometry.coordinates, a);
        break;
      case "LineString":
        n.push(p(e.geometry.coordinates, a));
        break;
      case "MultiLineString":
        n = d(e.geometry.coordinates, a);
        break;
      case "Polygon":
        n.push(p(e.geometry.coordinates[0], a));
        break;
      case "MultiPolygon":
        n.push(d(e.geometry.coordinates[0], a));
    }
    return n;
  }
  function l(t, e) {
    var a = [];
    if (!e) return [];
    M(e) || (e = [e]);
    for (var n = 0; n < e.length; n++)
      switch (e[n]) {
        case "center":
          a =
            "lat" === t
              ? a.concat(c(t, _.center[0], "N"))
              : a.concat(c(t, _.center[1], "S"));
          break;
        case "outline":
          "lon" === t
            ? (a = (a = a.concat(c(t, _.center[1] - 89.99, "S"))).concat(
                c(t, _.center[1] + 89.99, "N")
              ))
            : (a = (a = a.concat(c(t, _.center[0] - 179.99, "E"))).concat(
                c(t, _.center[0] + 179.99, "W")
              ));
          break;
        default:
          if (v(e[n])) {
            a =
              "lat" === t
                ? a.concat(c(t, e[n], "N"))
                : a.concat(c(t, e[n], "S"));
            break;
          }
      }
    return (function (t) {
      for (var e = [], a = 0; a < t.length; a++) {
        var n = {
          type: "Feature",
          id: a,
          properties: {},
          geometry: { type: "Point" },
        };
        (n.properties.value = t[a].value),
          (n.properties.orientation = t[a].orientation),
          (n.geometry.coordinates = t[a].coordinates),
          e.push(n);
      }
      return e;
    })(a);
  }
  function c(t, e, a) {
    var n,
      r,
      s,
      o,
      i,
      l = t,
      c = [],
      p = e;
    "equatorial" === _.transform && "lon" === l && (l = "ra"),
      "ra" === l
        ? ((n = 0), (r = 23), (s = 1))
        : "lon" === l
        ? ((n = 0), (r = 350), (s = 10))
        : ((n = -80), (r = 80), (s = 10));
    for (var d = n; d <= r; d += s) {
      var u = a;
      "lat" === l
        ? ((i = [p, d]), (o = d.toString() + "°"), (u += d < 0 ? "S" : "N"))
        : "ra" === l
        ? ((i = [15 * d, p]), (o = d.toString() + "ʰ"))
        : ((i = [d, p]), (o = d.toString() + "°")),
        c.push({ coordinates: i, value: o, orientation: u });
    }
    return c;
  }
  function p(e, a) {
    for (var n = [], r = 0; r < e.length; r++) n.push(t(e[r], a));
    return n;
  }
  function d(t, e) {
    for (var a = [], n = 0; n < t.length; n++) a.push(p(t[n], e));
    return a;
  }
  function u(t) {
    return M(t)
      ? t.length >= 3
        ? t
        : 1 === t.length
        ? [t[0], t[0], t[0]]
        : 2 === t.length
        ? [t[0], t[1], t[1]]
        : void 0
      : [t, t, t];
  }
  function f(t) {
    return document.querySelector(N + " #" + t);
  }
  function h(t) {
    return t + "px";
  }
  function m(t, e) {
    return Math.round(Math.pow(10, e) * t) / Math.pow(10, e);
  }
  function y(t) {
    return t < 10 ? "0" + t : t;
  }
  function g(t, e) {
    return null !== t && hasOwnProperty.call(t, e);
  }
  function v(t) {
    return null !== t && !isNaN(parseFloat(t)) && isFinite(t);
  }
  function M(t) {
    return null !== t && "[object Array]" === Object.prototype.toString.call(t);
  }
  function b(t, e, a) {
    var n = e.valueOf() - t.valueOf();
    switch (a || "d") {
      case "y":
      case "yr":
        n /= 31556926080;
        break;
      case "m":
      case "mo":
        n /= 26298e5;
        break;
      case "d":
      case "dy":
        n /= 864e5;
        break;
      case "h":
      case "hr":
        n /= 36e5;
        break;
      case "n":
      case "mn":
        n /= 6e4;
        break;
      case "s":
      case "sec":
        n /= 1e3;
    }
    return Math.floor(n);
  }
  function w(t) {
    if (t) {
      var e = t.split(".");
      if (
        !(e.length < 1) &&
        (((e = e[0].split("-"))[0] = e[0].replace(/\D/g, "")), e[0])
      )
        return (
          (e[1] = e[1] ? e[1].replace(/\D/g, "") : "1"),
          (e[2] = e[2] ? e[2].replace(/\D/g, "") : "1"),
          new Date(Date.UTC(e[0], e[1] - 1, e[2]))
        );
    }
  }
  function k(t, e, a) {
    return (
      (t = (t * tt + Z) % Z),
      (e = (e * tt + Z) % Z),
      Math.abs(t - e) > Math.PI && (t > e ? (t -= Z) : e > t && (e -= Z)),
      d3.interpolateNumber(t / tt, e / tt)
    );
  }
  function x(e) {
    function a() {
      !1 !== j(this) && !1 !== n() && U.rotate(d);
    }
    function n() {
      var t = D("centerx"),
        e = D("centery"),
        a = D("centerz");
      if (t && e) {
        if ("equatorial" !== d.transform) d.center[0] = parseFloat(t.value);
        else {
          var n = parseFloat(t.value);
          d.center[0] = n > 12 ? 15 * n - 360 : 15 * n;
        }
        d.center[1] = parseFloat(e.value);
        var r = parseFloat(a.value);
        return (
          (d.center[2] = isNaN(r) ? 0 : r), "" !== t.value && "" !== e.value
        );
      }
    }
    function r(t) {
      var e = d3.time.format("%Y%m%dT%H%M%S%Z"),
        a = "d3-celestial",
        n = U.date();
      return n && (a += e(n)), a + t;
    }
    function s(e) {
      var a,
        n = [],
        r = rt;
      if ("---" === e)
        return (
          (U.constellation = null),
          1 !== (a = U.zoomBy()) &&
            n.push({ param: "zoom", value: 1 / a, duration: 0 }),
          void U.animate(n, !1)
        );
      if (
        (function (t) {
          var e = typeof t;
          return "function" === e || ("object" === e && !!t);
        })(U.constellations) &&
        g(U.constellations, e)
      ) {
        var s = U.constellations[e],
          o = t(s.center, et[r.transform]);
        (r.center = o),
          I(r.center, r.transform),
          1 !== (a = U.zoomBy()) &&
            n.push({ param: "zoom", value: 1 / a, duration: 0 }),
          n.push({ param: "center", value: o, duration: 0 });
        var i = 1 + 360 / s.scale;
        n.push({ param: "zoom", value: i, duration: 0 }),
          (U.constellation = e),
          U.animate(n, !1);
      }
    }
    function o() {
      var t,
        e = this;
      switch ((Object.assign(d, st.set()), e.type)) {
        case "checkbox":
          (t = e.checked), S(e);
          break;
        case "number":
          if (!1 === j(e)) return;
          t = parseFloat(e.value);
          break;
        case "color":
          if (!1 === P(e)) return;
          t = e.value;
          break;
        case "text":
          if (-1 === e.id.search(/fill$/)) return;
          if (!1 === P(e)) return;
          t = e.value;
          break;
        case "select-one":
          t = e.value;
      }
      null !== t &&
        (i(e.id, t),
        "dsos-style-fill" === e.id
          ? (i("dsos-style-stroke", t), i("dsos-nameStyle-fill", t))
          : "constellations-namesType" === e.id
          ? L()
          : "lang" === e.id
          ? l(t)
          : "advanced" === e.id && q(t),
        n(),
        Object.assign(rt, d),
        U.apply(d));
    }
    function i(t, e) {
      var a = t.split("-");
      switch (a.length) {
        case 1:
          d[a[0]] = e;
          break;
        case 2:
          d[a[0]][a[1]] = e;
          break;
        case 3:
          d[a[0]][a[1]][a[2]] = e;
          break;
        default:
          return;
      }
    }
    function l(t) {
      Object.assign(d, rt), (d.lang = t);
      for (var e = ["constellations", "planets"], a = 0; a < e.length; a++)
        g(lt[e[a]][d.culture].names, t)
          ? (d[e[a]].namesType = t)
          : g(lt[e[a]][d.culture].names, "desig")
          ? (d[e[a]].namesType = "desig")
          : (d[e[a]].namesType = "name");
      return (
        g(lt.dsonames[d.culture].names, t)
          ? (d.dsos.namesType = t)
          : (d.dsos.namesType = "desig"),
        g(lt.starnames[d.culture].propername, t)
          ? (d.stars.propernameType = t)
          : (d.stars.propernameType = "desig"),
        Object.assign(rt, d),
        c(),
        L(),
        d
      );
    }
    function c() {
      d3.selectAll(
        N + " ~ #celestial-form input, " + N + " ~  #celestial-form select"
      ).each(function (t, e) {
        if (void 0 !== this) {
          var a = this.id;
          if ("lat" === a || "lon" === a)
            M(d.geopos) &&
              (this.value = "lat" === a ? d.geopos[0] : d.geopos[1]);
          else if (-1 !== a.search(/center/)) {
            if (M(d.center))
              switch (a) {
                case "centerx":
                  this.value = d.center[0];
                  break;
                case "centery":
                  this.value = d.center[1];
                  break;
                case "centerz":
                  this.value = d.center[2] || 0;
              }
          } else {
            if (
              "datetime" === a ||
              "hr" === a ||
              "min" === a ||
              "sec" === a ||
              "tz" === a
            )
              return;
            if ("button" !== this.type) {
              var n = p(a);
              switch (this.type) {
                case "checkbox":
                  (this.checked = n), S(a);
                  break;
                case "number":
                  if (!1 === j(this)) break;
                  this.value = parseFloat(p(a));
                  break;
                case "color":
                  if (!1 === P(this)) break;
                  this.value = n;
                  break;
                case "text":
                  if (-1 === a.search(/fill$/)) break;
                  if (!1 === P(this)) break;
                  this.value = n;
                  break;
                case "select-one":
                  this.value = n;
              }
            }
          }
        }
      });
    }
    function p(t) {
      var e = t.split("-");
      switch (e.length) {
        case 1:
          return d[e[0]];
        case 2:
          return d[e[0]][e[1]];
        case 3:
          return d[e[0]][e[1]][e[2]];
        default:
          return;
      }
    }
    var d = st.set(e),
      u = U.projections(),
      f = U.eulerAngles(),
      h = d3.select(N + " ~ #celestial-form");
    h.size() < 1 &&
      (h = d3
        .select(N)
        .select(function () {
          return this.parentNode;
        })
        .append("div")
        .attr("id", "celestial-form"));
    var m = h
        .append("div")
        .attr("class", "ctrl")
        .append("form")
        .attr("id", "params")
        .attr("name", "params")
        .attr("method", "get")
        .attr("action", "#"),
      y = m.append("div").attr("class", "col").attr("id", "general");
    y
      .append("label")
      .attr("title", "Map width in pixel, 0 indicates full width")
      .attr("for", "width")
      .html("Width "),
      y
        .append("input")
        .attr("type", "number")
        .attr("maxlength", "4")
        .attr("max", "20000")
        .attr("min", "0")
        .attr("title", "Map width")
        .attr("id", "width")
        .attr("value", d.width)
        .on("change", function () {
          var t = this.value;
          !1 !== j(this) && ((d.width = t), U.resize({ width: t }));
        }),
      y.append("span").html("px"),
      y
        .append("label")
        .attr(
          "title",
          "Map projection, (hemi) indicates hemispherical projection"
        )
        .attr("for", "projection")
        .html("Projection");
    var v = y
        .append("select")
        .attr("id", "projection")
        .on("change", function () {
          this && ((d.projection = this.value), st.set(d), U.reproject(d));
        }),
      b = 0,
      w = Object.keys(u).map(function (t, e) {
        var a = u[t].clip && !0 === u[t].clip ? u[t].n + " (hemi)" : u[t].n;
        return t === d.projection && (b = e), { o: t, n: a };
      });
    v
      .selectAll("option")
      .data(w)
      .enter()
      .append("option")
      .attr("value", function (t) {
        return t.o;
      })
      .text(function (t) {
        return t.n;
      }),
      v.property("selectedIndex", b),
      (b = 0),
      y
        .append("label")
        .attr("title", "Coordinate space in which the map is displayed")
        .attr("for", "transform")
        .html("Coordinates"),
      (v = y
        .append("select")
        .attr("id", "transform")
        .on("change", function () {
          var t = this.value,
            e = A(t, d.transform);
          null !== e && (d.center[0] = e),
            (d.transform = t),
            st.set(d),
            U.reload(d);
        })),
      (w = Object.keys(f).map(function (t, e) {
        return (
          t === d.transform && (b = e),
          {
            o: t,
            n: t.replace(/^([a-z])/, function (t, e) {
              return e.toUpperCase();
            }),
          }
        );
      })),
      v
        .selectAll("option")
        .data(w)
        .enter()
        .append("option")
        .attr("value", function (t) {
          return t.o;
        })
        .text(function (t) {
          return t.n;
        }),
      v.property("selectedIndex", b),
      y.append("br"),
      y
        .append("label")
        .attr(
          "title",
          "Center coordinates long/lat in selected coordinate space"
        )
        .attr("for", "centerx")
        .html("Center"),
      y
        .append("input")
        .attr("type", "number")
        .attr("id", "centerx")
        .attr("title", "Center right ascension/longitude")
        .attr("max", "24")
        .attr("min", "0")
        .attr("step", "0.1")
        .on("change", a),
      y.append("span").attr("id", "cxunit").html("h"),
      y
        .append("input")
        .attr("type", "number")
        .attr("id", "centery")
        .attr("title", "Center declination/latitude")
        .attr("max", "90")
        .attr("min", "-90")
        .attr("step", "0.1")
        .on("change", a),
      y.append("span").html("°"),
      y
        .append("label")
        .attr("title", "Orientation")
        .attr("for", "centerz")
        .html("Orientation"),
      y
        .append("input")
        .attr("type", "number")
        .attr("id", "centerz")
        .attr("title", "Center orientation")
        .attr("max", "180")
        .attr("min", "-180")
        .attr("step", "0.1")
        .on("change", a),
      y.append("span").html("°"),
      y
        .append("label")
        .attr("for", "orientationfixed")
        .attr("class", "advanced")
        .html("Fixed"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "orientationfixed")
        .attr("class", "advanced")
        .property("checked", d.orientationfixed)
        .on("change", o),
      y
        .append("label")
        .attr("title", "Center and zoom in on this constellation")
        .attr("for", "constellation")
        .html("Show"),
      y
        .append("select")
        .attr("id", "constellation")
        .on("change", function () {
          var t = this.value;
          t && s(t);
        }),
      I(d.center, d.transform),
      (y = m.append("div").attr("class", "col").attr("id", "stars"))
        .append("label")
        .attr("class", "header")
        .attr("for", "stars-show")
        .html("Stars"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "stars-show")
        .property("checked", d.stars.show)
        .on("change", o),
      y.append("label").attr("for", "stars-limit").html("down to magnitude"),
      y
        .append("input")
        .attr("type", "number")
        .attr("id", "stars-limit")
        .attr("title", "Star display limit (magnitude)")
        .attr("value", d.stars.limit)
        .attr("max", "6")
        .attr("min", "-1")
        .attr("step", "0.1")
        .on("change", o),
      y
        .append("label")
        .attr("for", "stars-colors")
        .html("with spectral colors"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "stars-colors")
        .property("checked", d.stars.colors)
        .on("change", o),
      y.append("label").attr("for", "stars-color").html("or default color "),
      y
        .append("input")
        .attr("type", "color")
        .attr("autocomplete", "off")
        .attr("id", "stars-style-fill")
        .attr("title", "Star color")
        .property("value", d.stars.style.fill)
        .on("change", o),
      y.append("br");
    var k = lt.starnames[d.culture] || lt.starnames.iau;
    for (var x in k)
      if (g(k, x)) {
        var z = Object.keys(k[x]);
        z.length > 1
          ? (y
              .append("label")
              .attr("for", "stars-" + x)
              .html("Show"),
            (b = 0),
            y
              .append("label")
              .attr("title", "Type of star name")
              .attr("id", "label-propername")
              .attr("for", "stars-" + x + "Type")
              .html(function () {
                return "propername" === x ? "proper names" : "";
              }),
            (v = y
              .append("select")
              .attr("id", "stars-" + x + "Type")
              .attr("class", function () {
                return "propername" === x ? "advanced" : "";
              })
              .on("change", o)),
            (w = z.map(function (t, e) {
              return t === d.stars[x + "Type"] && (b = e), { o: t, n: k[x][t] };
            })),
            v
              .selectAll("option")
              .data(w)
              .enter()
              .append("option")
              .attr("value", function (t) {
                return t.o;
              })
              .text(function (t) {
                return t.n;
              }),
            v.property("selectedIndex", b),
            y
              .append("input")
              .attr("type", "checkbox")
              .attr("id", "stars-" + x)
              .property("checked", d.stars[x])
              .on("change", o))
          : 1 === z.length &&
            (y
              .append("label")
              .attr("for", "stars-" + x)
              .html(" " + k[x][z[0]]),
            y
              .append("input")
              .attr("type", "checkbox")
              .attr("id", "stars-" + x)
              .property("checked", d.stars[x])
              .on("change", o)),
          y
            .append("label")
            .attr("for", "stars-" + x + "Limit")
            .html("down to mag"),
          y
            .append("input")
            .attr("type", "number")
            .attr("id", "stars-" + x + "Limit")
            .attr("title", "Star name display limit (magnitude)")
            .attr("value", d.stars[x + "Limit"])
            .attr("max", "6")
            .attr("min", "-1")
            .attr("step", "0.1")
            .on("change", o);
      }
    for (x in (y.append("br"),
    y
      .append("label")
      .attr("for", "stars-size")
      .attr("class", "advanced")
      .html("Stellar disk size: base"),
    y
      .append("input")
      .attr("type", "number")
      .attr("id", "stars-size")
      .attr("class", "advanced")
      .attr("title", "Size of the displayed star disk; base")
      .attr("value", d.stars.size)
      .attr("max", "100")
      .attr("min", "0")
      .attr("step", "0.1")
      .on("change", o),
    y
      .append("label")
      .attr("for", "stars-exponent")
      .attr("class", "advanced")
      .html(" * e ^ (exponent"),
    y
      .append("input")
      .attr("type", "number")
      .attr("id", "stars-exponent")
      .attr("class", "advanced")
      .attr("title", "Size of the displayed star disk; exponent")
      .attr("value", d.stars.exponent)
      .attr("max", "3")
      .attr("min", "-1")
      .attr("step", "0.01")
      .on("change", o),
    y
      .append("span")
      .attr("class", "advanced")
      .text(" * (magnitude + 2))  [* adaptation]"),
    S(D("stars-show")),
    (y = m.append("div").attr("class", "col").attr("id", "dsos"))
      .append("label")
      .attr("class", "header")
      .attr("title", "Deep Space Objects")
      .attr("for", "dsos-show")
      .html("DSOs"),
    y
      .append("input")
      .attr("type", "checkbox")
      .attr("id", "dsos-show")
      .property("checked", d.dsos.show)
      .on("change", o),
    y.append("label").attr("for", "dsos-limit").html("down to mag"),
    y
      .append("input")
      .attr("type", "number")
      .attr("id", "dsos-limit")
      .attr("title", "DSO display limit (magnitude)")
      .attr("value", d.dsos.limit)
      .attr("max", "6")
      .attr("min", "0")
      .attr("step", "0.1")
      .on("change", o),
    y.append("label").attr("for", "dsos-colors").html("with symbol colors"),
    y
      .append("input")
      .attr("type", "checkbox")
      .attr("id", "dsos-colors")
      .property("checked", d.dsos.colors)
      .on("change", o),
    y.append("label").attr("for", "dsos-color").html("or default color "),
    y
      .append("input")
      .attr("type", "color")
      .attr("autocomplete", "off")
      .attr("id", "dsos-style-fill")
      .attr("title", "DSO color")
      .property("value", d.dsos.style.fill)
      .on("change", o),
    y.append("br"),
    (k = lt.dsonames[d.culture] || lt.dsonames.iau)))
      if (g(k, x)) {
        var T = Object.keys(k[x]);
        y
          .append("label")
          .attr("for", "dsos-" + x)
          .html("Show"),
          (b = 0),
          y
            .append("label")
            .attr("title", "Type of DSO name")
            .attr("for", "dsos-" + x + "Type")
            .attr("class", "advanced")
            .html(""),
          (v = y
            .append("select")
            .attr("id", "dsos-" + x + "Type")
            .attr("class", "advanced")
            .on("change", o)),
          (w = T.map(function (t, e) {
            return t === d.stars[x + "Type"] && (b = e), { o: t, n: k[x][t] };
          })),
          v
            .selectAll("option")
            .data(w)
            .enter()
            .append("option")
            .attr("value", function (t) {
              return t.o;
            })
            .text(function (t) {
              return t.n;
            }),
          v.property("selectedIndex", b),
          y
            .append("label")
            .attr("for", "dsos-" + x)
            .html("names"),
          y
            .append("input")
            .attr("type", "checkbox")
            .attr("id", "dsos-" + x)
            .property("checked", d.dsos[x])
            .on("change", o);
      }
    for (x in (y
      .append("label")
      .attr("for", "dsos-nameLimit")
      .html("down to mag"),
    y
      .append("input")
      .attr("type", "number")
      .attr("id", "dsos-nameLimit")
      .attr("title", "DSO name display limit (magnitude)")
      .attr("value", d.dsos.nameLimit)
      .attr("max", "6")
      .attr("min", "0")
      .attr("step", "0.1")
      .on("change", o),
    y.append("br"),
    y
      .append("label")
      .attr("for", "dsos-size")
      .attr("class", "advanced")
      .html("DSO symbol size: (base"),
    y
      .append("input")
      .attr("type", "number")
      .attr("id", "dsos-size")
      .attr("class", "advanced")
      .attr("title", "Size of the displayed symbol: base")
      .attr("value", d.dsos.size)
      .attr("max", "100")
      .attr("min", "0")
      .attr("step", "0.1")
      .on("change", o),
    y
      .append("label")
      .attr("for", "dsos-exponent")
      .attr("class", "advanced")
      .html(" * 2 [* adaptation] - magnitude) ^ exponent"),
    y
      .append("input")
      .attr("type", "number")
      .attr("id", "dsos-exponent")
      .attr("class", "advanced")
      .attr("title", "Size of the displayed symbol; exponent")
      .attr("value", d.dsos.exponent)
      .attr("max", "3")
      .attr("min", "-1")
      .attr("step", "0.01")
      .on("change", o),
    S(D("dsos-show")),
    (y = m.append("div").attr("class", "col").attr("id", "constellations"))
      .append("label")
      .attr("class", "header")
      .html("Constellations"),
    (k = lt.constellations[d.culture] || lt.constellations.iau)))
      if (g(k, x)) {
        var F = Object.keys(k[x]);
        F.length > 1
          ? (y
              .append("label")
              .attr("for", "constellations-" + x)
              .html("Show"),
            (b = 0),
            y
              .append("label")
              .attr("title", "Language of constellation names")
              .attr("for", "constellations-" + x + "Type")
              .attr("class", "advanced")
              .html(""),
            (v = y
              .append("select")
              .attr("id", "constellations-" + x + "Type")
              .attr("class", "advanced")
              .on("change", o)),
            (w = F.map(function (t, e) {
              return (
                t === d.constellations[x + "Type"] && (b = e),
                { o: t, n: k[x][t] }
              );
            })),
            v
              .selectAll("option")
              .data(w)
              .enter()
              .append("option")
              .attr("value", function (t) {
                return t.o;
              })
              .text(function (t) {
                return t.n;
              }),
            v.property("selectedIndex", b),
            y
              .append("label")
              .attr("for", "constellations-" + x)
              .html("names"),
            y
              .append("input")
              .attr("type", "checkbox")
              .attr("id", "constellations-" + x)
              .property("checked", d.constellations[x])
              .on("change", o))
          : 1 === F.length &&
            (y
              .append("label")
              .attr("for", "constellations-" + x)
              .attr("class", "advanced")
              .html(" " + k[x][F[0]]),
            y
              .append("input")
              .attr("type", "checkbox")
              .attr("id", "constellations-" + x)
              .attr("class", "advanced")
              .property("checked", d.constellations[x])
              .on("change", o));
      }
    y.append("label").attr("for", "constellations-lines").html(" lines"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "constellations-lines")
        .property("checked", d.constellations.lines)
        .on("change", o),
      y
        .append("label")
        .attr("for", "constellations-bounds")
        .html(" boundaries"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "constellations-bounds")
        .property("checked", d.constellations.bounds)
        .on("change", o),
      S(D("constellations-names")),
      (y = m.append("div").attr("class", "col").attr("id", "lines"))
        .append("label")
        .attr("class", "header")
        .html("Lines"),
      y
        .append("label")
        .attr("title", "Latitude/longitude grid lines")
        .attr("for", "lines-graticule")
        .html("Graticule"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "lines-graticule-show")
        .property("checked", d.lines.graticule.show)
        .on("change", o),
      y.append("label").attr("for", "lines-equatorial").html("Equator"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "lines-equatorial-show")
        .property("checked", d.lines.equatorial.show)
        .on("change", o),
      y.append("label").attr("for", "lines-ecliptic").html("Ecliptic"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "lines-ecliptic-show")
        .property("checked", d.lines.ecliptic.show)
        .on("change", o),
      y.append("label").attr("for", "lines-galactic").html("Galactic plane"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "lines-galactic-show")
        .property("checked", d.lines.galactic.show)
        .on("change", o),
      y
        .append("label")
        .attr("for", "lines-supergalactic")
        .html("Supergalactic plane"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "lines-supergalactic-show")
        .property("checked", d.lines.supergalactic.show)
        .on("change", o),
      (y = m.append("div").attr("class", "col").attr("id", "other"))
        .append("label")
        .attr("class", "header")
        .html("Other"),
      y.append("label").attr("for", "mw-show").html("Milky Way"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "mw-show")
        .property("checked", d.mw.show)
        .on("change", o),
      y
        .append("label")
        .attr("for", "mw-style-fill")
        .attr("class", "advanced")
        .html(" color"),
      y
        .append("input")
        .attr("type", "color")
        .attr("id", "mw-style-fill")
        .attr("class", "advanced")
        .attr("title", "Milky Way color")
        .attr("value", d.mw.style.fill)
        .on("change", o),
      y
        .append("label")
        .attr("for", "mw-style-opacity")
        .attr("class", "advanced")
        .html(" opacity"),
      y
        .append("input")
        .attr("type", "number")
        .attr("id", "mw-style-opacity")
        .attr("class", "advanced")
        .attr("title", "Transparency of each Milky Way layer")
        .attr("value", d.mw.style.opacity)
        .attr("max", "1")
        .attr("min", "0")
        .attr("step", "0.01")
        .on("change", o),
      y.append("label").attr("for", "advanced").html("Advanced options"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "advanced")
        .property("checked", d.advanced)
        .on("change", o),
      y.append("br"),
      y.append("label").attr("for", "background-fill").html("Background color"),
      y
        .append("input")
        .attr("type", "color")
        .attr("id", "background-fill")
        .attr("title", "Background color")
        .attr("value", d.background.fill)
        .on("change", o),
      y
        .append("label")
        .attr("for", "background-opacity")
        .attr("class", "advanced")
        .html("opacity"),
      y
        .append("input")
        .attr("type", "number")
        .attr("id", "background-opacity")
        .attr("class", "advanced")
        .attr("title", "Background opacity")
        .attr("value", d.background.opacity)
        .attr("max", "1")
        .attr("min", "0")
        .attr("step", "0.01")
        .on("change", o),
      y
        .append("label")
        .attr("title", "Star/DSO sizes are increased with higher zoom-levels")
        .attr("for", "adaptable")
        .attr("class", "advanced")
        .html("Adaptable object sizes"),
      y
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "adaptable")
        .attr("class", "advanced")
        .property("checked", d.adaptable)
        .on("change", o);
    var _ = ct[d.culture];
    (b = 0),
      y
        .append("label")
        .attr("title", "General language setting")
        .attr("for", "lang")
        .html("Object names "),
      (v = y.append("select").attr("id", "lang").on("change", o)),
      (w = _.map(function (t, e) {
        return (
          t === d.lang && (b = e),
          { o: t, n: lt.constellations[d.culture].names[t] }
        );
      })),
      (w = [{ o: "---", n: "(Select language)" }].concat(w)),
      v
        .selectAll("option")
        .data(w)
        .enter()
        .append("option")
        .attr("value", function (t) {
          return t.o;
        })
        .text(function (t) {
          return t.n;
        }),
      v.property("selectedIndex", b),
      (y = m.append("div").attr("class", "col").attr("id", "download"))
        .append("label")
        .attr("class", "header")
        .html("Download"),
      y
        .append("input")
        .attr("type", "button")
        .attr("id", "download-png")
        .attr("value", "PNG Image")
        .on("click", function () {
          var t = d3.select("body").append("a").node(),
            e = document.querySelector(N + " canvas");
          (t.download = r(".png")),
            (t.rel = "noopener"),
            (t.href = e
              .toDataURL("image/png")
              .replace("image/png", "image/octet-stream")),
            t.click(),
            d3.select(t).remove();
        }),
      y
        .append("input")
        .attr("type", "button")
        .attr("id", "download-svg")
        .attr("value", "SVG File")
        .on("click", function () {
          return O(r(".svg")), !1;
        }),
      (function () {
        var t,
          e,
          a,
          n = /\d+(\.\d+)?/g,
          r = { s: 6, d: 6 },
          s = U.settings();
        (a = s.dsos.data),
          (t = a.match(n)),
          null !== t && (r.d = parseFloat(t[t.length - 1])),
          6 !== r.d &&
            ((D("dsos-limit").max = r.d), (D("dsos-nameLimit").max = r.d)),
          (e = s.stars.data),
          (t = e.match(n)),
          null !== t && (r.s = parseFloat(t[t.length - 1])),
          6 != r.s &&
            ((D("stars-limit").max = r.s),
            (D("stars-designationLimit").max = r.s),
            (D("stars-propernameLimit").max = r.s));
      })(),
      A(d.transform),
      (function (t, e) {
        var a, n;
        if (g(t, "formFields")) {
          if (e && g(t.formFields, e))
            return void d3
              .select(N + " ~ #celestial-form")
              .select("#" + e)
              .style({ display: "none" });
          if (!1 !== t.form || !0 !== t.location)
            for (n in (!1 === t.form &&
              d3.select(N + " ~ #celestial-form").style("display", "none"),
            t.formFields))
              g(t.formFields, n) &&
                "location" !== n &&
                ((a = !1 === t.formFields[n] ? "none" : "block"),
                d3
                  .select(N + " ~ #celestial-form")
                  .select("#" + n)
                  .style({ display: a }));
          else
            for (n in (d3
              .select(N + " ~ #celestial-form")
              .style("display", "inline-block"),
            t.formFields))
              g(t.formFields, n) &&
                "location" !== n &&
                d3
                  .select(N + " ~ #celestial-form")
                  .select("#" + n)
                  .style({ display: "none" });
        }
      })(e),
      q(d.advanced),
      (U.updateForm = c),
      (U.showConstellation = s),
      (U.setLanguage = function (t) {
        var e = st.set();
        return -1 !== ct[d.culture].indexOf(t) && (e = l(t)), e;
      });
  }
  function S(t) {
    var e,
      a = t.id;
    switch (a) {
      case "stars-show":
        e = !D(a).checked;
        for (var n = 0; n < gt[a].length; n++) z(gt[a][n], e);
      case "stars-designation":
        for (
          e = !D("stars-designation").checked || !D("stars-show").checked,
            n = 0;
          n < gt["stars-designation"].length;
          n++
        )
          z(gt["stars-designation"][n], e);
      case "stars-propername":
        for (
          e = !D("stars-propername").checked || !D("stars-show").checked, n = 0;
          n < gt["stars-propername"].length;
          n++
        )
          z(gt["stars-propername"][n], e);
        break;
      case "dsos-show":
        for (e = !D(a).checked, n = 0; n < gt[a].length; n++) z(gt[a][n], e);
      case "dsos-names":
        for (
          e = !D("dsos-names").checked || !D("dsos-show").checked, n = 0;
          n < gt["dsos-names"].length;
          n++
        )
          z(gt["dsos-names"][n], e);
        break;
      case "planets-show":
        for (e = !D(a).checked, n = 0; n < gt[a].length; n++) z(gt[a][n], e);
      case "planets-names":
        for (
          e = !D("planets-names").checked || !D("planets-show").checked, n = 0;
          n < gt["planets-names"].length;
          n++
        )
          z(gt["planets-names"][n], e);
        break;
      case "constellations-names":
      case "mw-show":
        for (e = !D(a).checked, n = 0; n < gt[a].length; n++) z(gt[a][n], e);
    }
  }
  function z(t, e) {
    var a = D(t);
    a &&
      ((a.disabled = e),
      (a.style.color = e ? "#999" : "#000"),
      (a.previousSibling.style.color = e ? "#999" : "#000"));
  }
  function T(t, e) {
    var a = (function (t) {
      var e = 0,
        a = 0;
      if (t.offsetParent)
        do {
          (e += t.offsetLeft), (a += t.offsetTop);
        } while (null !== (t = t.offsetParent));
      return [e, a];
    })(t);
    d3
      .select("#error")
      .html(e)
      .style({ top: h(a[1] + t.offsetHeight + 1), left: h(a[0]), opacity: 1 }),
      t.focus();
  }
  function j(t) {
    var e,
      a = "hr" === t.id || "min" === t.id || "sec" === t.id ? 1 : 0;
    if (t.validity) {
      if ((e = t.validity).typeMismatch || e.badInput)
        return T(t, t.title + ": check field value"), !1;
      if (e.rangeOverflow || e.rangeUnderflow)
        return (
          T(
            t,
            t.title +
              " must be between " +
              (parseInt(t.min) + a) +
              " and " +
              (parseInt(t.max) - a)
          ),
          !1
        );
    } else {
      if (!v((e = t.value))) return T(t, t.title + ": check field value"), !1;
      if ((e = parseFloat(e)) < t.min || e > t.max)
        return (
          T(
            t,
            t.title + " must be between " + (t.min + a) + " and " + (+t.max - a)
          ),
          !1
        );
    }
    return (
      d3
        .select("#error")
        .style({ top: "-9999px", left: "-9999px", opacity: 0 }),
      !0
    );
  }
  function P(t) {
    var e;
    if (t.validity) {
      if ((e = t.validity).typeMismatch || e.badInput)
        return T(t, t.title + ": check field value"), !1;
      if (-1 === t.value.search(/^#[0-9A-F]{6}$/i))
        return T(t, t.title + ": not a color value"), !1;
    } else {
      if ("" === (e = t.value)) return !0;
      if (-1 === e.search(/^#[0-9A-F]{6}$/i))
        return T(t, t.title + ": not a color value"), !1;
    }
    return (
      d3
        .select("#error")
        .style({ top: "-9999px", left: "-9999px", opacity: 0 }),
      !0
    );
  }
  function A(t, e) {
    var a = D("centerx");
    return a
      ? (e &&
          ("equatorial" === t && "equatorial" !== e
            ? ((a.value = (a.value / 15).toFixed(1)),
              a.value < 0 && (a.value += 24))
            : "equatorial" !== t &&
              "equatorial" === e &&
              ((a.value = (15 * a.value).toFixed(1)),
              a.value > 180 && (a.value -= 360))),
        "equatorial" === t
          ? ((a.min = "0"), (a.max = "24"), (D("cxunit").innerHTML = "h"))
          : ((a.min = "-180"), (a.max = "180"), (D("cxunit").innerHTML = "°")),
        a.value)
      : null;
  }
  function I(t, e) {
    var a = D("centerx"),
      n = D("centery"),
      r = D("centerz");
    a &&
      n &&
      ((null === t || t.length < 1) && (t = [0, 0, 0]),
      (t.length <= 2 || void 0 === t[2]) && (t[2] = 0),
      (a.value =
        "equatorial" !== e
          ? t[0].toFixed(1)
          : t[0] < 0
          ? (t[0] / 15 + 24).toFixed(1)
          : (t[0] / 15).toFixed(1)),
      (n.value = t[1].toFixed(1)),
      (r.value = null !== t[2] ? t[2].toFixed(1) : 0),
      st.set({ center: t }));
  }
  function q(t) {
    var e = t ? "inline-block" : "none";
    d3
      .select(N + " ~ #celestial-form")
      .selectAll(".advanced")
      .style("display", e),
      d3
        .select(N + " ~ #celestial-form")
        .selectAll("#label-propername")
        .style("display", t ? "none" : "inline-block");
  }
  function L() {
    var t,
      e,
      a = d3.select(N + " ~ #celestial-form").select("#constellation"),
      n = [],
      r = 0,
      s = rt;
    U.container.selectAll(".constname").each(function (a, o) {
      (t = a.id) === s.constellation && (r = o),
        (e = a.properties[s.constellations.namesType]) !== t &&
          (e += " (" + t + ")"),
        n.push({ o: t, n: e });
    }),
      n.length < 1 || a.length < 1
        ? setTimeout(L, 1e3)
        : ((n = [{ o: "---", n: "(Select constellation)" }].concat(n)),
          a.selectAll("option").remove(),
          a
            .selectAll("option")
            .data(n)
            .enter()
            .append("option")
            .attr("value", function (t) {
              return t.o;
            })
            .text(function (t) {
              return t.n;
            }),
          a.property("selectedIndex", r));
  }
  function D(t) {
    return document.querySelector(N + " ~ #celestial-form #" + t);
  }
  function F(t) {
    function e() {
      w.show(d, f);
    }
    function a(t, e) {
      var a;
      if (e && "0" !== e) {
        var n = Math.floor(Math.abs(e) / 60),
          r = Math.abs(e) - 60 * n;
        a = (e > 0 ? " +" : " −") + y(n) + y(r);
      } else a = " ±0000";
      return l(t) + a;
    }
    function n(t) {
      return !(
        !t ||
        !M(t) ||
        t.length < 2 ||
        !v(t[0]) ||
        t[0] < -90 ||
        t[0] > 90 ||
        !v(t[1]) ||
        t[1] < -180 ||
        t[1] > 180
      );
    }
    function r(t) {
      return null != t && !(!v(t) && Math.abs(t) > 840);
    }
    function s() {
      Object.assign(h, st.set()),
        (h.horizon.show = !!D("horizon-show").checked),
        (h.daylight.show = !!D("daylight-show").checked),
        (h.planets.show = !!D("planets-show").checked),
        (h.planets.names = !!D("planets-names").checked),
        (h.planets.namesType = D("planets-namesType").value),
        (h.planets.symbolType = D("planets-symbolType").value),
        S(D("planets-show")),
        U.apply(h);
    }
    function o() {
      var t = parseFloat(D("lon").value),
        e = parseFloat(D("lat").value);
      if (
        (Object.assign(h, st.set()),
        (d = l.parse(D("datetime").value.slice(0, -6))),
        !isNaN(t) && !isNaN(e))
      ) {
        if (e !== p[0] || t !== p[1]) return (p = [e, t]), void i([e, t], !0);
        D("datetime").value = a(d, f);
        var n = new Date(d.valueOf() - 6e4 * (f - u));
        ((c = U.getPoint(at.inverse(n, [90, 0], p), h.transform))[2] = 0),
          "zenith" === h.follow ? U.rotate({ center: c }) : U.redraw();
      }
    }
    function i(t, e) {
      if (t && g(h, "settimezone") && !1 !== h.settimezone) {
        var n = Math.floor(d.getTime() / 1e3),
          r =
            (window && "https:" === window.location.protocol
              ? "https"
              : "http") +
            "://api.timezonedb.com/v2.1/get-time-zone?key=" +
            h.timezoneid +
            "&format=json&by=position&lat=" +
            t[0] +
            "&lng=" +
            t[1] +
            "&time=" +
            n;
        d3.json(r, function (e, r) {
          if (e) return console.warn(e);
          "FAILED" === r.status
            ? ((f = 60 * Math.round(t[1] / 15)),
              {
                gmtOffset: 60 * f,
                message: "Sea locatation inferred",
                timestamp: n,
              })
            : ((f = r.gmtOffset / 60), r),
            (D("datetime").value = a(d, f)),
            o();
        });
      }
    }
    var l = d3.time.format("%Y-%m-%d %H:%M:%S"),
      c = [0, 0],
      p = [0, 0],
      d = new Date(),
      u = -d.getTimezoneOffset(),
      f = u,
      h = st.set(t),
      b = d3
        .select(N + " ~ #celestial-form form")
        .insert("div", "div#general")
        .attr("id", "loc"),
      w = new Pt(h, function (t, e) {
        (D("datetime").value = a(t, e)), (f = e), o();
      });
    g(h, "geopos") &&
      null !== h.geopos &&
      2 === h.geopos.length &&
      (p = h.geopos);
    var k = b
      .append("div")
      .attr("class", "col")
      .attr("id", "location")
      .style("display", "none");
    k
      .append("label")
      .attr("title", "Location coordinates long/lat")
      .attr("for", "lat")
      .html("Location"),
      k
        .append("input")
        .attr("type", "number")
        .attr("id", "lat")
        .attr("title", "Latitude")
        .attr("placeholder", "Latitude")
        .attr("max", "90")
        .attr("min", "-90")
        .attr("step", "0.0001")
        .attr("value", p[0])
        .on("change", function () {
          !0 === j(this) && o();
        }),
      k.append("span").html("°"),
      k
        .append("input")
        .attr("type", "number")
        .attr("id", "lon")
        .attr("title", "Longitude")
        .attr("placeholder", "Longitude")
        .attr("max", "180")
        .attr("min", "-180")
        .attr("step", "0.0001")
        .attr("value", p[1])
        .on("change", function () {
          !0 === j(this) && o();
        }),
      k.append("span").html("°"),
      "geolocation" in navigator &&
        k
          .append("input")
          .attr("type", "button")
          .attr("value", "Here")
          .attr("id", "here")
          .on("click", function () {
            navigator.geolocation.getCurrentPosition(function (t) {
              (p = [m(t.coords.latitude, 4), m(t.coords.longitude, 4)]),
                (D("lat").value = p[0]),
                (D("lon").value = p[1]),
                o();
            });
          }),
      k
        .append("label")
        .attr("title", "Local date/time")
        .attr("for", "datetime")
        .html(" Date/time"),
      k
        .append("input")
        .attr("type", "button")
        .attr("id", "day-left")
        .attr("title", "One day back")
        .on("click", function () {
          d.setDate(d.getDate() - 1), (D("datetime").value = a(d, f)), o();
        }),
      k
        .append("input")
        .attr("type", "text")
        .attr("id", "datetime")
        .attr("title", "Date and time")
        .attr("value", a(d, f))
        .on("click", e, !0)
        .on("input", function () {
          (this.value = a(d, f)), w.isVisible() || e();
        }),
      k.append("div").attr("id", "datepick").on("click", e),
      k
        .append("input")
        .attr("type", "button")
        .attr("id", "day-right")
        .attr("title", "One day forward")
        .on("click", function () {
          d.setDate(d.getDate() + 1), (D("datetime").value = a(d, f)), o();
        }),
      k
        .append("input")
        .attr("type", "button")
        .attr("value", "Now")
        .attr("id", "now")
        .on("click", function () {
          d.setTime(Date.now()), (D("datetime").value = a(d, f)), o();
        }),
      k.append("br"),
      k
        .append("label")
        .attr("title", "Show horizon marker")
        .attr("for", "horizon-show")
        .html(" Horizon marker"),
      k
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "horizon-show")
        .property("checked", h.horizon.show)
        .on("change", s),
      k
        .append("label")
        .attr("title", "Show daylight")
        .attr("for", "daylight-show")
        .html("Daylight sky"),
      k
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "daylight-show")
        .property("checked", h.daylight.show)
        .on("change", s),
      k.append("br"),
      k
        .append("label")
        .attr("title", "Show solar system objects")
        .attr("for", "planets-show")
        .html(" Planets, Sun & Moon"),
      k
        .append("input")
        .attr("type", "checkbox")
        .attr("id", "planets-show")
        .property("checked", h.planets.show)
        .on("change", s);
    var x = lt.planets[h.culture] || lt.planets.iau;
    for (var z in x)
      if (g(x, z)) {
        var T = Object.keys(x[z]);
        if (T.length > 1) {
          var P = "symbol" === z ? "as" : "with";
          k.append("label")
            .attr("for", "planets-" + z + "Type")
            .html(P);
          var A = 0;
          k.append("label")
            .attr("title", "Type of planet name")
            .attr("for", "planets-" + z + "Type")
            .attr("class", "advanced")
            .html("");
          var I = k
              .append("select")
              .attr("id", "planets-" + z + "Type")
              .on("change", s),
            L = T.map(function (t, e) {
              return (
                t === h.planets[z + "Type"] && (A = e), { o: t, n: x[z][t] }
              );
            });
          I.selectAll("option")
            .data(L)
            .enter()
            .append("option")
            .attr("value", function (t) {
              return t.o;
            })
            .text(function (t) {
              return t.n;
            }),
            I.property("selectedIndex", A),
            "names" === z &&
              (I.attr("class", "advanced"),
              k
                .append("label")
                .attr("for", "planets-" + z)
                .html("names"),
              k
                .append("input")
                .attr("type", "checkbox")
                .attr("id", "planets-" + z)
                .property("checked", h.planets[z])
                .on("change", s));
        }
      }
    S(D("planets-show")),
      q(h.advanced),
      d3.select(document).on("mousedown", function () {
        !(function (t, e) {
          for (; t.parentNode; ) {
            if (t.id === e) return !0;
            t = t.parentNode;
          }
          return !1;
        })(d3.event.target, "celestial-date") &&
          w.isVisible() &&
          w.hide();
      }),
      (U.dateFormat = a),
      (U.date = function (t, e) {
        if (!t) return d;
        r(e) && (f = e),
          Object.assign(h, st.set()),
          w.isVisible() && w.hide(),
          d.setTime(t.valueOf()),
          (D("datetime").value = a(t, f)),
          o();
      }),
      (U.timezone = function (t) {
        if (!t) return f;
        r(t) && (f = t),
          Object.assign(h, st.set()),
          w.isVisible() && w.hide(),
          (D("datetime").value = a(d, f)),
          o();
      }),
      (U.position = function () {
        return p;
      }),
      (U.location = function (t, e) {
        if (!t || t.length < 2) return p;
        n(t) &&
          ((p = t.slice()),
          (D("lat").value = p[0]),
          (D("lon").value = p[1]),
          r(e) ? (f = e) : i(p));
      }),
      (U.skyview = function (t) {
        if (!t) return { date: d, location: p, timezone: f };
        var e = !1;
        return (
          w.isVisible() && w.hide(),
          g(t, "timezone") && r(t.timezone) && ((f = t.timezone), (e = !0)),
          g(t, "date") &&
            (function (t) {
              return t && t instanceof Date && !isNaN(t);
            })(t.date) &&
            (d.setTime(t.date.valueOf()),
            (D("datetime").value = a(t.date, f)),
            (e = !0)),
          g(t, "location") &&
          n(t.location) &&
          ((p = t.location.slice()),
          (D("lat").value = p[0]),
          (D("lon").value = p[1]),
          !g(t, "timezone"))
            ? void i(p, g(t, "date"))
            : !1 === e
            ? { date: d, location: p, timezone: f }
            : void ("zenith" === h.follow ? o() : U.redraw())
        );
      }),
      (U.dtLoc = U.skyview),
      (U.zenith = function () {
        return c;
      }),
      (U.nadir = function () {
        var t = -c[1],
          e = c[0] + 180;
        return e > 180 && (e -= 360), [e, t - 0.001];
      }),
      !g(h, "formFields") ||
        (!0 !== h.location && !0 !== h.formFields.location) ||
        d3
          .select(N + " ~ #celestial-form")
          .select("#location")
          .style({ display: "inline-block" }),
      !n(p) ||
        (!0 !== h.location && !0 !== h.formFields.location) ||
        "zenith" !== h.follow ||
        setTimeout(o, 1e3);
  }
  function O(a) {
    function r(t) {
      return T.clip && d3.geo.distance(P, t) > X ? 0 : 1;
    }
    function i(t) {
      return "translate(" + I(t) + ")";
    }
    function c(t, e, a) {
      return (
        t +
        (e = e ? "." + e : "") +
        (g(lt[t], L) ? "." + L : "") +
        (a = a ? "." + a : ".json")
      );
    }
    function p(t) {
      var e = {};
      return (
        (e.fill = t.fill || "none"),
        (e["fill-opacity"] = null !== t.opacity ? t.opacity : 1),
        (e.stroke = t.stroke || "none"),
        (e["stroke-width"] = null !== t.width ? t.width : 0),
        (e["stroke-opacity"] = null !== t.opacity ? t.opacity : 1),
        g(t, "dash")
          ? (e["stroke-dasharray"] = t.dash.join(" "))
          : (e["stroke-dasharray"] = "none"),
        (e.font = t.font || null),
        e
      );
    }
    function d(t) {
      var e = { stroke: "none" };
      return (
        (e.fill = t.fill || "none"),
        (e["fill-opacity"] = null !== t.opacity ? t.opacity : 1),
        (e["text-anchor"] = f(t.align)),
        (e.font = t.font || null),
        e
      );
    }
    function u(t, e) {
      return (
        0.9 * (1 - (Math.pow(Math.E, t * e) - 1) / (Math.pow(Math.E, e) - 1))
      );
    }
    function f(t) {
      return t
        ? "center" === t
          ? "middle"
          : "right" === t
          ? "end"
          : "start"
        : "start";
    }
    function h(t) {
      var e =
          (function (t, e) {
            return t && 999 !== t
              ? Math.pow(2 * S.dsos.size * q - t, S.dsos.exponent)
              : Math.pow((parseInt(e) * S.dsos.size * q) / 7, 0.5);
          })(t.mag, t.dim) || 9,
        a = (function (t) {
          return t && g(S.dsos.symbols, t) ? S.dsos.symbols[t].shape : "circle";
        })(t.type);
      return -1 !== d3.svg.symbolTypes.indexOf(a)
        ? d3.svg.symbol().type(a).size(e)()
        : d3.svg.customSymbol().type(a).size(e)();
    }
    function y(t, e) {
      var a = e
        ? e * e
        : (function (t) {
            var e = t || 2,
              a = 4 * q * Math.exp(-0.05 * (e + 2));
            return Math.max(a, 2);
          })(t.mag);
      return d3.svg.symbol().type("circle").size(a)();
    }
    function v(t) {
      var e = { type: "Feature", id: t.id, properties: {}, geometry: {} };
      return (
        (e.properties.name = t[S.planets.namesType]),
        ("symbol" !== S.planets.symbolType &&
          "letter" !== S.planets.symbolType) ||
          (e.properties.symbol = S.planets.symbols[e.id][S.planets.symbolType]),
        (e.properties.mag = t.ephemeris.mag || 10),
        "lun" === e.id &&
          ((e.properties.age = t.ephemeris.age),
          (e.properties.phase = t.ephemeris.phase)),
        (e.geometry.type = "Point"),
        (e.geometry.coordinates = t.ephemeris.pos),
        e
      );
    }
    function M(t) {
      var e = " {";
      for (var a in t) g(t, a) && (e += a + ":" + t[a] + "; ");
      return e + "} ";
    }
    var b,
      w,
      k =
        (d3
          .select("body")
          .append("div")
          .attr("id", "d3-celestial-svg")
          .attr("style", "display: none"),
        d3.select("#d3-celestial-svg").append("svg")),
      x = U.metrics(),
      S = st.set(),
      z = S.datapath,
      T = it[S.projection],
      j = e(S.center),
      P = [-j[0], -j[1]],
      A = (T.scale * x.width) / 1024,
      I = U.projection(S.projection)
        .rotate(j)
        .translate([x.width / 2, x.height / 2])
        .scale([x.scale]),
      q = S.adaptable ? Math.sqrt(x.scale / A) : 1,
      L = "" !== S.culture && "iau" !== S.culture ? S.culture : "";
    k.selectAll("*").remove();
    var D = k.append("defs");
    T.clip && I.clipAngle(90),
      (b = d3.geo.circle().angle([179.95]).origin(P)),
      k.attr("width", x.width).attr("height", x.height);
    for (
      var F = [
          "background",
          "milkyWay",
          "milkyWayBg",
          "gridLines",
          "constBoundaries",
          "planesequatorial",
          "planesecliptic",
          "planesgalactic",
          "planessupergalactic",
          "constLines",
          "mapBorder",
          "stars",
          "dsos",
          "planets",
          "gridvaluesLon",
          "gridvaluesLat",
          "constNames",
          "starDesignations",
          "starNames",
          "dsoNames",
          "planetNames",
          "horizon",
          "daylight",
        ],
        O = {},
        _ = {},
        E = 0;
      E < F.length;
      E++
    )
      (O[F[E]] = k
        .append("g")
        .attr({
          id: F[E],
          ":inkscape:groupmode": "layer",
          ":inkscape:label": F[E],
        })),
        (_[F[E]] = {});
    var N = d3.geo.graticule().minorStep([15, 10]),
      C = d3.geo.path().projection(I),
      H = d3.queue(2);
    if (
      (O.background
        .append("path")
        .datum(b)
        .attr("class", "background")
        .attr("d", C),
      (_.background.fill = S.background.fill),
      S.lines.graticule.show)
    ) {
      if (
        ("equatorial" === S.transform
          ? (O.gridLines
              .append("path")
              .datum(N)
              .attr("class", "gridLines")
              .attr("d", C),
            (_.gridLines = p(S.lines.graticule)))
          : (U.graticule(O.gridLines, C, S.transform),
            (_.gridLines = p(S.lines.graticule))),
        g(S.lines.graticule, "lon") && S.lines.graticule.lon.pos.length > 0)
      ) {
        var B = {
          type: "FeatureCollection",
          features: l("lon", S.lines.graticule.lon.pos),
        };
        O.gridvaluesLon
          .selectAll(".gridvalues_lon")
          .data(B.features)
          .enter()
          .append("text")
          .attr("transform", function (t, e) {
            return i(t.geometry.coordinates);
          })
          .text(function (t) {
            return t.properties.value;
          })
          .attr({ dy: ".5em", dx: "-.75em", class: "gridvaluesLon" }),
          (_.gridvaluesLon = d(S.lines.graticule.lon));
      }
      if (g(S.lines.graticule, "lat") && S.lines.graticule.lat.pos.length > 0) {
        var G = {
          type: "FeatureCollection",
          features: l("lat", S.lines.graticule.lat.pos),
        };
        O.gridvaluesLat
          .selectAll(".gridvalues_lat")
          .data(G.features)
          .enter()
          .append("text")
          .attr("transform", function (t, e) {
            return i(t.geometry.coordinates);
          })
          .text(function (t) {
            return t.properties.value;
          })
          .attr({ dy: "-.5em", dx: "-.75em", class: "gridvaluesLat" }),
          (_.gridvaluesLat = d(S.lines.graticule.lat));
      }
    }
    for (var W in S.lines)
      g(S.lines, W) &&
        "graticule" != W &&
        !1 !== S.lines[W].show &&
        (O[(w = "planes" + W)]
          .append("path")
          .datum(d3.geo.circle().angle([90]).origin(Q[W]))
          .attr("class", w)
          .attr("d", C),
        (_[w] = p(S.lines[W])));
    S.mw.show &&
      H.defer(function (t) {
        d3.json(z + "mw.json", function (e, a) {
          e && t(e);
          var r = n(a, S.transform),
            s = o(r);
          O.milkyWay
            .selectAll(".mway")
            .data(r.features)
            .enter()
            .append("path")
            .attr("class", "milkyWay")
            .attr("d", C),
            (_.milkyWay = p(S.mw.style)),
            (!g(S.background, "opacity") || S.background.opacity > 0.95) &&
              (O.milkyWayBg
                .selectAll(".mwaybg")
                .data(s.features)
                .enter()
                .append("path")
                .attr("class", "milkyWayBg")
                .attr("d", C),
              (_.milkyWayBg = {
                fill: S.background.fill,
                "fill-opacity": S.background.opacity,
              })),
            t(null);
        });
      }),
      S.constellations.bounds &&
        H.defer(function (t) {
          d3.json(z + c("constellations", "borders"), function (e, a) {
            e && t(e);
            var r = n(a, S.transform);
            if (U.constellation)
              var s = new RegExp("\\b" + U.constellation + "\\b");
            O.constBoundaries
              .selectAll(".bounds")
              .data(r.features)
              .enter()
              .append("path")
              .attr("class", function (t) {
                return U.constellation && -1 !== t.ids.search(s)
                  ? "constBoundariesSel"
                  : "constBoundaries";
              })
              .attr("d", C),
              (_.constBoundaries = p(S.constellations.boundStyle)),
              (_.constBoundariesSel = {
                fill: "none",
                stroke: S.constellations.boundStyle.stroke,
                "stroke-width": 1.5 * S.constellations.boundStyle.width,
                "stroke-opacity": 1,
                "stroke-dasharray": "none",
              }),
              t(null);
          });
        }),
      S.constellations.lines &&
        H.defer(function (t) {
          d3.json(z + c("constellations", "lines"), function (e, a) {
            e && t(e);
            var r = n(a, S.transform);
            O.constLines
              .selectAll(".lines")
              .data(r.features)
              .enter()
              .append("path")
              .attr("class", function (t) {
                return "constLines" + t.properties.rank;
              })
              .attr("d", C);
            var s = g(S.constellations.lineStyle, "dash")
              ? S.constellations.lineStyle.dash.join(" ")
              : "none";
            (_.constLines1 = {
              fill: "none",
              stroke: S.constellations.lineStyle.stroke[0],
              "stroke-width": S.constellations.lineStyle.width[0],
              "stroke-opacity": S.constellations.lineStyle.opacity[0],
              "stroke-dasharray": s,
            }),
              (_.constLines2 = {
                fill: "none",
                stroke: S.constellations.lineStyle.stroke[1],
                "stroke-width": S.constellations.lineStyle.width[1],
                "stroke-opacity": S.constellations.lineStyle.opacity[1],
                "stroke-dasharray": s,
              }),
              (_.constLines3 = {
                fill: "none",
                stroke: S.constellations.lineStyle.stroke[2],
                "stroke-width": S.constellations.lineStyle.width[2],
                "stroke-opacity": S.constellations.lineStyle.opacity[2],
                "stroke-dasharray": s,
              }),
              t(null);
          });
        }),
      H.defer(function (t) {
        var e = I.rotate();
        I.rotate([0, 0, 0]),
          O.mapBorder
            .append("path")
            .datum(N.outline)
            .attr("class", "mapBorder")
            .attr("d", C),
          (_.mapBorder = {
            fill: "none",
            stroke: S.background.stroke,
            "stroke-width": S.background.width,
            "stroke-opacity": 1,
            "stroke-dasharray": "none",
          }),
          I.rotate(e),
          t(null);
      }),
      S.constellations.names &&
        H.defer(function (t) {
          d3.json(z + c("constellations"), function (e, a) {
            e && t(e);
            var s = n(a, S.transform);
            O.constNames
              .selectAll(".constnames")
              .data(
                s.features.filter(function (t) {
                  return 1 === r(t.geometry.coordinates);
                })
              )
              .enter()
              .append("text")
              .attr("class", function (t) {
                return "constNames" + t.properties.rank;
              })
              .attr("transform", function (t, e) {
                return i(t.geometry.coordinates);
              })
              .text(function (t) {
                return (function (t) {
                  return t.properties[S.constellations.namesType];
                })(t);
              }),
              (_.constNames1 = {
                fill: S.constellations.nameStyle.fill[0],
                "fill-opacity": S.constellations.nameStyle.opacity[0],
                font: S.constellations.nameStyle.font[0],
                "text-anchor": f(S.constellations.nameStyle.align),
              }),
              (_.constNames2 = {
                fill: S.constellations.nameStyle.fill[1],
                "fill-opacity": S.constellations.nameStyle.opacity[1],
                font: S.constellations.nameStyle.font[1],
                "text-anchor": f(S.constellations.nameStyle.align),
              }),
              (_.constNames3 = {
                fill: S.constellations.nameStyle.fill[2],
                "fill-opacity": S.constellations.nameStyle.opacity[2],
                font: S.constellations.nameStyle.font[2],
                "text-anchor": f(S.constellations.nameStyle.align),
              }),
              t(null);
          });
        }),
      S.stars.show &&
        H.defer(function (t) {
          d3.json(z + S.stars.data, function (e, a) {
            e && t(e);
            var s = n(a, S.transform);
            O.stars
              .selectAll(".stars")
              .data(
                s.features.filter(function (t) {
                  return t.properties.mag <= S.stars.limit;
                })
              )
              .enter()
              .append("path")
              .attr("class", function (t) {
                return (
                  "stars" +
                  (function (t) {
                    return !S.stars.colors || isNaN(t)
                      ? ""
                      : Math.round(10 * t).toString();
                  })(t.properties.bv)
                );
              })
              .attr(
                "d",
                C.pointRadius(function (t) {
                  return t.properties
                    ? (function (t) {
                        if (null === t) return 0.1;
                        var e =
                          S.stars.size *
                          q *
                          Math.exp(S.stars.exponent * (t + 2));
                        return Math.max(e, 0.1);
                      })(t.properties.mag)
                    : 1;
                })
              ),
              (_.stars = p(S.stars.style));
            var o = ot.domain();
            for (E = m(o[1], 1); E <= m(o[0], 1); E += 0.1)
              _["stars" + Math.round(10 * E).toString()] = { fill: ot(E) };
            S.stars.designation &&
              (O.starDesignations
                .selectAll(".stardesigs")
                .data(
                  s.features.filter(function (t) {
                    return (
                      t.properties.mag <= S.stars.designationLimit * q &&
                      1 === r(t.geometry.coordinates)
                    );
                  })
                )
                .enter()
                .append("text")
                .attr("transform", function (t) {
                  return i(t.geometry.coordinates);
                })
                .text(function (t) {
                  return (function (t) {
                    return g(R, t) ? R[t][S.stars.designationType] : "";
                  })(t.id);
                })
                .attr({ dy: ".85em", dx: ".35em", class: "starDesignations" }),
              (_.starDesignations = d(S.stars.designationStyle))),
              S.stars.propername &&
                (O.starNames
                  .selectAll(".starnames")
                  .data(
                    s.features.filter(function (t) {
                      return (
                        t.properties.mag <= S.stars.propernameLimit * q &&
                        1 === r(t.geometry.coordinates)
                      );
                    })
                  )
                  .enter()
                  .append("text")
                  .attr("transform", function (t) {
                    return i(t.geometry.coordinates);
                  })
                  .text(function (t) {
                    return (function (t) {
                      var e = S.stars.propernameType;
                      return g(R, t) ? (g(R[t], e) ? R[t][e] : R[t].name) : "";
                    })(t.id);
                  })
                  .attr({ dy: "-.5em", dx: "-.35em", class: "starNames" }),
                (_.starNames = d(S.stars.propernameStyle))),
              t(null);
          });
        }),
      S.dsos.show &&
        H.defer(function (t) {
          d3.json(z + S.dsos.data, function (e, a) {
            e && t(e);
            var s = n(a, S.transform);
            for (W in (O.dsos
              .selectAll(".dsos")
              .data(
                s.features.filter(function (t) {
                  return (
                    1 === r(t.geometry.coordinates) &&
                    ((999 === t.properties.mag &&
                      Math.sqrt(parseInt(t.properties.dim)) >
                        S.dsos.limit * q) ||
                      (999 !== t.properties.mag &&
                        t.properties.mag <= S.dsos.limit))
                  );
                })
              )
              .enter()
              .append("path")
              .attr("class", function (t) {
                return "dsos" + t.properties.type;
              })
              .attr("transform", function (t) {
                return i(t.geometry.coordinates);
              })
              .attr("d", function (t) {
                return h(t.properties);
              }),
            (_.dsos = p(S.dsos.style)),
            S.dsos.symbols))
              g(S.dsos.symbols, W) &&
                ((_[(w = "dsos" + W)] = {
                  "fill-opacity": S.dsos.style.opacity,
                  "stroke-opacity": S.dsos.style.opacity,
                }),
                g(S.dsos.symbols[W], "stroke")
                  ? ((_[w].fill = "none"),
                    (_[w].stroke = S.dsos.colors
                      ? S.dsos.symbols[W].stroke
                      : S.dsos.style.stroke),
                    (_[w]["stroke-width"] = S.dsos.colors
                      ? S.dsos.symbols[W].width
                      : S.dsos.style.width))
                  : ((_[w].stroke = "none"),
                    (_[w].fill = S.dsos.colors
                      ? S.dsos.symbols[W].fill
                      : S.dsos.style.fill)));
            if (S.dsos.names)
              for (W in (O.dsoNames
                .selectAll(".dsonames")
                .data(
                  s.features.filter(function (t) {
                    return (
                      1 === r(t.geometry.coordinates) &&
                      ((999 == t.properties.mag &&
                        Math.sqrt(parseInt(t.properties.dim)) >
                          S.dsos.nameLimit) ||
                        (999 != t.properties.mag &&
                          t.properties.mag <= S.dsos.nameLimit))
                    );
                  })
                )
                .enter()
                .append("text")
                .attr("class", function (t) {
                  return "dsoNames " + t.properties.type;
                })
                .attr("transform", function (t) {
                  return i(t.geometry.coordinates);
                })
                .text(function (t) {
                  return (function (t) {
                    var e = S.dsos.namesType,
                      a = t.id;
                    return "desig" !== e && g($, a) && g($[a], e)
                      ? $[a][e]
                      : t.properties.desig;
                  })(t);
                })
                .attr({ dy: "-.5em", dx: ".35em" }),
              (_.dsoNames = {
                "fill-opacity": S.dsos.style.opacity,
                font: S.dsos.nameStyle.font,
                "text-anchor": f(S.dsos.nameStyle.align),
              }),
              S.dsos.symbols))
                g(S.dsos.symbols, W) &&
                  (_[W] = {
                    fill: S.dsos.colors
                      ? S.dsos.symbols[W].fill
                      : S.dsos.style.fill,
                  });
            t(null);
          });
        }),
      (S.location || S.formFields.location) &&
        S.planets.show &&
        U.origin &&
        H.defer(function (e) {
          var a = U.date(),
            n = U.origin(a).spherical(),
            s = { type: "FeatureCollection", features: [] },
            o = { type: "FeatureCollection", features: [] };
          if (
            (U.container.selectAll(".planet").each(function (e) {
              var i = e.id(),
                l = e(a).equatorial(n);
              (l.ephemeris.pos = t(l.ephemeris.pos, et[S.transform])),
                1 === r(l.ephemeris.pos) &&
                  ("lun" === i ? o.features.push(v(l)) : s.features.push(v(l)));
            }),
            "disk" === S.planets.symbolType
              ? O.planets
                  .selectAll(".planets")
                  .data(s.features)
                  .enter()
                  .append("path")
                  .attr("transform", function (t) {
                    return i(t.geometry.coordinates);
                  })
                  .attr("d", function (t) {
                    var e = g(S.planets.symbols[t.id], "size")
                      ? (S.planets.symbols[t.id].size - 1) * q
                      : null;
                    return y(t.properties, e);
                  })
                  .attr("class", function (t) {
                    return "planets " + t.id;
                  })
              : O.planets
                  .selectAll(".planets")
                  .data(s.features)
                  .enter()
                  .append("text")
                  .attr("transform", function (t) {
                    return i(t.geometry.coordinates);
                  })
                  .text(function (t) {
                    return t.properties.symbol;
                  })
                  .attr("class", function (t) {
                    return "planets " + t.id;
                  })
                  .attr({ dy: ".35em" }),
            o.features.length > 0)
          )
            if ("letter" === S.planets.symbolType)
              O.planets
                .selectAll(".moon")
                .data(o.features)
                .enter()
                .append("text")
                .attr("transform", function (t) {
                  return i(t.geometry.coordinates);
                })
                .text(function (t) {
                  return t.properties.symbol;
                })
                .attr("class", function (t) {
                  return "planets " + t.id;
                })
                .attr({ dy: ".35em" });
            else {
              var l = g(S.planets.symbols.lun, "size")
                ? (S.planets.symbols.lun.size - 1) * q
                : 11 * q;
              O.planets
                .selectAll(".dmoon")
                .data(o.features)
                .enter()
                .append("path")
                .attr("class", "darkluna")
                .attr("transform", function (t) {
                  return i(t.geometry.coordinates);
                })
                .attr("d", function (t) {
                  return d3.svg
                    .symbol()
                    .type("circle")
                    .size(l * l)();
                }),
                O.planets
                  .selectAll(".moon")
                  .data(o.features)
                  .enter()
                  .append("path")
                  .attr("class", function (t) {
                    return "planets " + t.id;
                  })
                  .attr("transform", function (t) {
                    return i(t.geometry.coordinates);
                  })
                  .attr("d", function (t) {
                    return (function (t, e) {
                      var a = e ? e * e : 121;
                      return d3.svg
                        .customSymbol()
                        .type("crescent")
                        .size(a)
                        .ratio(t.age)();
                    })(t.properties, l);
                  });
            }
          for (W in ((_.planets = d(S.planets.symbolStyle)),
          (_.planets.font = (function (t) {
            var e = t.replace(/(^\D*)(\d+)(\D.+$)/i, "$2");
            return (
              (e = Math.round(q * e)),
              t.replace(/(^\D*)(\d+)(\D.+$)/i, "$1" + e + "$3")
            );
          })(S.planets.symbolStyle.font)),
          (_.darkluna = { fill: "#557" }),
          S.planets.symbols))
            g(S.planets.symbols, W) &&
              (_[W] = { fill: S.planets.symbols[W].fill });
          S.planets.names &&
            (O.planetNames
              .selectAll(".planetnames")
              .data(s.features)
              .enter()
              .append("text")
              .attr("transform", function (t) {
                return i(t.geometry.coordinates);
              })
              .text(function (t) {
                return t.properties.name;
              })
              .attr({ dy: ".85em", dx: "-.35em" })
              .attr("class", function (t) {
                return "planetNames " + t.id;
              }),
            o.features.length > 0 &&
              O.planetNames
                .selectAll(".moonname")
                .data(o.features)
                .enter()
                .append("text")
                .attr("transform", function (t) {
                  return i(t.geometry.coordinates);
                })
                .text(function (t) {
                  return t.properties.name;
                })
                .attr({ dy: ".85em", dx: "-.35em" })
                .attr("class", function (t) {
                  return "planetNames " + t.id;
                })),
            (_.planetNames = d(S.planets.nameStyle)),
            e(null);
        }),
      (S.location || S.formFields.location) &&
        S.daylight.show &&
        T.clip &&
        H.defer(function (t) {
          var e = s("sol");
          if (e) {
            var a = U.zenith(),
              n = e.ephemeris.pos,
              o = d3.geo.distance(a, n),
              i = I(n),
              l = d3.geo.circle().angle([179.95]).origin(n);
            O.daylight
              .append("path")
              .datum(l)
              .attr("class", "daylight")
              .attr("d", C),
              (_.daylight = (function (t, e) {
                var a, n, r, s;
                if (t > 1.885) return { fill: "transparent" };
                t <= 1.36
                  ? ((n = "#daf1fa"),
                    (r = "#93d7f0"),
                    (s = "#57c0e8"),
                    (a = -(1.36 - t) / 10))
                  : ((a = (t - 1.36) / (1.885 - 1.36)),
                    (n = d3.interpolateLab("#daf1fa", "#e8c866")(a)),
                    (r = d3.interpolateLab("#93c7d0", "#ff854a")(a)),
                    (s = d3.interpolateLab("#57b0c8", "#6caae2")(a)));
                var o = O.daylight
                  .append("radialGradient")
                  .attr("cx", e[0])
                  .attr("cy", e[1])
                  .attr("fr", "0")
                  .attr("r", "300")
                  .attr("id", "skygradient")
                  .attr("gradientUnits", "userSpaceOnUse");
                return (
                  o.append("stop").attr("offset", "0").attr("stop-color", n),
                  o
                    .append("stop")
                    .attr("offset", 0.2 + 0.4 * a)
                    .attr("stop-color", r),
                  o.append("stop").attr("offset", "1").attr("stop-color", s),
                  { fill: "url(#skygradient)", "fill-opacity": u(a, 1.4) }
                );
              })(o, i)),
              1 === r(n) &&
                o < X &&
                O.daylight
                  .append("circle")
                  .attr("cx", i[0])
                  .attr("cy", i[1])
                  .attr("r", 5)
                  .style("fill", "#fff");
          }
          t(null);
        }),
      (S.location || S.formFields.location) &&
        S.horizon.show &&
        !T.clip &&
        H.defer(function (t) {
          var e = d3.geo.circle().angle([90]).origin(U.nadir());
          O.horizon
            .append("path")
            .datum(e)
            .attr("class", "horizon")
            .attr("d", C),
            (_.horizon = p(S.horizon)),
            t(null);
        }),
      U.data.length > 0 &&
        U.data.forEach(function (t) {
          g(t, "save") &&
            H.defer(function (e) {
              t.save(), e(null);
            });
        }),
      H.await(function (t) {
        if (t) throw t;
        var e = d3
          .select("#d3-celestial-svg svg")
          .attr("title", "D3-Celestial")
          .attr("version", 1.1)
          .attr("encoding", "UTF-8")
          .attr("xmlns", "http://www.w3.org/2000/svg")
          .attr("xmlns:xlink", "http://www.w3.org/1999/xlink")
          .attr(
            "xmlns:sodipodi",
            "http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
          )
          .attr("xmlns:inkscape", "http://www.inkscape.org/namespaces/inkscape")
          .attr("viewBox", " 0 0 " + x.width + " " + x.height);
        if (
          (D.append("style")
            .attr("type", "text/css")
            .text(
              (function () {
                var t = "";
                for (var e in _) g(_, e) && (t += " ." + e + M(_[e]));
                return "/*<![CDATA[*/\n" + t + "\n/*]]>*/";
              })()
            ),
          a)
        ) {
          var n = new Blob([e.node().outerHTML], {
              type: "image/svg+xml;charset=utf-8",
            }),
            r = d3.select("body").append("a").node();
          (r.download = a || "d3-celestial.svg"),
            (r.rel = "noopener"),
            (r.href = URL.createObjectURL(n)),
            r.click(),
            d3.select(r).remove();
        } else null !== jt && jt(e.node().outerHTML);
        d3.select("#d3-celestial-svg").remove();
      });
  }
  var _,
    E,
    N,
    C,
    H,
    B,
    G,
    U = { version: "0.7.35", container: null, data: [] },
    W = 10,
    V = 1,
    R = {},
    $ = {};
  if (
    ((U.display = function (a) {
      function i() {
        for (var e in (q(bt.clip),
        ct.append("path").datum(Ot.outline).attr("class", "outline"),
        ct.append("path").datum(B).attr("class", "horizon"),
        ct.append("path").datum(G).attr("class", "daylight"),
        "equatorial" === _.transform
          ? Ot.minorStep([15, 10])
          : Ot.minorStep([10, 10]),
        _.lines))
          g(_.lines, e) &&
            ("graticule" === e
              ? (ct.append("path").datum(Ot).attr("class", "graticule"),
                g(_.lines.graticule, "lon") &&
                  _.lines.graticule.lon.pos.length > 0 &&
                  ct
                    .selectAll(N + " .gridvalues_lon")
                    .data(l("lon", _.lines.graticule.lon.pos))
                    .enter()
                    .append("path")
                    .attr("class", "graticule_lon"),
                g(_.lines.graticule, "lat") &&
                  _.lines.graticule.lat.pos.length > 0 &&
                  ct
                    .selectAll(N + " .gridvalues_lat")
                    .data(l("lat", _.lines.graticule.lat.pos))
                    .enter()
                    .append("path")
                    .attr("class", "graticule_lat"))
              : ct
                  .append("path")
                  .datum(
                    d3.geo.circle().angle([90]).origin(t(Q[e], et[_.transform]))
                  )
                  .attr("class", e));
        d3.json(qt + "mw.json", function (t, e) {
          if (t)
            return (
              window.alert(
                "Data file could not be loaded or doesn't exist. See readme.md"
              ),
              console.warn(t)
            );
          var a = n(e, _.transform),
            r = o(a);
          ct
            .selectAll(N + " .mway")
            .data(a.features)
            .enter()
            .append("path")
            .attr("class", "mw"),
            ct
              .selectAll(N + " .mwaybg")
              .data(r.features)
              .enter()
              .append("path")
              .attr("class", "mwbg"),
            w();
        }),
          d3.json(qt + D("constellations"), function (t, e) {
            if (t) return console.warn(t);
            var a = n(e, _.transform);
            ct
              .selectAll(N + " .constnames")
              .data(a.features)
              .enter()
              .append("text")
              .attr("class", "constname"),
              (U.constellations = (function (t) {
                for (var e = {}, a = t.features, n = 0; n < a.length; n++)
                  e[a[n].id] = {
                    center: a[n].properties.display.slice(0, 2),
                    scale: a[n].properties.display[2],
                  };
                return e;
              })(a)),
              w();
          }),
          d3.json(qt + D("constellations", "borders"), function (t, e) {
            if (t) return console.warn(t);
            var a = n(e, _.transform);
            ct
              .selectAll(N + " .bounds")
              .data(a.features)
              .enter()
              .append("path")
              .attr("class", "boundaryline"),
              w();
          }),
          d3.json(qt + D("constellations", "lines"), function (t, e) {
            if (t) return console.warn(t);
            var a = n(e, _.transform);
            ct
              .selectAll(N + " .lines")
              .data(a.features)
              .enter()
              .append("path")
              .attr("class", "constline"),
              L(),
              w();
          }),
          d3.json(qt + _.stars.data, function (t, e) {
            if (t) return console.warn(t);
            var a = n(e, _.transform);
            ct
              .selectAll(N + " .stars")
              .data(a.features)
              .enter()
              .append("path")
              .attr("class", "star"),
              w();
          }),
          d3.json(qt + D("starnames"), function (t, e) {
            if (t) return console.warn(t);
            Object.assign(R, e), w();
          }),
          d3.json(qt + _.dsos.data, function (t, e) {
            if (t) return console.warn(t);
            var a = n(e, _.transform);
            ct
              .selectAll(N + " .dsos")
              .data(a.features)
              .enter()
              .append("path")
              .attr("class", "dso"),
              w();
          }),
          d3.json(qt + D("dsonames"), function (t, e) {
            if (t) return console.warn(t);
            Object.assign($, e), w();
          }),
          d3.json(qt + D("planets"), function (t, e) {
            if (t) return console.warn(t);
            var a = r(e, _.transform);
            ct
              .selectAll(N + " .planets")
              .data(a)
              .enter()
              .append("path")
              .attr("class", "planet"),
              w();
          }),
          U.data.length > 0 &&
            U.data.forEach(function (t) {
              g(t, "file")
                ? d3.json(t.file, t.callback)
                : setTimeout(t.callback, 0);
            }, this),
          _.lang && "" != _.lang && p(U.setLanguage(_.lang));
      }
      function c(t) {
        if (t && 1 !== t) {
          var e = E.scale(),
            a = e * t,
            n = C.scaleExtent(),
            r = 1500 * Math.sqrt(Math.abs(1 - t));
          if (
            (a < n[0] && (a = n[0]),
            a > n[1] && (a = n[1]),
            !0 === _.disableAnimations)
          )
            return E.scale(a), C.scale(a), w(), 0;
          var s = d3.interpolateNumber(e, a);
          return (
            d3
              .select({})
              .transition()
              .duration(r)
              .tween("scale", function () {
                return function (t) {
                  var e = s(t);
                  E.scale(e), w();
                };
              })
              .transition()
              .duration(0)
              .tween("scale", function () {
                C.scale(a), w();
              }),
            r
          );
        }
      }
      function p(t) {
        (_ = st.set(t)), w();
      }
      function d(t) {
        var a,
          n,
          r,
          s = _.center,
          o = E.rotate(),
          i = E.scale(),
          l = 2e3,
          c = !1,
          p = _.orientationfixed;
        m(o[1], 1) === -m(t.center[1], 1) && (c = !0), (_ = _.set(t));
        var d = m(d3.geo.distance(s, _.center), 2),
          u = d3.geo.distance([s[2], 0], [_.center[2], 0]);
        return (d < 0.035 && u < 0.035) || !0 === _.disableAnimations
          ? ((It = e(_.center)), E.rotate(It), w(), 0)
          : ((n =
              i > 1.4 * St
                ? d3.interpolateNumber(i, St)
                : function () {
                    return i;
                  }),
            (r =
              0 === u
                ? function () {
                    return o[2];
                  }
                : k(s[2], _.center[2])),
            d > 3.14 && (_.center[0] -= 0.01),
            (_.orientationfixed = !1),
            (a =
              0 === d
                ? function () {
                    return _.center;
                  }
                : d3.geo.interpolate(s, _.center)),
            (l = 0 !== d ? l * d : l * u),
            d3
              .select({})
              .transition()
              .duration(l)
              .tween("center", function () {
                return function (t) {
                  var s = e(a(t));
                  s[2] = r(t);
                  var i = n(t < 0.5 ? t : 1 - t);
                  c && (s[1] = o[1]), E.scale(i), E.rotate(s), w();
                };
              })
              .transition()
              .duration(0)
              .tween("center", function () {
                (_.orientationfixed = p), (It = e(_.center)), E.rotate(It), w();
              }),
            l);
      }
      function y(t) {
        (gt = Z()),
          (_.width !== gt || t) &&
            ((kt = gt / wt),
            (vt = v(_.background.width) ? gt + _.background.width : gt),
            (xt = Math.round(vt / wt)),
            (St = (bt.scale * gt) / 1024),
            Lt.style("width", h(vt))
              .style("height", h(xt))
              .attr("width", vt * Mt)
              .attr("height", xt * Mt),
            C.scaleExtent([St, St * W]).scale(St * V),
            E.translate([vt / 2, xt / 2]).scale(St * V),
            ht && (ht.style.height = h(kt)),
            (St *= V),
            w());
      }
      function b(t) {
        var e = tt(t.projection, t.projectionRatio);
        if (e) {
          var a = E.rotate(),
            n = E.center(),
            r = E.scale(),
            s = C.scaleExtent(),
            o = U.projection(_.projection)
              .center(n)
              .translate([vt / 2, xt / 2])
              .scale([s[0]]),
            i = 2500,
            l = 0,
            p = d3.interpolateNumber(wt, e.ratio);
          (bt.clip == e.clip && !0 !== _.disableAnimations) || (i = 0),
            q(e.clip);
          var d = U.projection(t.projection)
              .center(n)
              .translate([vt / 2, vt / e.ratio / 2])
              .scale([(e.scale * gt) / 1024]),
            u = _.adaptable;
          return r > s[0]
            ? ((l = c(0.1)), setTimeout(b, l, t), l + i)
            : ((_.location || _.formFields.location) &&
                (z("horizon-show", e.clip), z("daylight-show", !e.clip)),
              (E = (function (t, e) {
                var a,
                  n = d3.geo
                    .projection(function (n, r) {
                      var s = t([(n *= 180 / Math.PI), (r *= 180 / Math.PI)]),
                        o = e([n, r]);
                      return [
                        (1 - a) * s[0] + a * o[0],
                        (a - 1) * s[1] - a * o[1],
                      ];
                    })
                    .scale(1),
                  r = n.center,
                  s = n.translate;
                return (
                  (n.alpha = function (o) {
                    if (!arguments.length) return a;
                    a = +o;
                    var i = t.center(),
                      l = e.center(),
                      c = t.translate(),
                      p = e.translate();
                    return (
                      r([(1 - a) * i[0] + a * l[0], (1 - a) * i[1] + a * l[1]]),
                      s([(1 - a) * c[0] + a * p[0], (1 - a) * c[1] + a * p[1]]),
                      n
                    );
                  }),
                  delete n.translate,
                  delete n.center,
                  n.alpha(0)
                );
              })(o, d)),
              (_.adaptable = !1),
              d3
                .select({})
                .transition()
                .duration(i)
                .tween("projection", function () {
                  return function (t) {
                    E.alpha(t).rotate(a),
                      H.projection(E),
                      q(e.clip),
                      (wt = p(t)),
                      (kt = gt / wt),
                      Lt.style("width", h(vt))
                        .style("height", h(xt))
                        .attr("width", vt * Mt)
                        .attr("height", xt * Mt),
                      ht && (ht.style.height = h(xt)),
                      w();
                  };
                })
                .transition()
                .duration(0)
                .tween("projection", function () {
                  (wt = (bt = e).ratio),
                    (kt = gt / bt.ratio),
                    (xt = v(_.background.width) ? kt + _.background.width : kt),
                    (St = (bt.scale * gt) / 1024),
                    Lt.style("width", h(vt))
                      .style("height", h(xt))
                      .attr("width", vt * Mt)
                      .attr("height", xt * Mt),
                    ht && (ht.style.height = h(xt)),
                    (_.projection = t.projection),
                    (E = U.projection(t.projection)
                      .rotate(a)
                      .translate([vt / 2, xt / 2])
                      .scale(St * V)),
                    H.projection(E),
                    q(bt.clip),
                    C.projection(E)
                      .scaleExtent([St, St * W])
                      .scale(St * V),
                    (_.adaptable = u),
                    (St *= V),
                    w();
                }),
              i);
        }
      }
      function w() {
        var e = E.rotate();
        for (var a in (Ft.setTransform(Mt, 0, 0, Mt, 0, 0),
        _.adaptable && (At = Math.sqrt(E.scale() / St)),
        At || (At = 1),
        (zt = _.stars.size),
        (jt = _.stars.exponent),
        (Tt = _.dsos.size || zt),
        (Pt = _.dsos.exponent),
        _.orientationfixed &&
          _.center.length > 2 &&
          ((e[2] = _.center[2]), E.rotate(e)),
        (_.center = [-e[0], -e[1], e[2]]),
        I(_.center, _.transform),
        Ft.clearRect(0, 0, vt + yt[0], xt + yt[1]),
        S(),
        _.mw.show &&
          (ct.selectAll(N + " .mw").each(function (t) {
            j(_.mw.style), H(t), Ft.fill();
          }),
          "supergalactic" !== _.transform &&
            _.background.opacity > 0.95 &&
            ct.selectAll(N + " .mwbg").each(function (t) {
              j(_.background), H(t), Ft.fill();
            })),
        _.lines))
          g(_.lines, a) &&
            !0 === _.lines[a].show &&
            (j(_.lines[a]),
            ct.selectAll(N + " ." + a).attr("d", H),
            Ft.stroke());
        if (
          (g(_.lines.graticule, "lon") &&
            (P(_.lines.graticule.lon),
            ct.selectAll(N + " .graticule_lon").each(function (t, e) {
              if (T(t.geometry.coordinates)) {
                var a = E(t.geometry.coordinates);
                K(a, t.properties.orientation),
                  Ft.fillText(t.properties.value, a[0], a[1]);
              }
            })),
          g(_.lines.graticule, "lat") &&
            (P(_.lines.graticule.lat),
            ct.selectAll(N + " .graticule_lat").each(function (t, e) {
              if (T(t.geometry.coordinates)) {
                var a = E(t.geometry.coordinates);
                K(a, t.properties.orientation),
                  Ft.fillText(t.properties.value, a[0], a[1]);
              }
            })),
          _.constellations.bounds &&
            (ct.selectAll(N + " .boundaryline").each(function (t) {
              if ((j(_.constellations.boundStyle), U.constellation)) {
                var e = new RegExp("\\b" + U.constellation + "\\b");
                -1 !== t.ids.search(e) &&
                  ((Ft.lineWidth *= 1.5),
                  (Ft.globalAlpha = 1),
                  Ft.setLineDash([]));
              }
              H(t), Ft.stroke();
            }),
            Ft.setLineDash([])),
          _.constellations.lines &&
            ct.selectAll(N + " .constline").each(function (t) {
              A(t.properties.rank, _.constellations.lineStyle),
                H(t),
                Ft.stroke();
            }),
          S(!0),
          _.constellations.names &&
            ct.selectAll(N + " .constname").each(function (t) {
              if (T(t.geometry.coordinates)) {
                A(t.properties.rank, _.constellations.nameStyle);
                var e = E(t.geometry.coordinates);
                Ft.fillText(
                  (function (t) {
                    return t.properties[_.constellations.namesType];
                  })(t),
                  e[0],
                  e[1]
                );
              }
            }),
          _.stars.show &&
            (j(_.stars.style),
            ct.selectAll(N + " .star").each(function (t) {
              if (
                T(t.geometry.coordinates) &&
                t.properties.mag <= _.stars.limit
              ) {
                var e = E(t.geometry.coordinates),
                  a = (function (t) {
                    var e = t.properties.mag;
                    if (null === e) return 0.1;
                    var a = zt * At * Math.exp(jt * (e + 2));
                    return Math.max(a, 0.1);
                  })(t);
                (Ft.fillStyle = J(t)),
                  Ft.beginPath(),
                  Ft.arc(e[0], e[1], a, 0, 2 * Math.PI),
                  Ft.closePath(),
                  Ft.fill(),
                  _.stars.designation &&
                    t.properties.mag <= _.stars.designationLimit * At &&
                    (P(_.stars.designationStyle),
                    Ft.fillText(
                      (function (t) {
                        return g(R, t) ? R[t][_.stars.designationType] : "";
                      })(t.id),
                      e[0] + a,
                      e[1]
                    )),
                  _.stars.propername &&
                    t.properties.mag <= _.stars.propernameLimit * At &&
                    (P(_.stars.propernameStyle),
                    Ft.fillText(
                      (function (t) {
                        var e = _.stars.propernameType;
                        return g(R, t)
                          ? g(R[t], e)
                            ? R[t][e]
                            : R[t].name
                          : "";
                      })(t.id),
                      e[0] - a,
                      e[1]
                    ));
              }
            })),
          _.dsos.show &&
            ct.selectAll(N + " .dso").each(function (t) {
              if (T(t.geometry.coordinates) && O(t.properties, _.dsos.limit)) {
                var e = E(t.geometry.coordinates),
                  a = t.properties.type;
                j(!0 === _.dsos.colors ? _.dsos.symbols[a] : _.dsos.style);
                var n = Y(t, e);
                g(_.dsos.symbols[a], "stroke") ? Ft.stroke() : Ft.fill(),
                  _.dsos.names &&
                    O(t.properties, _.dsos.nameLimit * At) &&
                    (P(_.dsos.nameStyle),
                    !0 === _.dsos.colors &&
                      (Ft.fillStyle = _.dsos.symbols[a].fill),
                    Ft.fillText(
                      (function (t) {
                        var e = _.dsos.namesType,
                          a = t.id;
                        return "desig" !== e && g($, a) && g($[a], e)
                          ? $[a][e]
                          : t.properties.desig;
                      })(t),
                      e[0] + n,
                      e[1] - n
                    ));
              }
            }),
          (_.location || _.formFields.location) && _.planets.show && U.origin)
        ) {
          var n = U.date(),
            r = U.origin(n).spherical();
          ct.selectAll(N + " .planet").each(function (e) {
            var a = e.id(),
              s = 12 * At,
              o = e(n).equatorial(r),
              i = t(o.ephemeris.pos, et[_.transform]);
            if (T(i)) {
              var l = E(i),
                c = _.planets.symbols[a];
              if (
                ("letter" === _.planets.symbolType
                  ? (P(_.planets.symbolStyle),
                    (Ft.fillStyle = c.fill),
                    Ft.fillText(c.letter, l[0], l[1]))
                  : "lun" === a
                  ? (g(c, "size") && v(c.size) && (s = c.size * At),
                    (Ft.fillStyle = c.fill),
                    pt
                      .symbol()
                      .type("crescent")
                      .size(s * s)
                      .age(o.ephemeris.age)
                      .position(l)(Ft))
                  : "disk" === _.planets.symbolType
                  ? ((s =
                      g(c, "size") && v(c.size)
                        ? c.size * At
                        : (function (t) {
                            var e = t.mag;
                            if (null === e) return 2;
                            var a = 4 * At * Math.exp(-0.05 * (e + 2));
                            return Math.max(a, 2);
                          })(o.ephemeris)),
                    (Ft.fillStyle = c.fill),
                    pt
                      .symbol()
                      .type("circle")
                      .size(s * s)
                      .position(l)(Ft),
                    Ft.fill())
                  : "symbol" === _.planets.symbolType &&
                    (P(_.planets.symbolStyle),
                    (Ft.font = (function (t) {
                      var e = t.replace(/(^\D*)(\d+)(\D.+$)/i, "$2");
                      return (
                        (e = Math.round(At * e)),
                        t.replace(/(^\D*)(\d+)(\D.+$)/i, "$1" + e + "$3")
                      );
                    })(_.planets.symbolStyle.font)),
                    (Ft.fillStyle = c.fill),
                    Ft.fillText(c[_.planets.symbolType], l[0], l[1])),
                _.planets.names)
              ) {
                var p = o[_.planets.namesType];
                P(_.planets.nameStyle),
                  (Ft.fillStyle = c.fill),
                  Ft.fillText(p, l[0] - s / 2, l[1] + s / 2);
              }
            }
          });
        }
        if (
          (U.data.length > 0 &&
            U.data.forEach(function (t) {
              t.redraw();
            }),
          (_.location || _.formFields.location) && _.daylight.show && bt.clip)
        ) {
          var o = s("sol");
          if (o) {
            var i = U.zenith(),
              l = o.ephemeris.pos,
              c = d3.geo.distance(i, l),
              p = E(l);
            G.origin(l),
              (function (t, e) {
                var a, n, r, s;
                if (t > 1.885)
                  return (
                    (Ft.fillStyle = "transparent"), void (Ft.globalAlpha = 0)
                  );
                t <= 1.36
                  ? ((n = "#daf1fa"),
                    (r = "#93d7f0"),
                    (s = "#57c0e8"),
                    (a = -(1.36 - t) / 10))
                  : ((a = (t - 1.36) / (1.885 - 1.36)),
                    (n = d3.interpolateLab("#daf1fa", "#e8c866")(a)),
                    (r = d3.interpolateLab("#93c7d0", "#ff854a")(a)),
                    (s = d3.interpolateLab("#57b0c8", "#6caae2")(a)));
                var o = Ft.createRadialGradient(e[0], e[1], 0, e[0], e[1], 300);
                o.addColorStop(0, n),
                  o.addColorStop(0.2 + 0.4 * a, r),
                  o.addColorStop(1, s),
                  (Ft.fillStyle = o),
                  (Ft.globalAlpha =
                    0.9 *
                    (1 -
                      (function (t, e) {
                        return (
                          (Math.pow(Math.E, t * e) - 1) /
                          (Math.pow(Math.E, e) - 1)
                        );
                      })(a, 1.4)));
              })(c, p),
              ct
                .selectAll(N + " .daylight")
                .datum(G)
                .attr("d", H),
              Ft.fill(),
              (Ft.fillStyle = "#fff"),
              T(l) &&
                (Ft.beginPath(),
                Ft.arc(p[0], p[1], 6, 0, 2 * Math.PI),
                Ft.closePath(),
                Ft.fill());
          }
        }
        (_.location || _.formFields.location) &&
          _.horizon.show &&
          !bt.clip &&
          (B.origin(U.nadir()),
          j(_.horizon),
          ct
            .selectAll(N + " .horizon")
            .datum(B)
            .attr("d", H),
          Ft.fill(),
          _.horizon.stroke && Ft.stroke()),
          _.controls &&
            (function (t) {
              var e = f("celestial-zoomin"),
                a = f("celestial-zoomout"),
                n = (bt.scale * gt) / 1024;
              e &&
                a &&
                ((e.disabled = t >= n * W * 0.99), (a.disabled = t <= n));
            })(E.scale()),
          nt && U.runCallback();
      }
      function S(t) {
        var e = E.rotate();
        tt(_.projection, a.projectionRatio),
          E.rotate([0, 0]),
          j(_.background),
          ct.selectAll(N + " .outline").attr("d", H),
          !0 === t ? ((Ft.globalAlpha = 1), Ft.stroke()) : Ft.fill(),
          E.rotate(e);
      }
      function T(t) {
        return bt.clip && d3.geo.distance(_.center, t) > X ? 0 : 1;
      }
      function j(t) {
        (Ft.fillStyle = t.fill || null),
          (Ft.strokeStyle = t.stroke || null),
          (Ft.lineWidth = t.width || null),
          (Ft.globalAlpha = null !== t.opacity ? t.opacity : 1),
          (Ft.font = t.font || null),
          g(t, "dash") ? Ft.setLineDash(t.dash) : Ft.setLineDash([]),
          Ft.beginPath();
      }
      function P(t) {
        (Ft.fillStyle = t.fill),
          (Ft.textAlign = t.align || "left"),
          (Ft.textBaseline = t.baseline || "bottom"),
          (Ft.globalAlpha = null !== t.opacity ? t.opacity : 1),
          (Ft.font = t.font);
      }
      function A(t, e) {
        (t = t || 1),
          (Ft.fillStyle = M(e.fill) ? e.fill[t - 1] : null),
          (Ft.strokeStyle = M(e.stroke) ? e.stroke[t - 1] : null),
          (Ft.lineWidth = M(e.width) ? e.width[t - 1] : null),
          (Ft.globalAlpha = M(e.opacity) ? e.opacity[t - 1] : 1),
          (Ft.font = M(e.font) ? e.font[t - 1] : null),
          g(e, "dash") ? Ft.setLineDash(e.dash) : Ft.setLineDash([]),
          (Ft.textAlign = e.align || "left"),
          (Ft.textBaseline = e.baseline || "bottom"),
          Ft.beginPath();
      }
      function q(t) {
        t ? E.clipAngle(90) : E.clipAngle(null);
      }
      function D(t, e, a) {
        return (
          t +
          (e = e ? "." + e : "") +
          (g(lt[t], Dt) ? "." + Dt : "") +
          (a = a ? "." + a : ".json")
        );
      }
      function O(t, e) {
        return (
          (999 === t.mag && Math.sqrt(parseInt(t.dim)) > e) ||
          (999 !== t.mag && t.mag <= e)
        );
      }
      function Y(t, e) {
        var a = t.properties,
          n =
            (function (t) {
              return t.mag && 999 !== t.mag
                ? Math.pow(2 * Tt * At - t.mag, Pt)
                : Math.pow((parseInt(t.dim) * Tt * At) / 7, 0.5);
            })(a) || 9,
          r = (function (t) {
            return t && g(_.dsos.symbols, t)
              ? _.dsos.symbols[t].shape
              : "circle";
          })(a.type);
        return pt.symbol().type(r).size(n).position(e)(Ft), Math.sqrt(n) / 2;
      }
      function J(t) {
        var e = t.properties.bv;
        return !_.stars.colors || isNaN(e) ? _.stars.style.fill : ot(e);
      }
      function K(t, e) {
        for (
          var a = e.split(""), n = "center", r = "middle", s = a.length - 1;
          s >= 0;
          s--
        )
          switch (a[s]) {
            case "N":
              r = "bottom";
              break;
            case "S":
              r = "top";
              break;
            case "E":
              (n = "left"), (t[0] += 2);
              break;
            case "W":
              (n = "right"), (t[0] -= 2);
          }
        return (Ft.textAlign = n), (Ft.textBaseline = r), t;
      }
      function Z() {
        return v(_.width) && _.width > 0
          ? _.width
          : ht
          ? ht.getBoundingClientRect().width - 2 * yt[0]
          : window.getBoundingClientRect().width - 2 * yt[0];
      }
      function tt(t, e) {
        if (g(it, t)) {
          var a = it[t];
          return g(a, "ratio") || (a.ratio = 2), (a.ratio = e || a.ratio), a;
        }
      }
      function at() {
        if (dt && !(dt.length < 1)) {
          var t,
            e = dt[ut];
          switch (e.param) {
            case "projection":
              t = b({ projection: e.value });
              break;
            case "center":
              t = d({ center: e.value });
              break;
            case "zoom":
              t = c(e.value);
          }
          e.callback && setTimeout(e.callback, t),
            ut++,
            !0 === ft && ut === dt.length && (ut = 0),
            (t = 0 === e.duration || e.duration < t ? t : e.duration),
            ut < dt.length && (rt = setTimeout(at, t));
        }
      }
      var rt,
        ct = U.container,
        dt = [],
        ut = 0,
        ft = !1;
      v((_ = st.set(a).applyDefaults(a)).zoomextend) && (W = _.zoomextend),
        v(_.zoomlevel) && (V = _.zoomlevel);
      var ht = document.getElementById(_.container);
      if (ht) {
        N = "#" + _.container;
        var mt = window.getComputedStyle(ht, null);
        parseInt(mt.width) ||
          _.width ||
          (ht.style.width = h(ht.parentNode.clientWidth));
      } else (N = "body"), (ht = null);
      var yt = [16, 16],
        gt = Z(),
        vt = v(_.background.width) ? gt + _.background.width : gt,
        Mt = window.devicePixelRatio || 1,
        bt = tt(_.projection, _.projectionRatio);
      if (bt) {
        _.lines.graticule.lat &&
          "outline" === _.lines.graticule.lat.pos[0] &&
          (bt.scale -= 2);
        var wt = bt.ratio,
          kt = Math.round(gt / wt),
          xt = Math.round(vt / wt),
          St = (bt.scale * gt) / 1024,
          zt = _.stars.size,
          Tt = _.dsos.size || zt,
          jt = _.stars.exponent,
          Pt = _.dsos.exponent || jt,
          At = 1,
          It = e(_.center),
          qt = _.datapath;
        "body" !== N && (ht.style.height = h(xt)),
          (E = U.projection(_.projection)
            .rotate(It)
            .translate([vt / 2, xt / 2])
            .scale(St * V)),
          (C = d3.geo
            .zoom()
            .projection(E)
            .center([vt / 2, xt / 2])
            .scaleExtent([St, St * W])
            .on("zoom.redraw", w)),
          (St *= V);
        var Lt = d3.select(N).selectAll("canvas"),
          Dt = "" !== _.culture && "iau" !== _.culture ? _.culture : "";
        0 === Lt[0].length && (Lt = d3.select(N).append("canvas")),
          Lt.style("width", h(vt))
            .style("height", h(xt))
            .attr("width", vt * Mt)
            .attr("height", xt * Mt);
        var Ft = Lt.node().getContext("2d");
        Ft.setTransform(Mt, 0, 0, Mt, 0, 0);
        var Ot = d3.geo.graticule().minorStep([15, 10]);
        (H = d3.geo.path().projection(E).context(Ft)),
          ct
            ? ct.selectAll(N + " *").remove()
            : (ct = d3.select(N).append("container")),
          _.interactive
            ? (Lt.call(C),
              d3.select(N).on("dblclick", function () {
                return c(1.5625), !1;
              }))
            : Lt.attr("style", "cursor: default!important"),
          q(bt.clip),
          d3.select(window).on("resize", y),
          !0 === _.interactive &&
            !0 === _.controls &&
            null === f("celestial-zoomin") &&
            (d3
              .select(N)
              .append("input")
              .attr("type", "button")
              .attr("id", "celestial-zoomin")
              .attr("value", "+")
              .on("click", function () {
                return c(1.25), !1;
              }),
            d3
              .select(N)
              .append("input")
              .attr("type", "button")
              .attr("id", "celestial-zoomout")
              .attr("value", "−")
              .on("click", function () {
                return c(0.8), !1;
              })),
          (B = d3.geo.circle().angle([90])),
          (G = d3.geo.circle().angle([179.9])),
          x(_),
          null === f("error") &&
            d3.select("body").append("div").attr("id", "error"),
          null === f("loc")
            ? F(_)
            : !0 === _.location &&
              "zenith" === _.follow &&
              d({ center: U.zenith() }),
          (!0 !== _.location && !0 !== _.formFields.location) ||
            (d3.select(N + " #location").style("display", "inline-block"),
            z("horizon-show", bt.clip),
            z("daylight-show", !bt.clip)),
          (this.container = ct),
          (this.clip = T),
          (this.map = H),
          (this.mapProjection = E),
          (this.context = Ft),
          (this.metrics = function () {
            return { width: gt, height: kt, margin: yt, scale: E.scale() };
          }),
          (this.setStyle = j),
          (this.setTextStyle = P),
          (this.setStyleA = A),
          (this.setConstStyle = function (t, e) {
            var a = u(e);
            Ft.font = a[t];
          }),
          (this.symbol = pt.symbol),
          (this.dsoSymbol = Y),
          (this.redraw = w),
          (this.resize = function (t) {
            return (
              void 0 !== t &&
                (g(t, "width") ? (_.width = t.width) : v(t) && (_.width = t)),
              y(!0),
              _.width
            );
          }),
          (this.reload = function (t) {
            var a;
            t && Object.assign(_, st.set(t)),
              "center" === _.follow && g(_, "center")
                ? (a = e(_.center))
                : "zenith" === _.follow && (a = e(U.zenith())),
              a && E.rotate(a),
              ct.selectAll(N + " *").remove(),
              i();
          }),
          (this.apply = function (t) {
            p(t);
          }),
          (this.reproject = function (t) {
            return b(t);
          }),
          (this.rotate = function (t) {
            return t ? d(t) : _.center;
          }),
          (this.zoomBy = function (t) {
            return t ? c(t) : E.scale() / St;
          }),
          (this.color = function (t) {
            return t && g(_.dsos.symbols, t) ? _.dsos.symbols[t].fill : "#000";
          }),
          (this.starColor = J),
          (this.animate = function (t, e) {
            t && ((dt = t), (ut = 0), (ft = !!e), at());
          }),
          (this.stop = function (t) {
            clearTimeout(rt), !0 === t && (dt = []);
          }),
          (this.go = function (t) {
            dt.length < 1 || (t && t < dt.length && (ut = t), at());
          }),
          i();
      }
    }),
    "object" == typeof module && module.exports)
  ) {
    var Y = require("./lib/d3.js"),
      J = require("./lib/d3.geo.projection.js");
    module.exports = {
      Celestial: function () {
        return U;
      },
      d3: function () {
        return Y;
      },
      "d3.geo.projection": function () {
        return J;
      },
    };
  }
  U.projection = function (t) {
    var e, a, n;
    if (!g(it, t)) throw new Error("Projection not supported: " + t);
    return (
      (e = it[t]),
      (a = null !== e.arg ? d3.geo[t].raw(e.arg) : d3.geo[t].raw),
      (n = function (t, e) {
        return a(-t, e);
      }),
      (n.invert = function (t, e) {
        try {
          var n = a.invert(t, e);
          return (n[0] = n && -n[0]), n;
        } catch (t) {
          console.log(t);
        }
      }),
      d3.geo.projection(n)
    );
  };
  var K = {
      equatorial: [0, 0, 0],
      ecliptic: [0, 0, 23.4393],
      galactic: [93.5949, 28.9362, -58.5988],
      supergalactic: [137.31, 59.5283, 57.7303],
    },
    Q = {
      equatorial: [0, 90],
      ecliptic: [-90, 66.5607],
      galactic: [-167.1405, 27.1283],
      supergalactic: [-76.2458, 15.7089],
    };
  (U.eulerAngles = function () {
    return K;
  }),
    (U.poles = function () {
      return Q;
    });
  var Z = 2 * Math.PI,
    X = Math.PI / 2,
    tt = Math.PI / 180,
    et = {
      ecliptic: [-90, 23.4393, 90],
      "inverse ecliptic": [90, 23.4393, -90],
      galactic: [-167.1405, 62.8717, 122.9319],
      "inverse galactic": [122.9319, 62.8717, -167.1405],
      supergalactic: [283.7542, 74.2911, 26.4504],
      "inverse supergalactic": [26.4504, 74.2911, 283.7542],
      init: function () {
        for (var t in this)
          this[t].constructor == Array &&
            (this[t] = this[t].map(function (t) {
              return t * tt;
            }));
      },
      add: function (t, e) {
        if (e && t && 3 === e.length && !this.hasOwnProperty(t))
          return (
            (this[t] = e.map(function (t) {
              return t * tt;
            })),
            this[t]
          );
      },
    };
  et.init(),
    (U.euler = function () {
      return et;
    });
  var at = function (t, e, n) {
    var r = a(t, n[1]) - e[0];
    r < 0 && (r += 360), (r *= tt);
    var s = e[1] * tt,
      o = n[0] * tt,
      i = Math.asin(
        Math.sin(s) * Math.sin(o) + Math.cos(s) * Math.cos(o) * Math.cos(r)
      ),
      l = Math.acos(
        (Math.sin(s) - Math.sin(i) * Math.sin(o)) / (Math.cos(i) * Math.cos(o))
      );
    return Math.sin(r) > 0 && (l = 2 * Math.PI - l), [i / tt, l / tt, 0];
  };
  (at.inverse = function (t, e, n) {
    var r = e[0] * tt,
      s = e[1] * tt,
      o = n[0] * tt,
      i = Math.asin(
        Math.sin(r) * Math.sin(o) + Math.cos(r) * Math.cos(o) * Math.cos(s)
      ),
      l = (
        (Math.sin(r) - Math.sin(i) * Math.sin(o)) /
        (Math.cos(i) * Math.cos(o))
      ).toFixed(6);
    return (l = Math.acos(l)), (l /= tt), [a(t, n[1]) - l, i / tt, 0];
  }),
    (U.horizontal = at),
    (U.ha = function (t, e, n) {
      var r = a(t, e) - n;
      return r < 180 && (r += 360), r;
    });
  var nt = !1;
  (U.add = function (t) {
    var e = {};
    return g(t, "type")
      ? ("dso" !== t.type && "json" !== t.type) ||
        (g(t, "file") && g(t, "callback"))
        ? ("line" !== t.type && "raw" !== t.type) || g(t, "callback")
          ? (g(t, "file") && (e.file = t.file),
            (e.type = t.type),
            g(t, "callback") && (e.callback = t.callback),
            g(t, "redraw") && (e.redraw = t.redraw),
            g(t, "save") && (e.save = t.save),
            void U.data.push(e))
          : console.log("Can't add data")
        : console.log("Can't add data file")
      : console.log("Missing type");
  }),
    (U.remove = function (t) {
      if (null !== t && t < U.data.length) return U.data.splice(t, 1);
    }),
    (U.clear = function () {
      U.data = [];
    }),
    (U.addCallback = function (t) {
      (U.callback = t), (nt = null !== t);
    }),
    (U.runCallback = function (t) {
      (nt = !1), U.callback(), (nt = !0);
    }),
    (U.getData = n),
    (U.getPoint = function (e, a) {
      return t(e, et[a]);
    }),
    (U.getPlanet = s);
  var rt = {},
    st = {
      width: 0,
      projection: "aitoff",
      projectionRatio: null,
      transform: "equatorial",
      center: null,
      geopos: null,
      follow: "zenith",
      orientationfixed: !0,
      zoomlevel: null,
      zoomextend: 10,
      adaptable: !0,
      interactive: !0,
      disableAnimations: !1,
      form: !1,
      location: !1,
      formFields: {
        location: !0,
        general: !0,
        stars: !0,
        dsos: !0,
        constellations: !0,
        lines: !0,
        other: !0,
        download: !1,
      },
      advanced: !0,
      daterange: [],
      settimezone: !0,
      timezoneid: "AEFXZPQ3FDPF",
      controls: !0,
      lang: "",
      culture: "",
      container: "celestial-map",
      datapath: "data/",
      stars: {
        show: !0,
        limit: 6,
        colors: !0,
        style: { fill: "#ffffff", opacity: 1 },
        designation: !0,
        designationType: "desig",
        designationStyle: {
          fill: "#ddddbb",
          font: "11px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif",
          align: "left",
          baseline: "top",
        },
        designationLimit: 2.5,
        propername: !1,
        propernameType: "name",
        propernameStyle: {
          fill: "#ddddbb",
          font: "13px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif",
          align: "right",
          baseline: "bottom",
        },
        propernameLimit: 1.5,
        size: 7,
        exponent: -0.28,
        data: "stars.6.json",
      },
      dsos: {
        show: !0,
        limit: 6,
        colors: !0,
        style: { fill: "#cccccc", stroke: "#cccccc", width: 2, opacity: 1 },
        names: !0,
        namesType: "desig",
        nameStyle: {
          fill: "#cccccc",
          font: "11px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, serif",
          align: "left",
          baseline: "bottom",
        },
        nameLimit: 4,
        size: null,
        exponent: 1.4,
        data: "dsos.bright.json",
        symbols: {
          gg: { shape: "circle", fill: "#ff0000" },
          g: { shape: "ellipse", fill: "#ff0000" },
          s: { shape: "ellipse", fill: "#ff0000" },
          s0: { shape: "ellipse", fill: "#ff0000" },
          sd: { shape: "ellipse", fill: "#ff0000" },
          e: { shape: "ellipse", fill: "#ff0000" },
          i: { shape: "ellipse", fill: "#ff0000" },
          oc: { shape: "circle", fill: "#ff9900", stroke: "#ff9900", width: 2 },
          gc: { shape: "circle", fill: "#ff9900" },
          en: { shape: "square", fill: "#ff00cc" },
          bn: { shape: "square", fill: "#ff00cc" },
          sfr: { shape: "square", fill: "#cc00ff" },
          rn: { shape: "square", fill: "#0000ff" },
          pn: { shape: "diamond", fill: "#00cccc" },
          snr: { shape: "diamond", fill: "#ff00cc" },
          dn: { shape: "square", fill: "#999999", stroke: "#999999", width: 2 },
          pos: {
            shape: "marker",
            fill: "#cccccc",
            stroke: "#cccccc",
            width: 1.5,
          },
        },
      },
      constellations: {
        show: !0,
        names: !0,
        namesType: "desig",
        nameStyle: {
          fill: "#cccc99",
          align: "center",
          baseline: "middle",
          opacity: 0.8,
          font: [
            "14px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, sans-serif",
            "12px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, sans-serif",
            "11px 'Lucida Sans Unicode', 'DejaVu Sans', Helvetica, Arial, sans-serif",
          ],
        },
        lines: !0,
        lineStyle: { stroke: "#cccccc", width: 1.5, opacity: 0.6 },
        bounds: !1,
        boundStyle: { stroke: "#ccff00", width: 1, opacity: 0.8, dash: [4, 4] },
      },
      mw: { show: !0, style: { fill: "#ffffff", opacity: "0.15" } },
      lines: {
        graticule: {
          show: !0,
          stroke: "#cccccc",
          width: 0.6,
          opacity: 0.8,
          lon: {
            pos: [],
            fill: "#eee",
            font: "10px 'Lucida Sans Unicode', Helvetica, Arial, sans-serif",
          },
          lat: {
            pos: [],
            fill: "#eee",
            font: "10px 'Lucida Sans Unicode', Helvetica, Arial, sans-serif",
          },
        },
        equatorial: { show: !0, stroke: "#aaaaaa", width: 1.3, opacity: 0.7 },
        ecliptic: { show: !0, stroke: "#66cc66", width: 1.3, opacity: 0.7 },
        galactic: { show: !1, stroke: "#cc6666", width: 1.3, opacity: 0.7 },
        supergalactic: {
          show: !1,
          stroke: "#cc66cc",
          width: 1.3,
          opacity: 0.7,
        },
      },
      background: {
        fill: "#000000",
        opacity: 1,
        stroke: "#000000",
        width: 1.5,
      },
      horizon: {
        show: !1,
        stroke: "#cccccc",
        width: 1,
        fill: "#000000",
        opacity: 0.4,
      },
      daylight: { show: !1 },
      planets: {
        show: !1,
        which: [
          "sol",
          "mer",
          "ven",
          "ter",
          "lun",
          "mar",
          "jup",
          "sat",
          "ura",
          "nep",
          "cer",
          "plu",
        ],
        symbols: {
          sol: { symbol: "☉", letter: "Su", fill: "#ffff00", size: 12 },
          mer: { symbol: "☿", letter: "Me", fill: "#cccccc" },
          ven: { symbol: "♀", letter: "V", fill: "#eeeecc" },
          ter: { symbol: "⊕", letter: "T", fill: "#00ccff" },
          lun: { symbol: "●", letter: "L", fill: "#ffffff", size: 12 },
          mar: { symbol: "♂", letter: "Ma", fill: "#ff6600" },
          cer: { symbol: "⚳", letter: "C", fill: "#cccccc" },
          ves: { symbol: "⚶", letter: "Ma", fill: "#cccccc" },
          jup: { symbol: "♃", letter: "J", fill: "#ffaa33" },
          sat: { symbol: "♄", letter: "Sa", fill: "#ffdd66" },
          ura: { symbol: "♅", letter: "U", fill: "#66ccff" },
          nep: { symbol: "♆", letter: "N", fill: "#6666ff" },
          plu: { symbol: "♇", letter: "P", fill: "#aaaaaa" },
          eri: { symbol: "⚪", letter: "E", fill: "#eeeeee" },
        },
        symbolStyle: {
          fill: "#cccccc",
          opacity: 1,
          font: "bold 20px 'DejaVu Sans Mono', 'Arial Unicode MS', sans-serif",
          align: "center",
          baseline: "middle",
        },
        symbolType: "symbol",
        names: !1,
        nameStyle: {
          fill: "#cccccc",
          font: "14px 'Lucida Sans Unicode', 'DejaVu Sans', sans-serif",
          align: "right",
          baseline: "top",
        },
        namesType: "en",
      },
      set: function (t) {
        var e,
          a,
          n = {},
          r = {};
        if (
          (0 === Object.entries(rt).length
            ? Object.assign(n, this)
            : Object.assign(n, rt),
          !t)
        )
          return n;
        for (e in n)
          if (g(n, e))
            if (g(t, e) && null !== t[e])
              if (null === n[e] || n[e].constructor != Object) r[e] = t[e];
              else
                for (a in ((r[e] = {}), n[e]))
                  g(t[e], a) ? (r[e][a] = t[e][a]) : (r[e][a] = n[e][a]);
            else r[e] = n[e];
        return (
          (r.constellations.nameStyle.font = u(
            r.constellations.nameStyle.font
          )),
          (r.constellations.nameStyle.opacity = u(
            r.constellations.nameStyle.opacity
          )),
          (r.constellations.nameStyle.fill = u(
            r.constellations.nameStyle.fill
          )),
          (r.constellations.lineStyle.width = u(
            r.constellations.lineStyle.width
          )),
          (r.constellations.lineStyle.opacity = u(
            r.constellations.lineStyle.opacity
          )),
          (r.constellations.lineStyle.stroke = u(
            r.constellations.lineStyle.stroke
          )),
          Object.assign(rt, r),
          r
        );
      },
      applyDefaults: function (t) {
        var e = {};
        return (
          Object.assign(e, rt),
          (e.stars.size = e.stars.size || 7),
          (e.stars.exponent = e.stars.exponent || -0.28),
          (!e.center || e.center.length <= 0) && (e.center = [0, 0, 0]),
          (e.datapath = e.datapath || ""),
          (e.datapath = e.datapath.replace(/([^\/]$)/, "$1/")),
          (e.transform && "" !== e.transform) || (e.transform = "equatorial"),
          (e.culture && -1 !== e.culture.search(/^cn$/)) || (e.culture = "iau"),
          t &&
            (g(t, "stars") &&
              (g(t.stars, "names") && (e.stars.designation = t.stars.names),
              g(t.stars, "namelimit") &&
                (e.stars.designationLimit = t.stars.namelimit),
              g(t.stars, "namestyle") &&
                Object.assign(e.stars.designationStyle, t.stars.namestyle),
              g(t.stars, "proper") && (e.stars.propername = t.stars.proper),
              g(t.stars, "propernamelimit") &&
                (e.stars.propernameLimit = t.stars.propernamelimit),
              g(t.stars, "propernamestyle") &&
                Object.assign(
                  e.stars.propernameStyle,
                  t.stars.propernamestyle
                )),
            g(t, "dsos") &&
              (g(t.dsos, "desig") &&
                !0 === t.dsos.desig &&
                (e.dsos.namesType = "desig"),
              g(t.dsos, "namelimit") && (e.dsos.nameLimit = t.dsos.namelimit),
              g(t.dsos, "namestyle") &&
                Object.assign(e.dsos.nameStyle, t.dsos.namestyle)),
            g(t, "constellations") &&
              (g(t.constellations, "show") &&
                !0 === t.constellations.show &&
                (e.constellations.names = !0),
              g(t.constellations, "desig") &&
                !0 === t.constellations.desig &&
                (e.constellations.namesType = "desig"),
              "latin" === e.constellations.namesType &&
                (e.constellations.namesType = "la"),
              "iau" === e.constellations.namesType &&
                (e.constellations.namesType = "name"),
              g(t.constellations, "namestyle") &&
                Object.assign(
                  e.constellations.nameStyle,
                  t.constellations.namestyle
                ),
              g(t.constellations, "linestyle") &&
                Object.assign(
                  e.constellations.lineStyle,
                  t.constellations.linestyle
                ),
              g(t.constellations, "boundstyle") &&
                Object.assign(
                  e.constellations.boundStyle,
                  t.constellations.boundstyle
                )),
            g(t, "planets") &&
              g(t.planets, "style") &&
              Object.assign(e.planets.style, t.planets.symbolStyle)),
          (e.stars.designationType && "" !== e.stars.designationType) ||
            (e.stars.designationType = "desig"),
          g(lt.starnames[e.culture].designation, e.stars.designationType) ||
            (e.designationType = "desig"),
          (e.stars.propernameType && "" !== e.stars.propernameType) ||
            (e.stars.propernameType = "name"),
          g(lt.starnames[e.culture].propername, e.stars.propernameType) ||
            (e.propernameType = "name"),
          (e.dsos.namesType && "" !== e.dsos.namesType) ||
            (e.dsos.namesType = "desig"),
          (e.constellations.namesType && "" !== e.constellations.namesType) ||
            (e.constellations.namesType = "desig"),
          g(lt.constellations[e.culture].names, e.constellations.namesType) ||
            (e.constellations.namesType = "name"),
          (e.planets.symbolType && "" !== e.planets.symbolType) ||
            (e.planets.symbolType = "symbol"),
          (e.planets.namesType && "" !== e.planets.namesType) ||
            (e.planets.namesType = "desig"),
          g(lt.planets[e.culture].names, e.planets.namesType) ||
            (e.planets.namesType = "desig"),
          (e.constellations.nameStyle.font = u(
            e.constellations.nameStyle.font
          )),
          (e.constellations.nameStyle.opacity = u(
            e.constellations.nameStyle.opacity
          )),
          (e.constellations.nameStyle.fill = u(
            e.constellations.nameStyle.fill
          )),
          (e.constellations.lineStyle.width = u(
            e.constellations.lineStyle.width
          )),
          (e.constellations.lineStyle.opacity = u(
            e.constellations.lineStyle.opacity
          )),
          (e.constellations.lineStyle.stroke = u(
            e.constellations.lineStyle.stroke
          )),
          Object.assign(rt, e),
          e
        );
      },
    };
  U.settings = function () {
    return st;
  };
  var ot = d3.scale
      .quantize()
      .domain([3.347, -0.335])
      .range([
        "#ff4700",
        "#ff4b00",
        "#ff4f00",
        "#ff5300",
        "#ff5600",
        "#ff5900",
        "#ff5b00",
        "#ff5d00",
        "#ff6000",
        "#ff6300",
        "#ff6500",
        "#ff6700",
        "#ff6900",
        "#ff6b00",
        "#ff6d00",
        "#ff7000",
        "#ff7300",
        "#ff7500",
        "#ff7800",
        "#ff7a00",
        "#ff7c00",
        "#ff7e00",
        "#ff8100",
        "#ff8300",
        "#ff8506",
        "#ff870a",
        "#ff8912",
        "#ff8b1a",
        "#ff8e21",
        "#ff9127",
        "#ff932c",
        "#ff9631",
        "#ff9836",
        "#ff9a3c",
        "#ff9d3f",
        "#ffa148",
        "#ffa34b",
        "#ffa54f",
        "#ffa753",
        "#ffa957",
        "#ffab5a",
        "#ffad5e",
        "#ffb165",
        "#ffb269",
        "#ffb46b",
        "#ffb872",
        "#ffb975",
        "#ffbb78",
        "#ffbe7e",
        "#ffc184",
        "#ffc489",
        "#ffc78f",
        "#ffc892",
        "#ffc994",
        "#ffcc99",
        "#ffce9f",
        "#ffd1a3",
        "#ffd3a8",
        "#ffd5ad",
        "#ffd7b1",
        "#ffd9b6",
        "#ffdbba",
        "#ffddbe",
        "#ffdfc2",
        "#ffe1c6",
        "#ffe3ca",
        "#ffe4ce",
        "#ffe8d5",
        "#ffe9d9",
        "#ffebdc",
        "#ffece0",
        "#ffefe6",
        "#fff0e9",
        "#fff2ec",
        "#fff4f2",
        "#fff5f5",
        "#fff6f8",
        "#fff9fd",
        "#fef9ff",
        "#f9f6ff",
        "#f6f4ff",
        "#f3f2ff",
        "#eff0ff",
        "#ebeeff",
        "#e9edff",
        "#e6ebff",
        "#e3e9ff",
        "#e0e7ff",
        "#dee6ff",
        "#dce5ff",
        "#d9e3ff",
        "#d7e2ff",
        "#d3e0ff",
        "#c9d9ff",
        "#bfd3ff",
        "#b7ceff",
        "#afc9ff",
        "#a9c5ff",
        "#a4c2ff",
        "#9fbfff",
        "#9bbcff",
      ]),
    it = {
      airy: {
        n: "Airy’s Minimum Error",
        arg: Math.PI / 2,
        scale: 360,
        ratio: 1,
        clip: !0,
      },
      aitoff: { n: "Aitoff", arg: null, scale: 162 },
      armadillo: { n: "Armadillo", arg: 0, scale: 250 },
      august: { n: "August", arg: null, scale: 94, ratio: 1.4 },
      azimuthalEqualArea: {
        n: "Azimuthal Equal Area",
        arg: null,
        scale: 340,
        ratio: 1,
        clip: !0,
      },
      azimuthalEquidistant: {
        n: "Azimuthal Equidistant",
        arg: null,
        scale: 320,
        ratio: 1,
        clip: !0,
      },
      baker: { n: "Baker Dinomic", arg: null, scale: 160, ratio: 1.4 },
      berghaus: { n: "Berghaus Star", arg: 0, scale: 320, ratio: 1, clip: !0 },
      boggs: { n: "Boggs Eumorphic", arg: null, scale: 170 },
      bonne: { n: "Bonne", arg: Math.PI / 2.5, scale: 225, ratio: 0.88 },
      bromley: { n: "Bromley", arg: null, scale: 162 },
      cassini: { n: "Cassini", arg: null, scale: 325, ratio: 1, clip: !0 },
      collignon: { n: "Collignon", arg: null, scale: 100, ratio: 2.6 },
      craig: {
        n: "Craig Retroazimuthal",
        arg: 0,
        scale: 310,
        ratio: 1.5,
        clip: !0,
      },
      craster: { n: "Craster Parabolic", arg: null, scale: 160 },
      cylindricalEqualArea: {
        n: "Cylindrical Equal Area",
        arg: Math.PI / 6,
        scale: 190,
        ratio: 2.3,
      },
      cylindricalStereographic: {
        n: "Cylindrical Stereographic",
        arg: Math.PI / 4,
        scale: 230,
        ratio: 1.3,
      },
      eckert1: { n: "Eckert I", arg: null, scale: 175 },
      eckert2: { n: "Eckert II", arg: null, scale: 175 },
      eckert3: { n: "Eckert III", arg: null, scale: 190 },
      eckert4: { n: "Eckert IV", arg: null, scale: 190 },
      eckert5: { n: "Eckert V", arg: null, scale: 182 },
      eckert6: { n: "Eckert VI", arg: null, scale: 182 },
      eisenlohr: { n: "Eisenlohr", arg: null, scale: 102 },
      equirectangular: { n: "Equirectangular", arg: null, scale: 165 },
      fahey: { n: "Fahey", arg: null, scale: 196, ratio: 1.4 },
      mtFlatPolarParabolic: {
        n: "Flat Polar Parabolic",
        arg: null,
        scale: 175,
      },
      mtFlatPolarQuartic: {
        n: "Flat Polar Quartic",
        arg: null,
        scale: 230,
        ratio: 1.65,
      },
      mtFlatPolarSinusoidal: {
        n: "Flat Polar Sinusoidal",
        arg: null,
        scale: 175,
        ratio: 1.9,
      },
      foucaut: { n: "Foucaut", arg: null, scale: 142 },
      ginzburg4: { n: "Ginzburg IV", arg: null, scale: 180, ratio: 1.7 },
      ginzburg5: { n: "Ginzburg V", arg: null, scale: 196, ratio: 1.55 },
      ginzburg6: { n: "Ginzburg VI", arg: null, scale: 190, ratio: 1.4 },
      ginzburg8: { n: "Ginzburg VIII", arg: null, scale: 205, ratio: 1.3 },
      ginzburg9: { n: "Ginzburg IX", arg: null, scale: 190, ratio: 1.4 },
      homolosine: { n: "Goode Homolosine", arg: null, scale: 160, ratio: 2.2 },
      hammer: { n: "Hammer", arg: 2, scale: 180 },
      hatano: { n: "Hatano", arg: null, scale: 186 },
      healpix: { n: "HEALPix", arg: 1, scale: 320, ratio: 1.2 },
      hill: { n: "Hill Eucyclic", arg: 2, scale: 190, ratio: 1.1 },
      kavrayskiy7: { n: "Kavrayskiy VII", arg: null, scale: 185, ratio: 1.75 },
      lagrange: {
        n: "Lagrange",
        arg: Math.PI / 4,
        scale: 88,
        ratio: 1.6,
        clip: !1,
      },
      larrivee: { n: "l'Arrivée", arg: null, scale: 160, ratio: 1.25 },
      laskowski: {
        n: "Laskowski Tri-Optimal",
        arg: null,
        scale: 165,
        ratio: 1.7,
      },
      loximuthal: { n: "Loximuthal", arg: Math.PI / 4, scale: 175, ratio: 1.8 },
      mercator: { n: "Mercator", arg: null, scale: 160, ratio: 1.3 },
      miller: { n: "Miller", arg: null, scale: 160, ratio: 1.5 },
      mollweide: { n: "Mollweide", arg: null, scale: 180 },
      naturalEarth: { n: "Natural Earth", arg: null, scale: 185, ratio: 1.85 },
      nellHammer: { n: "Nell Hammer", arg: null, scale: 160, ratio: 2.6 },
      orthographic: {
        n: "Orthographic",
        arg: null,
        scale: 480,
        ratio: 1,
        clip: !0,
      },
      patterson: {
        n: "Patterson Cylindrical",
        arg: null,
        scale: 160,
        ratio: 1.75,
      },
      polyconic: { n: "Polyconic", arg: null, scale: 160, ratio: 1.3 },
      quincuncial: { n: "Quincuncial", arg: null, scale: 160, ratio: 1.3 },
      rectangularPolyconic: {
        n: "Rectangular Polyconic",
        arg: 0,
        scale: 160,
        ratio: 1.65,
      },
      robinson: { n: "Robinson", arg: null, scale: 160 },
      sinusoidal: { n: "Sinusoidal", arg: null, scale: 160, ratio: 2 },
      stereographic: {
        n: "Stereographic",
        arg: null,
        scale: 500,
        ratio: 1,
        clip: !0,
      },
      times: { n: "Times", arg: null, scale: 210, ratio: 1.4 },
      twoPointEquidistant: {
        n: "Two-Point Equidistant",
        arg: Math.PI / 2,
        scale: 320,
        ratio: 1.15,
        clip: !0,
      },
      vanDerGrinten: { n: "van Der Grinten", arg: null, scale: 160, ratio: 1 },
      vanDerGrinten2: {
        n: "van Der Grinten II",
        arg: null,
        scale: 160,
        ratio: 1,
      },
      vanDerGrinten3: {
        n: "van Der Grinten III",
        arg: null,
        scale: 160,
        ratio: 1,
      },
      vanDerGrinten4: {
        n: "van Der Grinten IV",
        arg: null,
        scale: 160,
        ratio: 1.6,
      },
      wagner4: { n: "Wagner IV", arg: null, scale: 185 },
      wagner6: { n: "Wagner VI", arg: null, scale: 160 },
      wagner7: { n: "Wagner VII", arg: null, scale: 190, ratio: 1.8 },
      wiechel: { n: "Wiechel", arg: null, scale: 360, ratio: 1, clip: !0 },
      winkel3: { n: "Winkel Tripel", arg: null, scale: 196, ratio: 1.7 },
    };
  U.projections = function () {
    return it;
  };
  var lt = {
      starnames: {
        iau: {
          designation: {
            desig: "Designation",
            bayer: "Bayer",
            flam: "Flamsteed",
            var: "Variable",
            gl: "Gliese",
            hd: "Draper",
            hip: "Hipparcos",
          },
          propername: {
            name: "IAU Name",
            ar: "Arabic",
            zh: "Chinese",
            en: "English",
            fi: "Finnish",
            fr: "French",
            de: "German",
            el: "Greek",
            he: "Hebrew",
            hi: "Hindi",
            it: "Italian",
            ja: "Japanese",
            ko: "Korean",
            la: "Latin",
            fa: "Persian",
            ru: "Russian",
            es: "Spanish",
            tr: "Turkish",
          },
        },
        cn: {
          propername: { name: "Proper name", en: "English", pinyin: "Pinyin" },
          designation: { desig: "IAU Designation" },
        },
      },
      constellations: {
        iau: {
          names: {
            desig: "Designation",
            name: "IAU Name",
            ar: "Arabic",
            zh: "Chinese",
            cz: "Czech",
            en: "English",
            ee: "Estonian",
            fi: "Finnish",
            fr: "French",
            de: "German",
            el: "Greek",
            he: "Hebrew",
            hi: "Hindi",
            it: "Italian",
            ja: "Japanese",
            sw: "Kiswahili",
            ko: "Korean",
            la: "Latin",
            fa: "Persian",
            ru: "Russian",
            es: "Spanish",
            tr: "Turkish",
          },
        },
        cn: { names: { name: "Proper name", en: "English", pinyin: "Pinyin" } },
      },
      planets: {
        iau: {
          symbol: { symbol: "☾ Symbol", letter: "Ⅼ Letter", disk: "● Disk" },
          names: {
            desig: "Designation",
            ar: "Arabic",
            zh: "Chinese",
            en: "English",
            fr: "French",
            de: "German",
            el: "Greek",
            he: "Hebrew",
            hi: "Hindi",
            it: "Italian",
            ja: "Japanese",
            ko: "Korean",
            la: "Latin",
            fa: "Persian",
            ru: "Russian",
            es: "Spanish",
          },
        },
        cn: {
          symbol: { symbol: "☾ Symbol", letter: "Ⅼ Letter", disk: "● Disk" },
          names: {
            desig: "Designation",
            name: "Chinese",
            pinyin: "Pinyin",
            en: "English",
          },
        },
      },
      dsonames: {
        iau: {
          names: {
            desig: "Designation",
            name: "English",
            ar: "Arabic",
            zh: "Chinese",
            fi: "Finnish",
            fr: "French",
            de: "German",
            el: "Greek",
            hi: "Hindi",
            it: "Italian",
            ja: "Japanese",
            ko: "Korean",
            la: "Latin",
            fa: "Persian",
            ru: "Russian",
            es: "Spanish",
            tr: "Turkish",
          },
        },
        cn: {
          names: {
            desig: "Designation",
            name: "Chinese",
            pinyin: "Pinyin",
            en: "English",
          },
        },
      },
    },
    ct = {
      iau: Object.keys(lt.constellations.iau.names)
        .concat(Object.keys(lt.planets.iau.names))
        .filter(function (t, e, a) {
          return a.indexOf(t) === e;
        }),
      cn: Object.keys(lt.constellations.cn.names)
        .concat(Object.keys(lt.starnames.cn.propername))
        .filter(function (t, e, a) {
          return a.indexOf(t) === e;
        }),
    },
    pt = {
      symbol: function () {
        function t(t) {
          o[a()](t);
        }
        var e,
          a = d3.functor("circle"),
          n = d3.functor(64),
          r = d3.functor(Math.PI),
          s = (d3.functor("#fff"), d3.functor("")),
          o =
            (d3.functor([2, 2]),
            {
              circle: function (t) {
                var a = Math.sqrt(n()) / 2;
                return t.arc(e[0], e[1], a, 0, 2 * Math.PI), t.closePath(), a;
              },
              square: function (t) {
                var a = Math.sqrt(n()) / 1.7;
                return (
                  t.moveTo(e[0] - a, e[1] - a),
                  t.lineTo(e[0] + a, e[1] - a),
                  t.lineTo(e[0] + a, e[1] + a),
                  t.lineTo(e[0] - a, e[1] + a),
                  t.closePath(),
                  a
                );
              },
              diamond: function (t) {
                var a = Math.sqrt(n()) / 1.5;
                return (
                  t.moveTo(e[0], e[1] - a),
                  t.lineTo(e[0] + a, e[1]),
                  t.lineTo(e[0], e[1] + a),
                  t.lineTo(e[0] - a, e[1]),
                  t.closePath(),
                  a
                );
              },
              triangle: function (t) {
                var a = Math.sqrt(n()) / Math.sqrt(3);
                return (
                  t.moveTo(e[0], e[1] - a),
                  t.lineTo(e[0] + a, e[1] + a),
                  t.lineTo(e[0] - a, e[1] + a),
                  t.closePath(),
                  a
                );
              },
              ellipse: function (t) {
                var a = Math.sqrt(n()) / 2;
                return (
                  t.save(),
                  t.translate(e[0], e[1]),
                  t.scale(1.6, 0.8),
                  t.beginPath(),
                  t.arc(0, 0, a, 0, 2 * Math.PI),
                  t.closePath(),
                  t.restore(),
                  a
                );
              },
              marker: function (t) {
                var a = Math.sqrt(n()) / 2;
                return (
                  t.moveTo(e[0], e[1] - a),
                  t.lineTo(e[0], e[1] + a),
                  t.moveTo(e[0] - a, e[1]),
                  t.lineTo(e[0] + a, e[1]),
                  t.closePath(),
                  a
                );
              },
              "cross-circle": function (t) {
                var a = Math.sqrt(n()),
                  r = a / 2;
                return (
                  t.moveTo(e[0], e[1] - a),
                  t.lineTo(e[0], e[1] + a),
                  t.moveTo(e[0] - a, e[1]),
                  t.lineTo(e[0] + a, e[1]),
                  t.stroke(),
                  t.beginPath(),
                  t.moveTo(e[0], e[1]),
                  t.arc(e[0], e[1], r, 0, 2 * Math.PI),
                  t.closePath(),
                  r
                );
              },
              "stroke-circle": function (t) {
                var a = Math.sqrt(n()),
                  r = a / 2;
                return (
                  t.moveTo(e[0], e[1] - a),
                  t.lineTo(e[0], e[1] + a),
                  t.stroke(),
                  t.beginPath(),
                  t.moveTo(e[0], e[1]),
                  t.arc(e[0], e[1], r, 0, 2 * Math.PI),
                  t.closePath(),
                  r
                );
              },
              crescent: function (t) {
                var a = Math.sqrt(n()) / 2,
                  s = r(),
                  o = 0.5 * (1 - Math.cos(s)),
                  i = 1.6 * Math.abs(o - 0.5) + 0.01,
                  l = s > Math.PI,
                  c = Math.abs(o) > 0.5 ? l : !l,
                  p = t.fillStyle,
                  d = o < 0.157 ? "#669" : "#557";
                return (
                  t.save(),
                  (t.fillStyle = d),
                  t.beginPath(),
                  t.moveTo(e[0], e[1]),
                  t.arc(e[0], e[1], a, 0, 2 * Math.PI),
                  t.closePath(),
                  t.fill(),
                  (t.fillStyle = p),
                  t.beginPath(),
                  t.moveTo(e[0], e[1]),
                  t.arc(e[0], e[1], a, -Math.PI / 2, Math.PI / 2, l),
                  t.scale(i, 1),
                  t.arc(e[0] / i, e[1], a, Math.PI / 2, -Math.PI / 2, c),
                  t.closePath(),
                  t.fill(),
                  t.restore(),
                  a
                );
              },
            });
        return (
          (t.type = function (e) {
            return arguments.length ? ((a = d3.functor(e)), t) : a;
          }),
          (t.size = function (e) {
            return arguments.length ? ((n = d3.functor(e)), t) : n;
          }),
          (t.age = function (e) {
            return arguments.length ? ((r = d3.functor(e)), t) : r;
          }),
          (t.text = function (e) {
            return arguments.length ? ((s = d3.functor(e)), t) : s;
          }),
          (t.position = function (a) {
            if (arguments.length) return (e = a), t;
          }),
          t
        );
      },
    };
  U.Canvas = pt;
  var dt = function (t) {
      return (Math.pow(Math.E, t) - Math.pow(Math.E, -t)) / 2;
    },
    ut = function (t) {
      return (Math.pow(Math.E, t) + Math.pow(Math.E, -t)) / 2;
    },
    ft = function (t) {
      return Math.log(t + Math.sqrt(t * t + 1));
    },
    ht = function (t) {
      return ((t + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;
    },
    mt = function (t) {
      return (t + 2 * Math.PI) % (2 * Math.PI);
    },
    yt = function (t) {
      var e = t[0],
        a = X - t[1],
        n = t[2];
      return {
        x: n * Math.sin(a) * Math.cos(e),
        y: n * Math.sin(a) * Math.sin(e),
        z: n * Math.cos(a),
      };
    },
    gt =
      (Math.PI,
      Math.PI,
      Math.PI,
      {
        "stars-show": [
          "stars-limit",
          "stars-colors",
          "stars-style-fill",
          "stars-designation",
          "stars-propername",
          "stars-size",
          "stars-exponent",
        ],
        "stars-designation": [
          "stars-designationType",
          "stars-designationLimit",
        ],
        "stars-propername": ["stars-propernameLimit", "stars-propernameType"],
        "dsos-show": [
          "dsos-limit",
          "dsos-colors",
          "dsos-style-fill",
          "dsos-names",
          "dsos-size",
          "dsos-exponent",
        ],
        "dsos-names": ["dsos-namesType", "dsos-nameLimit"],
        "mw-show": ["mw-style-opacity", "mw-style-fill"],
        "constellations-names": ["constellations-namesType"],
        "planets-show": ["planets-symbolType", "planets-names"],
        "planets-names": ["planets-namesType"],
      }),
    vt = {
      sol: 0.0002959122082855911,
      mer: 0x95955473dbc3,
      ven: 0x89d9374048629,
      ter: 0xa923c08a47948,
      lun: 36599199229256,
      mar: 319711652803400,
      cer: 467549107200,
      ves: 129071530155,
      jup: 0xd20883d548bcd80,
      sat: 0x3ee3798098fbac0,
      ura: 0x99ad2c4e2f7f70,
      nep: 0xb54f848fd74430,
      plu: 7327611364884,
      eri: 827117568e4,
    },
    Mt = {
      sol: "☉",
      mer: "☿",
      ven: "♀",
      ter: "⊕",
      lun: "●",
      mar: "♂",
      cer: "⚳",
      ves: "⚶",
      jup: "♃",
      sat: "♄",
      ura: "♅",
      nep: "♆",
      plu: "♇",
      eri: "⚪",
    },
    bt = 23.43928 * tt,
    wt = Math.sin(bt),
    kt = Math.cos(bt),
    xt = [
      "a",
      "e",
      "i",
      "w",
      "M",
      "L",
      "W",
      "N",
      "n",
      "ep",
      "ref",
      "lecl",
      "becl",
      "Tilt",
    ],
    St = function () {
      function t(e) {
        return (
          h(e),
          "sol" === i
            ? ((f.ephemeris.x = 0),
              (f.ephemeris.y = 0),
              (f.ephemeris.z = 0),
              (f.ephemeris.mag = -6),
              t)
            : (m(), t)
        );
      }
      function e(t, e) {
        for (
          var a = e > 1 ? t * t : -t * t,
            n = (e * a * t) / 6,
            r = (1 - e) * t - n,
            s = 4;
          Math.abs(n) > 1e-15;

        )
          (r -= n *= a / (s * (s + 1))), (s += 2);
        return r;
      }
      function a() {
        var t,
          a,
          n,
          r,
          s = f.ephemeris,
          o = s.e,
          i = s.M,
          l = 1e-8,
          c = 0,
          p = 1.9,
          d = !1,
          u = 0;
        if (!i) return 0;
        if (
          o < 1 &&
          ((i < -Math.PI || i > Math.PI) && ((c = i - (r = ht(i))), (i = r)),
          o < 0.9)
        ) {
          t = Math.atan2(Math.sin(i), Math.cos(i) - o);
          do {
            t -= a = (t - o * Math.sin(t) - i) / (1 - o * Math.cos(t));
          } while (Math.abs(a) > l);
          return t;
        }
        if (
          (i < 0 && ((i = -i), (d = !0)),
          (t = i),
          (l *= Math.abs(1 - o)) < 1e-15 && (l = 1e-15),
          ((o > 0.8 && i < Math.PI / 3) || o > 1) &&
            ((n = i / Math.abs(1 - o)) * n > 6 * Math.abs(1 - o) &&
              (n = i < Math.PI ? Math.pow(6 * i, 1 / 3) : ft(i / o)),
            (t = n)),
          o > 1 && i > 4 && (t = Math.log(i)),
          o < 1)
        )
          for (; Math.abs(p) > l; )
            t += p =
              -(a = u++ > 8 ? e(t, o) - i : t - o * Math.sin(t) - i) /
              (1 - o * Math.cos(t));
        else
          for (; Math.abs(p) > l; )
            t += p =
              -(a = u++ > 7 ? -e(t, o) - i : o * dt(t) - t - i) /
              (o * ut(t) - 1);
        return d ? c - t : c + t;
      }
      function n() {
        var t,
          e,
          n,
          r,
          s,
          o = f.ephemeris;
        1 === o.e
          ? ((s = o.jd0 - o.T),
            (r = o.w0 * s * 0.5),
            (e = Math.pow(r + Math.sqrt(r * r + 1), 1 / 3)),
            (o.v = 2 * Math.atan(e - 1 / e)))
          : ((o.E = a()),
            o.e > 1
              ? ((t = o.e - ut(o.E)), (e = dt(o.E)))
              : ((t = Math.cos(o.E) - o.e), (e = Math.sin(o.E))),
            (e *= Math.sqrt(Math.abs(1 - o.e * o.e))),
            (o.v = Math.atan2(e, t))),
          (n = o.q * (1 + o.e)),
          (o.r = n / (1 + o.e * Math.cos(o.v)));
      }
      function r(t) {
        var e = f.ephemeris,
          a = t.ephemeris;
        (bt =
          (23.439292 -
            0.0130042 * e.cy -
            1.667e-7 * e.cy * e.cy +
            5.028e-7 * e.cy * e.cy * e.cy) *
          tt),
          (wt = Math.sin(bt)),
          (kt = Math.cos(bt));
        var n = "lun" === i ? { x: 0, y: 0, z: 0 } : { x: a.x, y: a.y, z: a.z };
        (e.xeq = e.x - n.x),
          (e.yeq = (e.y - n.y) * kt - (e.z - n.z) * wt),
          (e.zeq = (e.y - n.y) * wt + (e.z - n.z) * kt),
          (e.ra = mt(Math.atan2(e.yeq, e.xeq))),
          (e.dec = Math.atan2(e.zeq, Math.sqrt(e.xeq * e.xeq + e.yeq * e.yeq))),
          "lun" === i &&
            (e = (function (t, e) {
              if ((s(), void 0 !== zt)) return zt.corr(t, e);
            })(e, a)),
          (e.pos = [e.ra / tt, e.dec / tt]),
          (e.rt = Math.sqrt(e.xeq * e.xeq + e.yeq * e.yeq + e.zeq * e.zeq)),
          "sol" !== i &&
            (e.mag = (function () {
              var t = f.ephemeris,
                e = t.r,
                a = t.rt,
                n = Math.acos((e * e + a * a - 1) / (2 * e * a)),
                r =
                  0.666 *
                  ((1 - n / Math.PI) * Math.cos(n) +
                    (1 / Math.PI) * Math.sin(n));
              return (
                1 * f.H +
                5 * Math.log(e * a) * Math.LOG10E -
                2.5 * Math.log(r) * Math.LOG10E
              );
            })());
      }
      function s() {
        var t = f.ephemeris,
          e = Math.atan2(t.y, t.x),
          a = Math.atan2(t.z, Math.sqrt(t.x * t.x + t.y * t.y));
        return (t.l = mt(e)), (t.b = a), f;
      }
      function o(t) {
        var e = t.getUTCFullYear(),
          a = t.getUTCMonth() + 1,
          n = t.getUTCDate(),
          r =
            (t.getUTCHours() -
              12 +
              t.getUTCMinutes() / 60 +
              t.getUTCSeconds() / 3600) /
            24;
        if (e < -4799) return -1;
        var s = Math.floor((14 - a) / 12),
          o = e + 4800 - s,
          i = a + 12 * s - 3;
        return (
          n +
          Math.floor((153 * i + 2) / 5) +
          365 * o +
          Math.floor(o / 4) -
          Math.floor(o / 100) +
          Math.floor(o / 400) -
          32045 +
          r
        );
      }
      var i,
        l,
        c,
        p = vt.sol,
        d = "sol",
        u = {},
        f = {},
        h = function (t) {
          var e,
            a = (f.ephemeris = {});
          t && (e = t instanceof Date ? new Date(t.valueOf()) : w(t)),
            e || (e = new Date()),
            (a.jd = o(e)),
            (e = w(u.ep)) || (e = w("2000-01-01")),
            (a.jd0 = o(e)),
            (a.d = a.jd - a.jd0),
            (a.cy = a.d / 36525);
        },
        m = function () {
          var t,
            e = f.ephemeris;
          if ("lun" === i) {
            if (
              !(e = (function (t) {
                if (void 0 !== zt) return zt.elements(t);
              })(e))
            )
              return;
          } else {
            for (var a = 0; a < xt.length; a++)
              g(u, (t = xt[a])) &&
                (g(u, "d" + t)
                  ? (e[t] = u[t] + u["d" + t] * e.cy)
                  : g(u, t) && (e[t] = u[t]));
            g(e, "M") && !g(e, "dM") && g(e, "n") && (e.M += e.n * e.d);
          }
          (function () {
            var t = f.ephemeris;
            t.hasOwnProperty("w") || (t.w = t.W - t.N),
              t.hasOwnProperty("M") || (t.M = t.L - t.W),
              t.e < 1 && (t.M = ht(t.M)),
              (t.P = (Z * Math.sqrt(Math.pow(t.a, 3) / p)) / 365.25),
              (t.T = t.jd0 - t.M / X / t.P),
              1 !== t.e
                ? ((t.q = t.a * (1 - t.e)),
                  (t.t0 = t.a * Math.sqrt(Math.abs(t.a) / p)))
                : ((t.w0 = 3 / Math.sqrt(2) / (t.q * Math.sqrt(t.q / p))),
                  (t.a = 0),
                  (t.t0 = 0)),
              (t.am = Math.sqrt(p * t.q * (1 + t.e)));
          })(),
            n(),
            (function () {
              var t = f.ephemeris,
                e = t.v + t.w;
              (t.x =
                t.r *
                (Math.cos(t.N) * Math.cos(e) -
                  Math.sin(t.N) * Math.sin(e) * Math.cos(t.i))),
                (t.y =
                  t.r *
                  (Math.sin(t.N) * Math.cos(e) +
                    Math.cos(t.N) * Math.sin(e) * Math.cos(t.i))),
                (t.z = t.r * (Math.sin(e) * Math.sin(t.i)));
            })();
        };
      return (
        (t.cartesian = function () {
          return f;
        }),
        (t.spherical = function () {
          return s(), f;
        }),
        (t.equatorial = function (t) {
          return r(t), f;
        }),
        (t.transpose = function () {
          return (
            (function () {
              var t = f.ephemeris;
              if (!t.ref || "ecl" === t.ref)
                return (t.tx = t.x), (t.ty = t.y), void (t.tz = t.z);
              var e = (t.lecl, Math.PI, t.becl, yt([t.tl, t.tb, t.r]));
              (t.tx = e.x), (t.ty = e.y), (t.tz = e.z);
            })(),
            f
          );
        }),
        (t.elements = function (e) {
          var a;
          if (!arguments.length || void 0 === arguments[0]) return t;
          for (var n = 0; n < xt.length; n++)
            g(e, (a = xt[n])) &&
              ((u[a] = e[a]),
              "a" === a || "e" === a
                ? (u[a] *= 1)
                : "ref" !== a && "ep" !== a && (u[a] *= tt),
              g(e, "d" + a) &&
                ((u[(a = "d" + a)] = e[a]),
                (u[a] *= "da" === a || "de" === a ? 1 : tt)));
          return t;
        }),
        (t.params = function (e) {
          if (!arguments.length) return t;
          for (var a in e) g(e, a) && "elements" !== e[a] && (f[a] = e[a]);
          return t;
        }),
        (t.parentBody = function (e) {
          return arguments.length ? ((p = vt[(d = e)]), t) : d;
        }),
        (t.id = function (e) {
          return arguments.length ? ((i = e), (c = Mt[e]), t) : i;
        }),
        (t.Name = function (e) {
          return arguments.length ? ((l = e), t) : l;
        }),
        (t.symbol = function (e) {
          return arguments.length ? ((c = Mt[e]), t) : c;
        }),
        t
      );
    },
    zt = {
      elements: function (t) {
        var e = (t.jd - 2451545) / 36525,
          a = e * e,
          n = e * a,
          r = 1e-4 * a,
          s = 1e-6 * n,
          o = 1e-8 * (e * n),
          i =
            383397.6 +
            (3400.4 *
              Math.cos(
                tt *
                  (235.7004 +
                    890534.223 * e -
                    32.601 * r +
                    3.664 * s -
                    1.769 * o)
              ) -
              635.6 *
                Math.cos(
                  tt *
                    (100.737 +
                      413335.3554 * e -
                      122.571 * r -
                      10.684 * s +
                      5.028 * o)
                ) -
              235.6 *
                Math.cos(
                  tt *
                    (134.9634 +
                      477198.8676 * e +
                      89.97 * r +
                      14.348 * s -
                      6.797 * o)
                ) +
              218.1 *
                Math.cos(
                  tt *
                    (238.1713 +
                      854535.1727 * e -
                      31.065 * r +
                      3.623 * s -
                      1.769 * o)
                ) +
              181 *
                Math.cos(
                  tt *
                    (10.6638 +
                      1367733.0907 * e +
                      57.37 * r +
                      18.011 * s -
                      8.566 * o)
                ) -
              39.9 *
                Math.cos(
                  tt *
                    (103.2079 +
                      377336.3051 * e -
                      121.035 * r -
                      10.724 * s +
                      5.028 * o)
                ) -
              38.4 *
                Math.cos(
                  tt *
                    (233.2295 +
                      926533.2733 * e -
                      34.136 * r +
                      3.705 * s -
                      1.769 * o)
                ) +
              33.8 *
                Math.cos(
                  tt *
                    (336.4374 +
                      1303869.5784 * e -
                      155.171 * r -
                      7.02 * s +
                      3.259 * o)
                ) +
              28.8 *
                Math.cos(
                  tt *
                    (111.4008 +
                      1781068.4461 * e -
                      65.201 * r +
                      7.328 * s -
                      3.538 * o)
                ) +
              12.6 *
                Math.cos(
                  tt *
                    (13.1347 +
                      1331734.0404 * e +
                      58.906 * r +
                      17.971 * s -
                      8.566 * o)
                ) +
              11.4 *
                Math.cos(
                  tt *
                    (186.5442 +
                      966404.0351 * e -
                      68.058 * r -
                      0.567 * s +
                      0.232 * o)
                ) -
              11.1 *
                Math.cos(
                  tt *
                    (222.5657 -
                      441199.8173 * e -
                      91.506 * r -
                      14.307 * s +
                      6.797 * o)
                ) -
              10.2 *
                Math.cos(
                  tt *
                    (269.9268 +
                      954397.7353 * e +
                      179.941 * r +
                      28.695 * s -
                      13.594 * o)
                ) +
              9.7 *
                Math.cos(
                  tt *
                    (145.6272 +
                      1844931.9583 * e +
                      147.34 * r +
                      32.359 * s -
                      15.363 * o)
                ) +
              9.6 *
                Math.cos(
                  tt *
                    (240.6422 +
                      818536.1225 * e -
                      29.529 * r +
                      3.582 * s -
                      1.769 * o)
                ) +
              8 *
                Math.cos(
                  tt *
                    (297.8502 +
                      445267.1115 * e -
                      16.3 * r +
                      1.832 * s -
                      0.884 * o)
                ) -
              6.2 *
                Math.cos(
                  tt *
                    (132.4925 +
                      513197.9179 * e +
                      88.434 * r +
                      14.388 * s -
                      6.797 * o)
                ) +
              6 *
                Math.cos(
                  tt *
                    (173.5506 +
                      1335801.3346 * e -
                      48.901 * r +
                      5.496 * s -
                      2.653 * o)
                ) +
              3.7 *
                Math.cos(
                  tt *
                    (113.8717 +
                      1745069.3958 * e -
                      63.665 * r +
                      7.287 * s -
                      3.538 * o)
                ) +
              3.6 *
                Math.cos(
                  tt *
                    (338.9083 +
                      1267870.5281 * e -
                      153.636 * r -
                      7.061 * s +
                      3.259 * o)
                ) +
              3.2 *
                Math.cos(
                  tt *
                    (246.3642 +
                      2258267.3137 * e +
                      24.769 * r +
                      21.675 * s -
                      10.335 * o)
                ) -
              3 *
                Math.cos(
                  tt *
                    (8.1929 +
                      1403732.141 * e +
                      55.834 * r +
                      18.052 * s -
                      8.566 * o)
                ) +
              2.3 *
                Math.cos(
                  tt *
                    (98.2661 +
                      449334.4057 * e -
                      124.107 * r -
                      10.643 * s +
                      5.028 * o)
                ) -
              2.2 *
                Math.cos(
                  tt *
                    (357.5291 + 35999.0503 * e - 1.536 * r + 0.041 * s + 0 * o)
                ) -
              2 *
                Math.cos(
                  tt *
                    (38.5872 +
                      858602.4669 * e -
                      138.871 * r -
                      8.852 * s +
                      4.144 * o)
                ) -
              1.8 *
                Math.cos(
                  tt *
                    (105.6788 +
                      341337.2548 * e -
                      119.499 * r -
                      10.765 * s +
                      5.028 * o)
                ) -
              1.7 *
                Math.cos(
                  tt *
                    (201.474 +
                      826670.7108 * e -
                      245.142 * r -
                      21.367 * s +
                      10.057 * o)
                ) +
              1.6 *
                Math.cos(
                  tt *
                    (184.1196 +
                      401329.0556 * e +
                      125.428 * r +
                      18.579 * s -
                      8.798 * o)
                ) -
              1.4 *
                Math.cos(
                  tt *
                    (308.4192 -
                      489205.1674 * e +
                      158.029 * r +
                      14.915 * s -
                      7.029 * o)
                ) +
              1.3 *
                Math.cos(
                  tt *
                    (325.7736 -
                      63863.5122 * e -
                      212.541 * r -
                      25.031 * s +
                      11.826 * o)
                )) +
            (-0.55 * Math.cos(tt * (238.2 + 854535.2 * e)) +
              0.1 * Math.cos(tt * (103.2 + 377336.3 * e)) +
              0.1 * Math.cos(tt * (233.2 + 926533.3 * e))) *
              e,
          l =
            0.055544 +
            (0.014217 *
              Math.cos(
                tt *
                  (100.737 +
                    413335.3554 * e -
                    122.571 * r -
                    10.684 * s +
                    5.028 * o)
              ) +
              0.008551 *
                Math.cos(
                  tt *
                    (325.7736 -
                      63863.5122 * e -
                      212.541 * r -
                      25.031 * s +
                      11.826 * o)
                ) -
              0.001383 *
                Math.cos(
                  tt *
                    (134.9634 +
                      477198.8676 * e +
                      89.97 * r +
                      14.348 * s -
                      6.797 * o)
                ) +
              0.001353 *
                Math.cos(
                  tt *
                    (10.6638 +
                      1367733.0907 * e +
                      57.37 * r +
                      18.011 * s -
                      8.566 * o)
                ) -
              0.001146 *
                Math.cos(
                  tt *
                    (66.5106 +
                      349471.8432 * e -
                      335.112 * r -
                      35.715 * s +
                      16.854 * o)
                ) -
              915e-6 *
                Math.cos(
                  tt *
                    (201.474 +
                      826670.7108 * e -
                      245.142 * r -
                      21.367 * s +
                      10.057 * o)
                ) +
              869e-6 *
                Math.cos(
                  tt *
                    (103.2079 +
                      377336.3051 * e -
                      121.035 * r -
                      10.724 * s +
                      5.028 * o)
                ) -
              628e-6 *
                Math.cos(
                  tt *
                    (235.7004 +
                      890534.223 * e -
                      32.601 * r +
                      3.664 * s -
                      1.769 * o)
                ) -
              393e-6 *
                Math.cos(
                  tt *
                    (291.5472 -
                      127727.0245 * e -
                      425.082 * r -
                      50.062 * s +
                      23.651 * o)
                ) +
              284e-6 *
                Math.cos(
                  tt *
                    (328.2445 -
                      99862.5625 * e -
                      211.005 * r -
                      25.072 * s +
                      11.826 * o)
                ) -
              278e-6 *
                Math.cos(
                  tt *
                    (162.8868 -
                      31931.7561 * e -
                      106.271 * r -
                      12.516 * s +
                      5.913 * o)
                ) -
              24e-5 *
                Math.cos(
                  tt *
                    (269.9268 +
                      954397.7353 * e +
                      179.941 * r +
                      28.695 * s -
                      13.594 * o)
                ) +
              23e-5 *
                Math.cos(
                  tt *
                    (111.4008 +
                      1781068.4461 * e -
                      65.201 * r +
                      7.328 * s -
                      3.538 * o)
                ) +
              229e-6 *
                Math.cos(
                  tt *
                    (167.2476 +
                      762807.1986 * e -
                      457.683 * r -
                      46.398 * s +
                      21.882 * o)
                ) -
              202e-6 *
                Math.cos(
                  tt *
                    (83.3826 -
                      12006.2998 * e +
                      247.999 * r +
                      29.262 * s -
                      13.826 * o)
                ) +
              19e-5 *
                Math.cos(
                  tt *
                    (190.8102 -
                      541062.3799 * e -
                      302.511 * r -
                      39.379 * s +
                      18.623 * o)
                ) +
              177e-6 *
                Math.cos(
                  tt *
                    (357.5291 + 35999.0503 * e - 1.536 * r + 0.041 * s + 0 * o)
                ) +
              153e-6 *
                Math.cos(
                  tt *
                    (32.2842 +
                      285608.3309 * e -
                      547.653 * r -
                      60.746 * s +
                      28.679 * o)
                ) -
              137e-6 *
                Math.cos(
                  tt *
                    (44.8902 +
                      1431596.6029 * e +
                      269.911 * r +
                      43.043 * s -
                      20.392 * o)
                ) +
              122e-6 *
                Math.cos(
                  tt *
                    (145.6272 +
                      1844931.9583 * e +
                      147.34 * r +
                      32.359 * s -
                      15.363 * o)
                ) +
              116e-6 *
                Math.cos(
                  tt *
                    (302.211 +
                      1240006.0662 * e -
                      367.713 * r -
                      32.051 * s +
                      15.085 * o)
                ) -
              111e-6 *
                Math.cos(
                  tt *
                    (203.9449 +
                      790671.6605 * e -
                      243.606 * r -
                      21.408 * s +
                      10.057 * o)
                ) -
              108e-6 *
                Math.cos(
                  tt *
                    (68.9815 +
                      313472.7929 * e -
                      333.576 * r -
                      35.756 * s +
                      16.854 * o)
                ) +
              96e-6 *
                Math.cos(
                  tt *
                    (336.4374 +
                      1303869.5784 * e -
                      155.171 * r -
                      7.02 * s +
                      3.259 * o)
                ) -
              9e-5 *
                Math.cos(
                  tt *
                    (98.2661 +
                      449334.4057 * e -
                      124.107 * r -
                      10.643 * s +
                      5.028 * o)
                ) +
              9e-5 *
                Math.cos(
                  tt *
                    (13.1347 +
                      1331734.0404 * e +
                      58.906 * r +
                      17.971 * s -
                      8.566 * o)
                ) +
              56e-6 *
                Math.cos(
                  tt *
                    (55.8468 -
                      1018261.2475 * e -
                      392.482 * r -
                      53.726 * s +
                      25.42 * o)
                ) -
              56e-6 *
                Math.cos(
                  tt *
                    (238.1713 +
                      854535.1727 * e -
                      31.065 * r +
                      3.623 * s -
                      1.769 * o)
                ) +
              52e-6 *
                Math.cos(
                  tt *
                    (308.4192 -
                      489205.1674 * e +
                      158.029 * r +
                      14.915 * s -
                      7.029 * o)
                ) -
              5e-5 *
                Math.cos(
                  tt *
                    (133.0212 +
                      698943.6863 * e -
                      670.224 * r -
                      71.429 * s +
                      33.708 * o)
                ) -
              49e-6 *
                Math.cos(
                  tt *
                    (267.9846 +
                      1176142.554 * e -
                      580.254 * r -
                      57.082 * s +
                      26.911 * o)
                ) -
              49e-6 *
                Math.cos(
                  tt *
                    (184.1196 +
                      401329.0556 * e +
                      125.428 * r +
                      18.579 * s -
                      8.798 * o)
                ) -
              45e-6 *
                Math.cos(
                  tt *
                    (49.1562 -
                      75869.812 * e +
                      35.458 * r +
                      4.231 * s -
                      2.001 * o)
                ) +
              44e-6 *
                Math.cos(
                  tt *
                    (257.3208 -
                      191590.5367 * e -
                      637.623 * r -
                      75.093 * s +
                      35.477 * o)
                ) +
              42e-6 *
                Math.cos(
                  tt *
                    (105.6788 +
                      341337.2548 * e -
                      119.499 * r -
                      10.765 * s +
                      5.028 * o)
                ) +
              42e-6 *
                Math.cos(
                  tt *
                    (160.4159 +
                      4067.2942 * e -
                      107.806 * r -
                      12.475 * s +
                      5.913 * o)
                ) +
              4e-5 *
                Math.cos(
                  tt *
                    (246.3642 +
                      2258267.3137 * e +
                      24.769 * r +
                      21.675 * s -
                      10.335 * o)
                ) -
              4e-5 *
                Math.cos(
                  tt *
                    (156.5838 -
                      604925.8921 * e -
                      515.053 * r -
                      64.41 * s +
                      30.448 * o)
                ) +
              36e-6 *
                Math.cos(
                  tt *
                    (169.7185 +
                      726808.1483 * e -
                      456.147 * r -
                      46.439 * s +
                      21.882 * o)
                ) +
              29e-6 *
                Math.cos(
                  tt *
                    (113.8717 +
                      1745069.3958 * e -
                      63.665 * r +
                      7.287 * s -
                      3.538 * o)
                ) -
              29e-6 *
                Math.cos(
                  tt *
                    (297.8502 +
                      445267.1115 * e -
                      16.3 * r +
                      1.832 * s -
                      0.884 * o)
                ) -
              28e-6 *
                Math.cos(
                  tt *
                    (294.0181 -
                      163726.0747 * e -
                      423.546 * r -
                      50.103 * s +
                      23.651 * o)
                ) +
              27e-6 *
                Math.cos(
                  tt *
                    (263.6238 +
                      381403.5993 * e -
                      228.841 * r -
                      23.199 * s +
                      10.941 * o)
                ) -
              26e-6 *
                Math.cos(
                  tt *
                    (358.0578 +
                      221744.8187 * e -
                      760.194 * r -
                      85.777 * s +
                      40.505 * o)
                ) -
              26e-6 *
                Math.cos(
                  tt *
                    (8.1929 +
                      1403732.141 * e +
                      55.834 * r +
                      18.052 * s -
                      8.566 * o)
                )) +
            0.001 * e * (-0.0022 * Math.cos(tt * (103.2 + 377336.3 * e))),
          c =
            0.0449858 +
            (0.0011776 *
              Math.cos(
                tt *
                  (49.1562 - 75869.812 * e + 35.458 * r + 4.231 * s - 2.001 * o)
              ) -
              971e-7 *
                Math.cos(
                  tt *
                    (235.7004 +
                      890534.223 * e -
                      32.601 * r +
                      3.664 * s -
                      1.769 * o)
                ) +
              908e-7 *
                Math.cos(
                  tt *
                    (186.5442 +
                      966404.0351 * e -
                      68.058 * r -
                      0.567 * s +
                      0.232 * o)
                ) +
              623e-7 *
                Math.cos(
                  tt *
                    (83.3826 -
                      12006.2998 * e +
                      247.999 * r +
                      29.262 * s -
                      13.826 * o)
                ) +
              483e-7 *
                Math.cos(
                  tt *
                    (51.6271 -
                      111868.8623 * e +
                      36.994 * r +
                      4.19 * s -
                      2.001 * o)
                ) +
              348e-7 *
                Math.cos(
                  tt *
                    (100.737 +
                      413335.3554 * e -
                      122.571 * r -
                      10.684 * s +
                      5.028 * o)
                ) -
              316e-7 *
                Math.cos(
                  tt *
                    (308.4192 -
                      489205.1674 * e +
                      158.029 * r +
                      14.915 * s -
                      7.029 * o)
                ) -
              253e-7 *
                Math.cos(
                  tt *
                    (46.6853 -
                      39870.7617 * e +
                      33.922 * r +
                      4.272 * s -
                      2.001 * o)
                ) -
              141e-7 *
                Math.cos(
                  tt *
                    (274.1928 -
                      553068.6797 * e -
                      54.513 * r -
                      10.116 * s +
                      4.797 * o)
                ) +
              127e-7 *
                Math.cos(
                  tt *
                    (325.7736 -
                      63863.5122 * e -
                      212.541 * r -
                      25.031 * s +
                      11.826 * o)
                ) +
              117e-7 *
                Math.cos(
                  tt *
                    (184.1196 +
                      401329.0556 * e +
                      125.428 * r +
                      18.579 * s -
                      8.798 * o)
                ) -
              78e-7 *
                Math.cos(
                  tt *
                    (98.3124 -
                      151739.624 * e +
                      70.916 * r +
                      8.462 * s -
                      4.001 * o)
                ) -
              63e-7 *
                Math.cos(
                  tt *
                    (238.1713 +
                      854535.1727 * e -
                      31.065 * r +
                      3.623 * s -
                      1.769 * o)
                ) +
              63e-7 *
                Math.cos(
                  tt *
                    (134.9634 +
                      477198.8676 * e +
                      89.97 * r +
                      14.348 * s -
                      6.797 * o)
                ) +
              36e-7 *
                Math.cos(
                  tt *
                    (321.5076 +
                      1443602.9027 * e +
                      21.912 * r +
                      13.78 * s -
                      6.566 * o)
                ) -
              35e-7 *
                Math.cos(
                  tt *
                    (10.6638 +
                      1367733.0907 * e +
                      57.37 * r +
                      18.011 * s -
                      8.566 * o)
                ) +
              24e-7 *
                Math.cos(
                  tt *
                    (149.8932 +
                      337465.5434 * e -
                      87.113 * r -
                      6.453 * s +
                      3.028 * o)
                ) +
              24e-7 *
                Math.cos(
                  tt *
                    (170.9849 -
                      930404.9848 * e +
                      66.523 * r +
                      0.608 * s -
                      0.232 * o)
                )) +
            0.001 *
              (-0.0203 * Math.cos(tt * (125 - 1934.1 * e)) +
                0.0034 * Math.cos(tt * (220.2 - 1935.5 * e))),
          p =
            83.353 +
            4069.0137 * e -
            103.238 * r -
            12.492 * s +
            5.263 * o +
            (-15.448 *
              Math.sin(
                tt *
                  (100.737 +
                    413335.3554 * e -
                    122.571 * r -
                    10.684 * s +
                    5.028 * o)
              ) -
              9.642 *
                Math.sin(
                  tt *
                    (325.7736 -
                      63863.5122 * e -
                      212.541 * r -
                      25.031 * s +
                      11.826 * o)
                ) -
              2.721 *
                Math.sin(
                  tt *
                    (134.9634 +
                      477198.8676 * e +
                      89.97 * r +
                      14.348 * s -
                      6.797 * o)
                ) +
              2.607 *
                Math.sin(
                  tt *
                    (66.5106 +
                      349471.8432 * e -
                      335.112 * r -
                      35.715 * s +
                      16.854 * o)
                ) +
              2.085 *
                Math.sin(
                  tt *
                    (201.474 +
                      826670.7108 * e -
                      245.142 * r -
                      21.367 * s +
                      10.057 * o)
                ) +
              1.477 *
                Math.sin(
                  tt *
                    (10.6638 +
                      1367733.0907 * e +
                      57.37 * r +
                      18.011 * s -
                      8.566 * o)
                ) +
              0.968 *
                Math.sin(
                  tt *
                    (291.5472 -
                      127727.0245 * e -
                      425.082 * r -
                      50.062 * s +
                      23.651 * o)
                ) -
              0.949 *
                Math.sin(
                  tt *
                    (103.2079 +
                      377336.3051 * e -
                      121.035 * r -
                      10.724 * s +
                      5.028 * o)
                ) -
              0.703 *
                Math.sin(
                  tt *
                    (167.2476 +
                      762807.1986 * e -
                      457.683 * r -
                      46.398 * s +
                      21.882 * o)
                ) -
              0.66 *
                Math.sin(
                  tt *
                    (235.7004 +
                      890534.223 * e -
                      32.601 * r +
                      3.664 * s -
                      1.769 * o)
                ) -
              0.577 *
                Math.sin(
                  tt *
                    (190.8102 -
                      541062.3799 * e -
                      302.511 * r -
                      39.379 * s +
                      18.623 * o)
                ) -
              0.524 *
                Math.sin(
                  tt *
                    (269.9268 +
                      954397.7353 * e +
                      179.941 * r +
                      28.695 * s -
                      13.594 * o)
                ) -
              0.482 *
                Math.sin(
                  tt *
                    (32.2842 +
                      285608.3309 * e -
                      547.653 * r -
                      60.746 * s +
                      28.679 * o)
                ) +
              0.452 *
                Math.sin(
                  tt *
                    (357.5291 + 35999.0503 * e - 1.536 * r + 0.041 * s + 0 * o)
                ) -
              0.381 *
                Math.sin(
                  tt *
                    (302.211 +
                      1240006.0662 * e -
                      367.713 * r -
                      32.051 * s +
                      15.085 * o)
                ) -
              0.342 *
                Math.sin(
                  tt *
                    (328.2445 -
                      99862.5625 * e -
                      211.005 * r -
                      25.072 * s +
                      11.826 * o)
                ) -
              0.312 *
                Math.sin(
                  tt *
                    (44.8902 +
                      1431596.6029 * e +
                      269.911 * r +
                      43.043 * s -
                      20.392 * o)
                ) +
              0.282 *
                Math.sin(
                  tt *
                    (162.8868 -
                      31931.7561 * e -
                      106.271 * r -
                      12.516 * s +
                      5.913 * o)
                ) +
              0.255 *
                Math.sin(
                  tt *
                    (203.9449 +
                      790671.6605 * e -
                      243.606 * r -
                      21.408 * s +
                      10.057 * o)
                ) +
              0.252 *
                Math.sin(
                  tt *
                    (68.9815 +
                      313472.7929 * e -
                      333.576 * r -
                      35.756 * s +
                      16.854 * o)
                ) -
              0.211 *
                Math.sin(
                  tt *
                    (83.3826 -
                      12006.2998 * e +
                      247.999 * r +
                      29.262 * s -
                      13.826 * o)
                ) +
              0.193 *
                Math.sin(
                  tt *
                    (267.9846 +
                      1176142.554 * e -
                      580.254 * r -
                      57.082 * s +
                      26.911 * o)
                ) +
              0.191 *
                Math.sin(
                  tt *
                    (133.0212 +
                      698943.6863 * e -
                      670.224 * r -
                      71.429 * s +
                      33.708 * o)
                ) -
              0.184 *
                Math.sin(
                  tt *
                    (55.8468 -
                      1018261.2475 * e -
                      392.482 * r -
                      53.726 * s +
                      25.42 * o)
                ) +
              0.182 *
                Math.sin(
                  tt *
                    (145.6272 +
                      1844931.9583 * e +
                      147.34 * r +
                      32.359 * s -
                      15.363 * o)
                ) -
              0.158 *
                Math.sin(
                  tt *
                    (257.3208 -
                      191590.5367 * e -
                      637.623 * r -
                      75.093 * s +
                      35.477 * o)
                ) +
              0.148 *
                Math.sin(
                  tt *
                    (156.5838 -
                      604925.8921 * e -
                      515.053 * r -
                      64.41 * s +
                      30.448 * o)
                ) -
              0.111 *
                Math.sin(
                  tt *
                    (169.7185 +
                      726808.1483 * e -
                      456.147 * r -
                      46.439 * s +
                      21.882 * o)
                ) +
              0.101 *
                Math.sin(
                  tt *
                    (13.1347 +
                      1331734.0404 * e +
                      58.906 * r +
                      17.971 * s -
                      8.566 * o)
                ) +
              0.1 *
                Math.sin(
                  tt *
                    (358.0578 +
                      221744.8187 * e -
                      760.194 * r -
                      85.777 * s +
                      40.505 * o)
                ) +
              0.087 *
                Math.sin(
                  tt *
                    (98.2661 +
                      449334.4057 * e -
                      124.107 * r -
                      10.643 * s +
                      5.028 * o)
                ) +
              0.08 *
                Math.sin(
                  tt *
                    (42.948 +
                      1653341.4216 * e -
                      490.283 * r -
                      42.734 * s +
                      20.113 * o)
                ) +
              0.08 *
                Math.sin(
                  tt *
                    (222.5657 -
                      441199.8173 * e -
                      91.506 * r -
                      14.307 * s +
                      6.797 * o)
                ) +
              0.077 *
                Math.sin(
                  tt *
                    (294.0181 -
                      163726.0747 * e -
                      423.546 * r -
                      50.103 * s +
                      23.651 * o)
                ) -
              0.073 *
                Math.sin(
                  tt *
                    (280.8834 -
                      1495460.1151 * e -
                      482.452 * r -
                      68.074 * s +
                      32.217 * o)
                ) -
              0.071 *
                Math.sin(
                  tt *
                    (304.6819 +
                      1204007.0159 * e -
                      366.177 * r -
                      32.092 * s +
                      15.085 * o)
                ) -
              0.069 *
                Math.sin(
                  tt *
                    (233.7582 +
                      1112279.0417 * e -
                      792.795 * r -
                      82.113 * s +
                      38.736 * o)
                ) -
              0.067 *
                Math.sin(
                  tt *
                    (34.7551 +
                      249609.2807 * e -
                      546.117 * r -
                      60.787 * s +
                      28.679 * o)
                ) -
              0.067 *
                Math.sin(
                  tt *
                    (263.6238 +
                      381403.5993 * e -
                      228.841 * r -
                      23.199 * s +
                      10.941 * o)
                ) +
              0.055 *
                Math.sin(
                  tt *
                    (21.6203 -
                      1082124.7597 * e -
                      605.023 * r -
                      78.757 * s +
                      37.246 * o)
                ) +
              0.055 *
                Math.sin(
                  tt *
                    (308.4192 -
                      489205.1674 * e +
                      158.029 * r +
                      14.915 * s -
                      7.029 * o)
                ) -
              0.054 *
                Math.sin(
                  tt *
                    (8.7216 +
                      1589477.9094 * e -
                      702.824 * r -
                      67.766 * s +
                      31.939 * o)
                ) -
              0.052 *
                Math.sin(
                  tt *
                    (179.8536 +
                      1908795.4705 * e +
                      359.881 * r +
                      57.39 * s -
                      27.189 * o)
                ) -
              0.05 *
                Math.sin(
                  tt *
                    (98.7948 +
                      635080.1741 * e -
                      882.765 * r -
                      96.461 * s +
                      45.533 * o)
                ) -
              0.049 *
                Math.sin(
                  tt *
                    (128.6604 -
                      95795.2683 * e -
                      318.812 * r -
                      37.547 * s +
                      17.738 * o)
                ) -
              0.047 *
                Math.sin(
                  tt *
                    (17.3544 +
                      425341.6552 * e -
                      370.57 * r -
                      39.946 * s +
                      18.854 * o)
                ) -
              0.044 *
                Math.sin(
                  tt *
                    (160.4159 +
                      4067.2942 * e -
                      107.806 * r -
                      12.475 * s +
                      5.913 * o)
                ) -
              0.043 *
                Math.sin(
                  tt *
                    (238.1713 +
                      854535.1727 * e -
                      31.065 * r +
                      3.623 * s -
                      1.769 * o)
                ) +
              0.042 *
                Math.sin(
                  tt *
                    (270.4555 +
                      1140143.5037 * e -
                      578.718 * r -
                      57.123 * s +
                      26.911 * o)
                ) -
              0.042 *
                Math.sin(
                  tt *
                    (132.4925 +
                      513197.9179 * e +
                      88.434 * r +
                      14.388 * s -
                      6.797 * o)
                ) -
              0.041 *
                Math.sin(
                  tt *
                    (122.3573 -
                      668789.4043 * e -
                      727.594 * r -
                      89.441 * s +
                      42.274 * o)
                ) -
              0.04 *
                Math.sin(
                  tt *
                    (105.6788 +
                      341337.2548 * e -
                      119.499 * r -
                      10.765 * s +
                      5.028 * o)
                ) +
              0.038 *
                Math.sin(
                  tt *
                    (135.4921 +
                      662944.6361 * e -
                      668.688 * r -
                      71.47 * s +
                      33.708 * o)
                ) -
              0.037 *
                Math.sin(
                  tt *
                    (242.391 -
                      51857.2124 * e -
                      460.54 * r -
                      54.293 * s +
                      25.652 * o)
                ) +
              0.036 *
                Math.sin(
                  tt *
                    (336.4374 +
                      1303869.5784 * e -
                      155.171 * r -
                      7.02 * s +
                      3.259 * o)
                ) +
              0.035 *
                Math.sin(
                  tt *
                    (223.0943 -
                      255454.0489 * e -
                      850.164 * r -
                      100.124 * s +
                      47.302 * o)
                ) -
              0.034 *
                Math.sin(
                  tt *
                    (193.2811 -
                      577061.4302 * e -
                      300.976 * r -
                      39.419 * s +
                      18.623 * o)
                ) +
              0.031 *
                Math.sin(
                  tt *
                    (87.6023 -
                      918398.685 * e -
                      181.476 * r -
                      28.654 * s +
                      13.594 * o)
                )) +
            0.001 * e * (2.4 * Math.sin(tt * (103.2 + 377336.3 * e))),
          d =
            125.0446 -
            1934.13618 * e +
            20.762 * r +
            2.139 * s -
            1.65 * o +
            (-1.4979 *
              Math.sin(
                tt *
                  (49.1562 - 75869.812 * e + 35.458 * r + 4.231 * s - 2.001 * o)
              ) -
              0.15 *
                Math.sin(
                  tt *
                    (357.5291 + 35999.0503 * e - 1.536 * r + 0.041 * s + 0 * o)
                ) -
              0.1226 *
                Math.sin(
                  tt *
                    (235.7004 +
                      890534.223 * e -
                      32.601 * r +
                      3.664 * s -
                      1.769 * o)
                ) +
              0.1176 *
                Math.sin(
                  tt *
                    (186.5442 +
                      966404.0351 * e -
                      68.058 * r -
                      0.567 * s +
                      0.232 * o)
                ) -
              0.0801 *
                Math.sin(
                  tt *
                    (83.3826 -
                      12006.2998 * e +
                      247.999 * r +
                      29.262 * s -
                      13.826 * o)
                ) -
              0.0616 *
                Math.sin(
                  tt *
                    (51.6271 -
                      111868.8623 * e +
                      36.994 * r +
                      4.19 * s -
                      2.001 * o)
                ) +
              0.049 *
                Math.sin(
                  tt *
                    (100.737 +
                      413335.3554 * e -
                      122.571 * r -
                      10.684 * s +
                      5.028 * o)
                ) +
              0.0409 *
                Math.sin(
                  tt *
                    (308.4192 -
                      489205.1674 * e +
                      158.029 * r +
                      14.915 * s -
                      7.029 * o)
                ) +
              0.0327 *
                Math.sin(
                  tt *
                    (134.9634 +
                      477198.8676 * e +
                      89.97 * r +
                      14.348 * s -
                      6.797 * o)
                ) +
              0.0324 *
                Math.sin(
                  tt *
                    (46.6853 -
                      39870.7617 * e +
                      33.922 * r +
                      4.272 * s -
                      2.001 * o)
                ) +
              0.0196 *
                Math.sin(
                  tt *
                    (98.3124 -
                      151739.624 * e +
                      70.916 * r +
                      8.462 * s -
                      4.001 * o)
                ) +
              0.018 *
                Math.sin(
                  tt *
                    (274.1928 -
                      553068.6797 * e -
                      54.513 * r -
                      10.116 * s +
                      4.797 * o)
                ) +
              0.015 *
                Math.sin(
                  tt *
                    (325.7736 -
                      63863.5122 * e -
                      212.541 * r -
                      25.031 * s +
                      11.826 * o)
                ) -
              0.015 *
                Math.sin(
                  tt *
                    (184.1196 +
                      401329.0556 * e +
                      125.428 * r +
                      18.579 * s -
                      8.798 * o)
                ) -
              0.0078 *
                Math.sin(
                  tt *
                    (238.1713 +
                      854535.1727 * e -
                      31.065 * r +
                      3.623 * s -
                      1.769 * o)
                ) -
              0.0045 *
                Math.sin(
                  tt *
                    (10.6638 +
                      1367733.0907 * e +
                      57.37 * r +
                      18.011 * s -
                      8.566 * o)
                ) +
              0.0044 *
                Math.sin(
                  tt *
                    (321.5076 +
                      1443602.9027 * e +
                      21.912 * r +
                      13.78 * s -
                      6.566 * o)
                ) -
              0.0042 *
                Math.sin(
                  tt *
                    (162.8868 -
                      31931.7561 * e -
                      106.271 * r -
                      12.516 * s +
                      5.913 * o)
                ) -
              0.0031 *
                Math.sin(
                  tt *
                    (170.9849 -
                      930404.9848 * e +
                      66.523 * r +
                      0.608 * s -
                      0.232 * o)
                ) +
              0.0031 *
                Math.sin(
                  tt *
                    (103.2079 +
                      377336.3051 * e -
                      121.035 * r -
                      10.724 * s +
                      5.028 * o)
                ) +
              0.0029 *
                Math.sin(
                  tt *
                    (222.612 -
                      1042273.8471 * e +
                      103.516 * r +
                      4.798 * s -
                      2.232 * o)
                ) +
              0.0028 *
                Math.sin(
                  tt *
                    (184.0733 +
                      1002403.0853 * e -
                      69.594 * r -
                      0.526 * s +
                      0.232 * o)
                )) +
            0.001 *
              (25.9 * Math.sin(tt * (125 - 1934.1 * e)) -
                4.3 * Math.sin(tt * (220.2 - 1935.5 * e)) +
                0.38 * Math.sin(tt * (357.5 + 35999.1 * e)) * e),
          u =
            218.31665 +
            481267.88134 * e -
            13.268 * r +
            1.856 * s -
            1.534 * o +
            (-0.92581 *
              Math.sin(
                tt *
                  (235.7004 +
                    890534.223 * e -
                    32.601 * r +
                    3.664 * s -
                    1.769 * o)
              ) +
              0.33262 *
                Math.sin(
                  tt *
                    (100.737 +
                      413335.3554 * e -
                      122.571 * r -
                      10.684 * s +
                      5.028 * o)
                ) -
              0.18402 *
                Math.sin(
                  tt *
                    (357.5291 + 35999.0503 * e - 1.536 * r + 0.041 * s + 0 * o)
                ) +
              0.11007 *
                Math.sin(
                  tt *
                    (134.9634 +
                      477198.8676 * e +
                      89.97 * r +
                      14.348 * s -
                      6.797 * o)
                ) -
              0.06055 *
                Math.sin(
                  tt *
                    (238.1713 +
                      854535.1727 * e -
                      31.065 * r +
                      3.623 * s -
                      1.769 * o)
                ) +
              0.04741 *
                Math.sin(
                  tt *
                    (325.7736 -
                      63863.5122 * e -
                      212.541 * r -
                      25.031 * s +
                      11.826 * o)
                ) -
              0.03086 *
                Math.sin(
                  tt *
                    (10.6638 +
                      1367733.0907 * e +
                      57.37 * r +
                      18.011 * s -
                      8.566 * o)
                ) +
              0.02184 *
                Math.sin(
                  tt *
                    (103.2079 +
                      377336.3051 * e -
                      121.035 * r -
                      10.724 * s +
                      5.028 * o)
                ) +
              0.01645 *
                Math.sin(
                  tt *
                    (49.1562 -
                      75869.812 * e +
                      35.458 * r +
                      4.231 * s -
                      2.001 * o)
                ) +
              0.01022 *
                Math.sin(
                  tt *
                    (233.2295 +
                      926533.2733 * e -
                      34.136 * r +
                      3.705 * s -
                      1.769 * o)
                ) -
              0.00756 *
                Math.sin(
                  tt *
                    (336.4374 +
                      1303869.5784 * e -
                      155.171 * r -
                      7.02 * s +
                      3.259 * o)
                ) -
              0.0053 *
                Math.sin(
                  tt *
                    (222.5657 -
                      441199.8173 * e -
                      91.506 * r -
                      14.307 * s +
                      6.797 * o)
                ) -
              0.00496 *
                Math.sin(
                  tt *
                    (162.8868 -
                      31931.7561 * e -
                      106.271 * r -
                      12.516 * s +
                      5.913 * o)
                ) -
              0.00472 *
                Math.sin(
                  tt *
                    (297.8502 +
                      445267.1115 * e -
                      16.3 * r +
                      1.832 * s -
                      0.884 * o)
                ) -
              0.00271 *
                Math.sin(
                  tt *
                    (240.6422 +
                      818536.1225 * e -
                      29.529 * r +
                      3.582 * s -
                      1.769 * o)
                ) +
              0.00264 *
                Math.sin(
                  tt *
                    (132.4925 +
                      513197.9179 * e +
                      88.434 * r +
                      14.388 * s -
                      6.797 * o)
                ) -
              0.00254 *
                Math.sin(
                  tt *
                    (186.5442 +
                      966404.0351 * e -
                      68.058 * r -
                      0.567 * s +
                      0.232 * o)
                ) +
              0.00234 *
                Math.sin(
                  tt *
                    (269.9268 +
                      954397.7353 * e +
                      179.941 * r +
                      28.695 * s -
                      13.594 * o)
                ) -
              0.0022 *
                Math.sin(
                  tt *
                    (13.1347 +
                      1331734.0404 * e +
                      58.906 * r +
                      17.971 * s -
                      8.566 * o)
                ) -
              0.00202 *
                Math.sin(
                  tt *
                    (355.0582 + 71998.1006 * e - 3.072 * r + 0.082 * s + 0 * o)
                ) +
              0.00167 *
                Math.sin(
                  tt *
                    (328.2445 -
                      99862.5625 * e -
                      211.005 * r -
                      25.072 * s +
                      11.826 * o)
                ) -
              0.00143 *
                Math.sin(
                  tt *
                    (173.5506 +
                      1335801.3346 * e -
                      48.901 * r +
                      5.496 * s -
                      2.653 * o)
                ) -
              0.00121 *
                Math.sin(
                  tt *
                    (98.2661 +
                      449334.4057 * e -
                      124.107 * r -
                      10.643 * s +
                      5.028 * o)
                ) -
              0.00116 *
                Math.sin(
                  tt *
                    (145.6272 +
                      1844931.9583 * e +
                      147.34 * r +
                      32.359 * s -
                      15.363 * o)
                ) +
              0.00102 *
                Math.sin(
                  tt *
                    (105.6788 +
                      341337.2548 * e -
                      119.499 * r -
                      10.765 * s +
                      5.028 * o)
                ) -
              9e-4 *
                Math.sin(
                  tt *
                    (184.1196 +
                      401329.0556 * e +
                      125.428 * r +
                      18.579 * s -
                      8.798 * o)
                ) -
              86e-5 *
                Math.sin(
                  tt *
                    (338.9083 +
                      1267870.5281 * e -
                      153.636 * r -
                      7.061 * s +
                      3.259 * o)
                ) -
              78e-5 *
                Math.sin(
                  tt *
                    (111.4008 +
                      1781068.4461 * e -
                      65.201 * r +
                      7.328 * s -
                      3.538 * o)
                ) +
              69e-5 *
                Math.sin(
                  tt *
                    (323.3027 -
                      27864.4619 * e -
                      214.077 * r -
                      24.99 * s +
                      11.826 * o)
                ) +
              66e-5 *
                Math.sin(
                  tt *
                    (51.6271 -
                      111868.8623 * e +
                      36.994 * r +
                      4.19 * s -
                      2.001 * o)
                ) +
              65e-5 *
                Math.sin(
                  tt *
                    (38.5872 +
                      858602.4669 * e -
                      138.871 * r -
                      8.852 * s +
                      4.144 * o)
                ) -
              6e-4 *
                Math.sin(
                  tt *
                    (83.3826 -
                      12006.2998 * e +
                      247.999 * r +
                      29.262 * s -
                      13.826 * o)
                ) +
              54e-5 *
                Math.sin(
                  tt *
                    (201.474 +
                      826670.7108 * e -
                      245.142 * r -
                      21.367 * s +
                      10.057 * o)
                ) -
              52e-5 *
                Math.sin(
                  tt *
                    (308.4192 -
                      489205.1674 * e +
                      158.029 * r +
                      14.915 * s -
                      7.029 * o)
                ) +
              48e-5 *
                Math.sin(
                  tt *
                    (8.1929 +
                      1403732.141 * e +
                      55.834 * r +
                      18.052 * s -
                      8.566 * o)
                ) -
              41e-5 *
                Math.sin(
                  tt *
                    (46.6853 -
                      39870.7617 * e +
                      33.922 * r +
                      4.272 * s -
                      2.001 * o)
                ) -
              33e-5 *
                Math.sin(
                  tt *
                    (274.1928 -
                      553068.6797 * e -
                      54.513 * r -
                      10.116 * s +
                      4.797 * o)
                ) +
              3e-4 *
                Math.sin(
                  tt *
                    (160.4159 +
                      4067.2942 * e -
                      107.806 * r -
                      12.475 * s +
                      5.913 * o)
                )) +
            0.001 *
              (3.96 * Math.sin(tt * (119.7 + 131.8 * e)) +
                1.96 * Math.sin(tt * (125 - 1934.1 * e)) +
                (0.463 * Math.sin(tt * (357.5 + 35999.1 * e)) +
                  0.152 * Math.sin(tt * (238.2 + 854535.2 * e)) -
                  0.071 * Math.sin(tt * (27.8 + 131.8 * e)) -
                  0.055 * Math.sin(tt * (103.2 + 377336.3 * e)) -
                  0.026 * Math.sin(tt * (233.2 + 926533.3 * e))) *
                  e +
                (14 * Math.sin(tt * (357.5 + 35999.1 * e)) +
                  5 * Math.sin(tt * (238.2 + 854535.2 * e))) *
                  r);
        return (
          (t.a = i),
          (t.e = l),
          (t.i = 2 * Math.asin(c)),
          (t.w = mt(tt * (p - d))),
          (t.N = mt(tt * d)),
          (t.M = mt(tt * (u - p))),
          t
        );
      },
      corr: function (t, e) {
        var a = mt(e.M + Math.PI),
          n = mt(e.w + Math.PI),
          r = t.M + t.w,
          s = r + t.N - a - n,
          o =
            -0.022234 * Math.sin(t.M - 2 * s) +
            0.011494 * Math.sin(2 * s) +
            -0.003246 * Math.sin(a) +
            -0.001029 * Math.sin(2 * t.M - 2 * s) +
            -994838e-9 * Math.sin(t.M - 2 * s + a) +
            925025e-9 * Math.sin(t.M + 2 * s) +
            802851e-9 * Math.sin(2 * s - a) +
            715585e-9 * Math.sin(t.M - a) +
            -610865e-9 * Math.sin(s) +
            -541052e-9 * Math.sin(t.M + a) +
            -261799e-9 * Math.sin(2 * r - 2 * s) +
            191986e-9 * Math.sin(t.M - 4 * s);
        t.ra += o;
        var i =
          -0.003019 * Math.sin(r - 2 * s) +
          -959931e-9 * Math.sin(t.M - r - 2 * s) +
          -802851e-9 * Math.sin(t.M + r - 2 * s) +
          575958e-9 * Math.sin(r + 2 * s) +
          296706e-9 * Math.sin(2 * t.M + r);
        return (
          (t.dec += i),
          (t.age = mt(t.l - e.l + Math.PI)),
          (t.phase = 0.5 * (1 - Math.cos(t.age))),
          t
        );
      },
    },
    Tt = d3.map({
      ellipse: function (t, e) {
        var a = Math.sqrt(t),
          n = 0.666 * a,
          r = a / 3;
        return (
          "M" +
          -n +
          "," +
          -r +
          " m" +
          -n +
          ",0 a" +
          n +
          "," +
          r +
          " 0 1,0" +
          2 * n +
          ",0 a" +
          n +
          "," +
          r +
          " 0 1,0" +
          -2 * n +
          ",0"
        );
      },
      marker: function (t, e) {
        var a = (t > 48 ? t / 4 : 12) / 2,
          n = a - 3;
        return (
          "M " +
          -a +
          " 0 h " +
          n +
          " M 0 " +
          -a +
          " v " +
          n +
          " M " +
          a +
          " 0 h " +
          -n +
          " M 0 " +
          a +
          " v " +
          -n
        );
      },
      "cross-circle": function (t, e) {
        var a = Math.sqrt(t),
          n = a / 2;
        return (
          "M" +
          -n +
          "," +
          -n +
          " m" +
          -n +
          ",0 a" +
          n +
          "," +
          n +
          " 0 1,0" +
          2 * n +
          ",0 a" +
          n +
          "," +
          n +
          " 0 1,0" +
          -2 * n +
          ",0 M" +
          -n +
          " 0 h " +
          a +
          " M 0 " +
          -n +
          " v " +
          a
        );
      },
      "stroke-circle": function (t, e) {
        var a = Math.sqrt(t),
          n = a / 2;
        return (
          "M" +
          -n +
          "," +
          -n +
          " m" +
          -n +
          ",0 a" +
          n +
          "," +
          n +
          " 0 1,0" +
          2 * n +
          ",0 a" +
          n +
          "," +
          n +
          " 0 1,0" +
          -2 * n +
          ",0 M" +
          (-a - 2) +
          "," +
          (-a - 2) +
          " l" +
          (a + 4) +
          "," +
          (a + 4)
        );
      },
      crescent: function (t, e) {
        var a = Math.sqrt(t) / 2,
          n = 0.5 * (1 - Math.cos(e)),
          r = 1.6 * Math.abs(n - 0.5) + 0.01,
          s = e > Math.PI ? 0 : 1;
        return (
          "M -1,-1 m 1," +
          (1 - a) +
          " a" +
          a +
          "," +
          a +
          " 0 1 " +
          s +
          " 0," +
          2 * a +
          " a" +
          a * r +
          "," +
          a +
          " 0 1 " +
          (Math.abs(n) > 0.5 ? s : Math.abs(s - 1)) +
          " 0," +
          -2 * a +
          "z"
        );
      },
    });
  d3.svg.customSymbol = function () {
    function t(t, r) {
      return Tt.get(e.call(this, t, r))(a.call(this, t, r), n.call(this, t, r));
    }
    var e,
      a = 64,
      n = d3.functor(1);
    return (
      (t.type = function (a) {
        return arguments.length ? ((e = d3.functor(a)), t) : e;
      }),
      (t.size = function (e) {
        return arguments.length ? ((a = d3.functor(e)), t) : a;
      }),
      (t.ratio = function (e) {
        return arguments.length ? ((n = d3.functor(e)), t) : n;
      }),
      t
    );
  };
  var jt = null;
  U.exportSVG = function (t) {
    t && ((jt = t), O());
  };
  var Pt = function (t, e) {
    function a() {
      var t = D("mon").value,
        e = D("yr").value,
        a = new Date(e, t, 1),
        n = d3.select(N + " ~ #celestial-form").select("#cal"),
        r = new Date();
      (e = parseInt(e)), (t = parseInt(t)), a.setDate(a.getDate() - a.getDay());
      for (var s = n.node(); s.firstChild; ) s.removeChild(s.firstChild);
      for (var o = 0; o < 7; o++)
        n.append("div").classed({ date: !0, weekday: !0 }).html(f[o]);
      for (o = 0; o < 42; o++) {
        var i = a.getMonth(),
          l = a.getDay(),
          d = m(a);
        n
          .append("div")
          .classed({
            date: !0,
            grey: i !== t,
            weekend: i === t && (0 === l || 6 === l),
            today: 0 === b(a, r),
            selected: 0 === b(a, p),
          })
          .attr("id", d)
          .on("click", c)
          .html(a.getDate().toString()),
          a.setDate(a.getDate() + 1);
      }
    }
    function n() {
      var t = d3.select(N + " ~ #celestial-form").select("select#yr"),
        e = p.getFullYear(),
        a = 0,
        n = s(p);
      t.selectAll("*").remove(),
        t
          .selectAll("option")
          .data(n)
          .enter()
          .append("option")
          .text(function (t, n) {
            return t === e && (a = n), t.toString();
          }),
        t.property("selectedIndex", a);
    }
    function r(t) {
      g.append("div")
        .attr("id", t)
        .on("click", function () {
          var e = D("mon"),
            n = D("yr");
          "left" === t
            ? 0 === e.selectedIndex
              ? ((e.selectedIndex = 11), n.selectedIndex--)
              : e.selectedIndex--
            : 11 === e.selectedIndex
            ? ((e.selectedIndex = 0), n.selectedIndex++)
            : e.selectedIndex++,
            a();
        });
    }
    function s(t) {
      for (
        var e = (function (t) {
            return !y || y.length < 1
              ? [t - 10, t + 10]
              : 1 === y.length && v(y[0])
              ? y[0] >= 100
                ? [y[0] - 10, y[0] + 10]
                : [t - y[0], t + y[0]]
              : 2 === y.length && v(y[0]) && v(y[1])
              ? y[1] >= 100
                ? [y[0], y[1]]
                : [y[0] - y[1], y[0] + y[1]]
              : [t - 10, t + 10];
          })(t.getFullYear()),
          a = [],
          n = e[0];
        n <= e[1];
        n++
      )
        a.push(n);
      return a;
    }
    function o(t, e) {
      for (var a = D(t), n = 0; n < a.childNodes.length; n++)
        if (a.childNodes[n].value == e) {
          a.selectedIndex = n;
          break;
        }
    }
    function i(t) {
      t && p.setTime(t.valueOf()),
        o("yr", p.getFullYear()),
        o("mon", p.getMonth()),
        a(),
        (D("hr").value = p.getHours()),
        (D("min").value = p.getMinutes()),
        (D("sec").value = p.getSeconds());
    }
    function l() {
      d3
        .select(N + " ~ #celestial-form")
        .select("#celestial-date")
        .style("opacity", 0),
        d3
          .select("#error")
          .style({ top: "-9999px", left: "-9999px", opacity: 0 }),
        d3
          .select(N + " ~ #celestial-form")
          .select("#datepick")
          .classed("active", !1),
        setTimeout(function () {
          D("celestial-date").style.top = h(-9999);
        }, 600);
    }
    function c() {
      var t = D("hr").value,
        a = D("min").value,
        r = D("sec").value,
        s = D("tz").value;
      this.id && -1 !== this.id.search(/^\d/) && (p = m.parse(this.id)),
        n(),
        p.setHours(t, a, r),
        i(),
        e(p, s);
    }
    var p = new Date(),
      d =
        (d3.time.format("%Z"),
        [
          { "−12:00": -720 },
          { "−11:00": -660 },
          { "−10:00": -600 },
          { "−09:30": -570 },
          { "−09:00": -540 },
          { "−08:00": -480 },
          { "−07:00": -420 },
          { "−06:00": -360 },
          { "−05:00": -300 },
          { "−04:30": -270 },
          { "−04:00": -240 },
          { "−03:30": -210 },
          { "−03:00": -180 },
          { "−02:30": -150 },
          { "−02:00": -120 },
          { "−01:00": -60 },
          { "±00:00": 0 },
          { "+01:00": 60 },
          { "+02:00": 120 },
          { "+03:00": 180 },
          { "+03:30": 210 },
          { "+04:00": 240 },
          { "+04:30": 270 },
          { "+05:00": 300 },
          { "+05:30": 330 },
          { "+05:45": 345 },
          { "+06:00": 360 },
          { "+06:30": 390 },
          { "+07:00": 420 },
          { "+08:00": 480 },
          { "+08:30": 510 },
          { "+08:45": 525 },
          { "+09:00": 540 },
          { "+09:30": 570 },
          { "+10:00": 600 },
          { "+10:30": 630 },
          { "+11:00": 660 },
          { "+12:00": 720 },
          { "+12:45": 765 },
          { "+13:00": 780 },
          { "+14:00": 840 },
        ]),
      u = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      f = ["Su", "M", "Tu", "W", "Th", "F", "Sa"],
      m = (s(p), d3.time.format("%Y-%m-%d")),
      y = t.daterange || [],
      g = d3
        .select(N + " ~ #celestial-form")
        .append("div")
        .attr("id", "celestial-date");
    r("left"),
      (function () {
        var t = g
            .append("select")
            .attr("title", "Month")
            .attr("id", "mon")
            .on("change", a),
          e = 0,
          n = p.getMonth();
        t
          .selectAll("option")
          .data(u)
          .enter()
          .append("option")
          .attr("value", function (t, a) {
            return a === n && (e = a), a;
          })
          .text(function (t) {
            return t;
          }),
          t.property("selectedIndex", e);
      })(),
      g.append("select").attr("title", "Year").attr("id", "yr").on("change", a),
      n(),
      r("right"),
      g.append("div").attr("id", "cal"),
      a(),
      g
        .append("input")
        .attr("type", "number")
        .attr("id", "hr")
        .attr("title", "Hours")
        .attr("max", "24")
        .attr("min", "-1")
        .attr("step", "1")
        .attr("value", p.getHours())
        .on("change", function () {
          !0 === j(this) && c();
        }),
      g
        .append("input")
        .attr("type", "number")
        .attr("id", "min")
        .attr("title", "Minutes")
        .attr("max", "60")
        .attr("min", "-1")
        .attr("step", "1")
        .attr("value", p.getMinutes())
        .on("change", function () {
          !0 === j(this) && c();
        }),
      g
        .append("input")
        .attr("type", "number")
        .attr("id", "sec")
        .attr("title", "Seconds")
        .attr("max", "60")
        .attr("min", "-1")
        .attr("step", "1")
        .attr("value", p.getSeconds())
        .on("change", function () {
          !0 === j(this) && c();
        }),
      (function () {
        var t = g
            .append("select")
            .attr("title", "Time zone offset from UTC")
            .attr("id", "tz")
            .on("change", c),
          e = 15,
          a = -p.getTimezoneOffset();
        t
          .selectAll("option")
          .data(d)
          .enter()
          .append("option")
          .attr("value", function (t, n) {
            var r = Object.keys(t)[0];
            return t[r] === a && (e = n), t[r];
          })
          .text(function (t) {
            return Object.keys(t)[0];
          }),
          t.property("selectedIndex", e);
      })(),
      (this.show = function (t, e) {
        var a = D("celestial-date"),
          n = D("datepick"),
          r = n.offsetLeft + n.offsetWidth - a.offsetWidth,
          s = n.offsetTop - a.offsetHeight - 1;
        -9999 === a.offsetTop
          ? (p.setTime(t.valueOf()),
            o("tz", e),
            i(),
            d3
              .select(N + " ~ #celestial-form")
              .select("#celestial-date")
              .style({ top: h(s), left: h(r), opacity: 1 }),
            d3
              .select(N + " ~ #celestial-form")
              .select("#datepick")
              .classed("active", !0))
          : l();
      }),
      (this.isVisible = function () {
        return (
          !!document.getElementById("datepick") &&
          !0 ===
            d3
              .select(N + " ~ #celestial-form")
              .select("#datepick")
              .classed("active")
        );
      }),
      (this.hide = function () {
        l();
      });
  };
  !(function () {
    function t(t, e) {
      var a = t.invert(e);
      return a && isFinite(a[0]) && isFinite(a[1]) && o(a);
    }
    function e(t) {
      var e = 0.5 * t[0] * l,
        a = 0.5 * t[1] * l,
        n = 0.5 * t[2] * l,
        r = Math.sin(e),
        s = Math.cos(e),
        o = Math.sin(a),
        i = Math.cos(a),
        c = Math.sin(n),
        p = Math.cos(n);
      return [
        s * i * p + r * o * c,
        r * i * p - s * o * c,
        s * o * p + r * i * c,
        s * i * c - r * o * p,
      ];
    }
    function a(t, e) {
      var a = t[0],
        n = t[1],
        r = t[2],
        s = t[3],
        o = e[0],
        i = e[1],
        l = e[2],
        c = e[3];
      return [
        a * o - n * i - r * l - s * c,
        a * i + n * o + r * c - s * l,
        a * l - n * c + r * o + s * i,
        a * c + n * l - r * i + s * o,
      ];
    }
    function n(t, e) {
      if (t && e) {
        var a = (function (t, e) {
            return [
              t[1] * e[2] - t[2] * e[1],
              t[2] * e[0] - t[0] * e[2],
              t[0] * e[1] - t[1] * e[0],
            ];
          })(t, e),
          n = Math.sqrt(i(a, a)),
          r = 0.5 * Math.acos(Math.max(-1, Math.min(1, i(t, e)))),
          s = Math.sin(r) / n;
        return n && [Math.cos(r), a[2] * s, -a[1] * s, a[0] * s];
      }
    }
    function r(t, e) {
      var a = Math.max(-1, Math.min(1, i(t, e))),
        n = a < 0 ? -1 : 1,
        r = Math.acos(n * a),
        s = Math.sin(r);
      return s
        ? function (a) {
            var o = (n * Math.sin((1 - a) * r)) / s,
              i = Math.sin(a * r) / s;
            return [
              t[0] * o + e[0] * i,
              t[1] * o + e[1] * i,
              t[2] * o + e[2] * i,
              t[3] * o + e[3] * i,
            ];
          }
        : function () {
            return t;
          };
    }
    function s(t) {
      return [
        Math.atan2(
          2 * (t[0] * t[1] + t[2] * t[3]),
          1 - 2 * (t[1] * t[1] + t[2] * t[2])
        ) * c,
        Math.asin(Math.max(-1, Math.min(1, 2 * (t[0] * t[2] - t[3] * t[1])))) *
          c,
        Math.atan2(
          2 * (t[0] * t[3] + t[1] * t[2]),
          1 - 2 * (t[2] * t[2] + t[3] * t[3])
        ) * c,
      ];
    }
    function o(t) {
      var e = t[0] * l,
        a = t[1] * l,
        n = Math.cos(a);
      return [n * Math.cos(e), n * Math.sin(e), Math.sin(a)];
    }
    function i(t, e) {
      for (var a = 0, n = t.length, r = 0; a < n; ++a) r += t[a] * e[a];
      return r;
    }
    var l = Math.PI / 180,
      c = 180 / Math.PI;
    d3.geo.zoom = function () {
      function i(t) {
        f++ || t({ type: "zoomstart" });
      }
      function l(t) {
        t({ type: "zoom" });
      }
      function c(t) {
        --f || t({ type: "zoomend" });
      }
      var p,
        d,
        u,
        f = 0,
        h = (function (t) {
          for (var e = 0, a = arguments.length, n = []; ++e < a; )
            n.push(arguments[e]);
          var r = d3.dispatch.apply(null, n);
          return (
            (r.of = function (e, a) {
              return function (n) {
                try {
                  var s = (n.sourceEvent = d3.event);
                  (n.target = t), (d3.event = n), r[n.type].apply(e, a);
                } finally {
                  d3.event = s;
                }
              };
            }),
            r
          );
        })(m, "zoomstart", "zoom", "zoomend"),
        m = d3.behavior
          .zoom()
          .on("zoomstart", function () {
            var r = d3.mouse(this),
              o = e(p.rotate()),
              c = t(p, r);
            c && (u = c),
              y.call(m, "zoom", function () {
                p.scale((g.k = d3.event.scale));
                var e = d3.mouse(this),
                  i = n(u, t(p, e));
                p.rotate(
                  (g.r = s(
                    (o = i
                      ? a(o, i)
                      : a(
                          (function (t, e, a) {
                            var n = t.translate(),
                              r =
                                Math.atan2(e[1] - n[1], e[0] - n[0]) -
                                Math.atan2(a[1] - n[1], a[0] - n[0]);
                            return [Math.cos(r / 2), 0, 0, Math.sin(r / 2)];
                          })(p, r, e),
                          o
                        ))
                  ))
                ),
                  (r = e),
                  l(h.of(this, arguments));
              }),
              i(h.of(this, arguments));
          })
          .on("zoomend", function () {
            y.call(m, "zoom", null), c(h.of(this, arguments));
          }),
        y = m.on,
        g = { r: [0, 0, 0], k: 1 };
      return (
        (m.rotateTo = function (t) {
          var r = n(o(t), o([-g.r[0], -g.r[1]]));
          return s(a(e(g.r), r));
        }),
        (m.projection = function (t) {
          return arguments.length
            ? ((g = { r: (p = t).rotate(), k: p.scale() }), m.scale(g.k))
            : p;
        }),
        (m.duration = function (t) {
          return arguments.length ? ((d = t), m) : d;
        }),
        (m.event = function (t) {
          t.each(function () {
            var t = d3.select(this),
              a = h.of(this, arguments),
              n = g,
              o = d3.transition(t);
            if (o !== t) {
              o.each("start.zoom", function () {
                this.__chart__ &&
                  ((g = this.__chart__).hasOwnProperty("r") ||
                    (g.r = p.rotate())),
                  p.rotate(g.r).scale(g.k),
                  i(a);
              })
                .tween("zoom:zoom", function () {
                  var t = m.size()[0],
                    i = r(e(g.r), e(n.r)),
                    c = d3.geo.distance(g.r, n.r),
                    u = d3.interpolateZoom([0, 0, t / g.k], [c, 0, t / n.k]);
                  return (
                    d && o.duration(d(0.001 * u.duration)),
                    function (e) {
                      var n = u(e);
                      (this.__chart__ = g = { r: s(i(n[0] / c)), k: t / n[2] }),
                        p.rotate(g.r).scale(g.k),
                        m.scale(g.k),
                        l(a);
                    }
                  );
                })
                .each("end.zoom", function () {
                  c(a);
                });
              try {
                o.each("interrupt.zoom", function () {
                  c(a);
                });
              } catch (t) {
                console.log(t);
              }
            } else (this.__chart__ = g), i(a), l(a), c(a);
          });
        }),
        d3.rebind(m, h, "on")
      );
    };
  })(),
    (function (t, e) {
      "object" == typeof exports && "undefined" != typeof module
        ? e(exports)
        : "function" == typeof define && define.amd
        ? define(["exports"], e)
        : e((t.d3 = t.d3 || {}));
    })(this, function (t) {
      "use strict";
      function e(t) {
        (this._size = t),
          (this._call = this._error = null),
          (this._tasks = []),
          (this._data = []),
          (this._waiting = this._active = this._ended = this._start = 0);
      }
      function a(t) {
        if (!t._start)
          try {
            !(function (t) {
              for (; (t._start = t._waiting && t._active < t._size); ) {
                var e = t._ended + t._active,
                  a = t._tasks[e],
                  r = a.length - 1,
                  s = a[r];
                (a[r] = n(t, e)),
                  --t._waiting,
                  ++t._active,
                  (a = s.apply(null, a)),
                  t._tasks[e] && (t._tasks[e] = a || l);
              }
            })(t);
          } catch (e) {
            if (t._tasks[t._ended + t._active - 1]) r(t, e);
            else if (!t._data) throw e;
          }
      }
      function n(t, e) {
        return function (n, o) {
          t._tasks[e] &&
            (--t._active,
            ++t._ended,
            (t._tasks[e] = null),
            null == t._error &&
              (null != n
                ? r(t, n)
                : ((t._data[e] = o), t._waiting ? a(t) : s(t))));
        };
      }
      function r(t, e) {
        var a,
          n = t._tasks.length;
        for (t._error = e, t._data = void 0, t._waiting = NaN; --n >= 0; )
          if ((a = t._tasks[n]) && ((t._tasks[n] = null), a.abort))
            try {
              a.abort();
            } catch (e) {}
        (t._active = NaN), s(t);
      }
      function s(t) {
        if (!t._active && t._call) {
          var e = t._data;
          (t._data = void 0), t._call(t._error, e);
        }
      }
      function o(t) {
        if (null == t) t = 1 / 0;
        else if (!((t = +t) >= 1)) throw new Error("invalid concurrency");
        return new e(t);
      }
      var i = [].slice,
        l = {};
      (e.prototype = o.prototype =
        {
          constructor: e,
          defer: function (t) {
            if ("function" != typeof t) throw new Error("invalid callback");
            if (this._call) throw new Error("defer after await");
            if (null != this._error) return this;
            var e = i.call(arguments, 1);
            return (
              e.push(t), ++this._waiting, this._tasks.push(e), a(this), this
            );
          },
          abort: function () {
            return null == this._error && r(this, new Error("abort")), this;
          },
          await: function (t) {
            if ("function" != typeof t) throw new Error("invalid callback");
            if (this._call) throw new Error("multiple await");
            return (
              (this._call = function (e, a) {
                t.apply(null, [e].concat(a));
              }),
              s(this),
              this
            );
          },
          awaitAll: function (t) {
            if ("function" != typeof t) throw new Error("invalid callback");
            if (this._call) throw new Error("multiple await");
            return (this._call = t), s(this), this;
          },
        }),
        (t.queue = o),
        (d3.queue = o),
        Object.defineProperty(t, "__esModule", { value: !0 });
    }),
    (this.Celestial = U);
})();
